<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SunnyMES.Commons</name>
    </assembly>
    <members>
        <member name="T:SunnyMES.Commons.Attributes.AppDbContextFactoryAttribute">
            <summary>
            数据库上下文配置
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Attributes.AppDbContextFactoryAttribute.DbConfigName">
            <summary>
            数据库配置名称
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Attributes.AppDbContextFactoryAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="dbConfigName">数据库配置名称</param>
        </member>
        <member name="T:SunnyMES.Commons.Attributes.ForceCheckAttribute">
            <summary>
            指示字段必须进行插入检查
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Attributes.ShardingTableAttribute">
            <summary>
            数据库分表特性
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Attributes.ShardingTableAttribute.Splitter">
            <summary>
            分隔符
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Attributes.ShardingTableAttribute.Suffix">
            <summary>
            分表后缀格式。默认值：_yyyyMMdd
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Attributes.ShardingTableAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SunnyMES.Commons.Attributes.ShardingTableAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="splitter"></param>
            <param name="suffix"></param>
        </member>
        <member name="T:SunnyMES.Commons.Attributes.UnitOfWorkAttribute">
            <summary>
            工作单元
            仅用来做特性标记 
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Cache.CacheProvider">
            <summary>
            缓存提供模式，使用Redis或MemoryCache
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Cache.CacheProvider.IsUseRedis">
            <summary>
            是否使用Redis
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Cache.CacheProvider.ConnectionString">
            <summary>
            Redis连接
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Cache.CacheProvider.InstanceName">
            <summary>
            Redis实例名称
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Cache.ICacheService">
            <summary>
            缓存服务接口
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.Exists(System.String)">
            <summary>
            验证缓存项是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.Add(System.String,System.Object)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.Add(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.Add(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.Remove(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            批量删除缓存
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.RemoveByPattern(System.String)">
            <summary>
            使用通配符找出所有的key然后逐个删除
            </summary>
            <param name="pattern">通配符</param>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.RemoveCacheAll">
            <summary>
            删除所有缓存
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.GetAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取缓存集合
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.Replace(System.String,System.Object)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.Replace(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.ICacheService.Replace(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Cache.MemoryCacheHelper">
            <summary>
            内存缓存操作类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheHelper.Set(System.String,System.Object,System.Int32)">
            <summary>
            用键和值将某个缓存项插入缓存中，并指定基于时间的过期详细信息
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="I_Hours"></param>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheHelper.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheHelper.Remove(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:SunnyMES.Commons.Cache.MemoryCacheService">
            <summary>
            MemoryCache缓存操作
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Cache.MemoryCacheService._cache">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.Exists(System.String)">
            <summary>
            验证缓存项是否存在,TryGetValue 来检测 Key是否存在的
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.Add(System.String,System.Object)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.Add(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.Add(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.Remove(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            批量删除缓存
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.RemoveCacheAll">
            <summary>
            删除所有缓存
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.RemoveByPattern(System.String)">
            <summary>
            删除匹配到的缓存
            </summary>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.SearchCacheRegex(System.String)">
             <summary>
             搜索 匹配到的缓存
            </summary>
             <param name="pattern"></param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.GetAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取缓存集合
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.GetCacheKeys">
            <summary>
            获取所有缓存键
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.Replace(System.String,System.Object)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.Replace(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.Replace(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.MemoryCacheService.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Cache.RedisCacheService">
            <summary>
            Redis缓存操作
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Cache.RedisCacheService._cache">
            <summary>
            
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Cache.RedisCacheService._connection">
            <summary>
            
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Cache.RedisCacheService._instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.#ctor(Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions,System.Text.Json.JsonSerializerOptions,System.Int32)">
            <summary>
            
            </summary>
            <param name="options"></param>
            <param name="database"></param>
            <param name="jsonOptions"></param>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.GetKeyForRedis(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.Exists(System.String)">
            <summary>
            验证缓存项是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.ExistsAsync(System.String)">
            <summary>
            验证缓存项是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.Add(System.String,System.Object)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.Add(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间,Redis中无效）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.Add(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间,Redis中无效）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.AddAsync(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.AddAsync(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expiresSliding"></param>
            <param name="expiressAbsoulte"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.AddAsync(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expiresIn"></param>
            <param name="isSliding"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.Remove(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            批量删除缓存
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.RemoveAsync(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.RemoveAllAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.RemoveByPattern(System.String)">
            <summary>
            使用通配符找出所有的key然后逐个删除
            </summary>
            <param name="pattern">通配符</param>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.RemoveCacheAll">
            <summary>
            删除所有缓存
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.GetAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取缓存集合
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.GetAsync``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.GetAsync(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.GetAllAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.Replace(System.String,System.Object)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.Replace(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.Replace(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.RedisCacheService.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Cache.YuebonCacheHelper">
            <summary>
            缓存操作帮助类
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Cache.YuebonCacheHelper.cacheProvider">
            <summary>
            缓存提供模式
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Cache.YuebonCacheHelper.cacheservice">
            <summary>
            缓存接口
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.#ctor(System.Boolean)">
            <summary>
            使用MemoryCache缓存操作
            </summary>
            <param name="isMemoryCache">是否使用MemoryCache</param>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.Exists(System.String)">
            <summary>
            验证缓存项是否存在,TryGetValue 来检测 Key是否存在的
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.Add(System.String,System.Object)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.Add(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.Add(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.Remove(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            批量删除缓存
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.RemoveByPattern(System.String)">
            <summary>
            删除匹配到的缓存
            </summary>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.RemoveCacheAll">
            <summary>
            删除所有缓存
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.GetAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取缓存集合
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.Replace(System.String,System.Object)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.Replace(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiressAbsoulte">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cache.YuebonCacheHelper.Replace(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            修改缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">新的缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.CodeGenerator.CodeGenerator">
            <summary>
            代码生成器。
            <remarks>
            根据指定的实体域名空间生成Repositories和Services层的基础代码文件。
            </remarks>
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.CodeGenerator.CodeGenerator._option">
            <summary>
            代码生成器配置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.CodeGenerator.CodeGenerator.inputDtoNoField">
            <summary>
            InputDto输入实体是不包含字段
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.#cctor">
            <summary>
            静态构造函数：从IoC容器读取配置参数，如果读取失败则会抛出ArgumentNullException异常
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.Generate(System.String,System.String,System.String,System.Boolean)">
            <summary>
            代码生成器入口方法
            </summary>
            <param name="baseNamespace"></param>
            <param name="tableList">要生成代码的表</param>
            <param name="replaceTableNameStr">要删除表名称的字符</param>
            <param name="ifExsitedCovered">是否替换现有文件，为true时替换</param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.GenerateSingle(System.Collections.Generic.List{SunnyMES.Commons.CodeGenerator.DbFieldInfo},SunnyMES.Commons.CodeGenerator.DbTableInfo,System.Boolean)">
            <summary>
            单表生成代码
            </summary>
            <param name="listField">表字段集合</param>
            <param name="tableInfo">表信息</param>
            <param name="ifExsitedCovered">如果目标文件存在，是否覆盖。默认为false</param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.ReadTemplate(System.String)">
            <summary>
            从代码模板中读取内容
            </summary>
            <param name="templateName">模板名称，应包括文件扩展名称。比如：template.txt</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.GenerateIRepository(System.String,System.String,System.String,System.Boolean)">
            <summary>
            生成IRepository层代码文件
            </summary>
            <param name="modelTypeName">实体类型</param>
            <param name="modelTypeDesc"></param>
            <param name="keyTypeName"></param>
            <param name="ifExsitedCovered">如果目标文件存在，是否覆盖。默认为false</param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.GenerateRepository(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            生成Repository层代码文件
            </summary>
            <param name="modelTypeName"></param>
            <param name="modelTypeDesc"></param>
            <param name="tableName">表名</param>
            <param name="keyTypeName"></param>
            <param name="ifExsitedCovered">如果目标文件存在，是否覆盖。默认为false</param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.GenerateIService(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            生成IService文件
            </summary>
            <param name="modelsNamespace"></param>
            <param name="modelTypeName"></param>
            <param name="modelTypeDesc"></param>
            <param name="keyTypeName"></param>
            <param name="ifExsitedCovered">如果目标文件存在，是否覆盖。默认为false</param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.GenerateService(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            生成Service文件
            </summary>
            <param name="modelsNamespace"></param>
            <param name="modelTypeName"></param>
            <param name="modelTypeDesc"></param>
            <param name="keyTypeName"></param>
            <param name="ifExsitedCovered">如果目标文件存在，是否覆盖。默认为false</param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.GenerateOutputDto(System.String,System.String,System.String,System.Boolean)">
            <summary>
            生成OutputDto文件
            </summary>
            <param name="modelTypeName"></param>
            <param name="modelTypeDesc"></param>
            <param name="modelContent"></param>
            <param name="ifExsitedCovered"></param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.GenerateInputDto(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            生成InputDto文件
            </summary>
            <param name="modelsNamespace"></param>
            <param name="modelTypeName"></param>
            <param name="modelTypeDesc"></param>
            <param name="modelContent"></param>
            <param name="keyTypeName"></param>
            <param name="ifExsitedCovered">如果目标文件存在，是否覆盖。默认为false</param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.GenerateDtoProfile(System.String,System.String,System.Boolean)">
            <summary>
            生成Profile文件
            </summary>
            <param name="modelsNamespace"></param>
            <param name="profileContent"></param>
            <param name="ifExsitedCovered">如果目标文件存在，是否覆盖。默认为false</param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.GenerateModels(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            生成Models文件
            </summary>
            <param name="modelsNamespace">命名空间</param>
            <param name="modelTypeName">类名</param>
            <param name="tableName">表名称</param>
            <param name="modelTypeDesc">表描述</param>
            <param name="modelContent">数据库表实体内容</param>
            <param name="keyTypeName">主键数据类型</param>
            <param name="ifExsitedCovered">如果目标文件存在，是否覆盖。默认为false</param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.GenerateControllers(System.String,System.String,System.String,System.Boolean)">
            <summary>
            生成控制器ApiControllers文件
            </summary>
            <param name="modelTypeName">实体类型名称</param>
            <param name="modelTypeDesc">实体描述</param>
            <param name="keyTypeName"></param>
            <param name="ifExsitedCovered">如果目标文件存在，是否覆盖。默认为false</param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.GenerateVueViews(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            生成Vue页面
            </summary>
            <param name="modelTypeName">类名</param>
            <param name="modelTypeDesc">表/类描述</param>
            <param name="vueViewListContent"></param>
            <param name="vueViewFromContent"></param>
            <param name="vueViewEditFromContent"></param>
            <param name="vueViewEditFromBindContent"></param>
            <param name="vueViewSaveBindContent"></param>
            <param name="vueViewEditFromRuleContent"></param>
            <param name="ifExsitedCovered">如果目标文件存在，是否覆盖。默认为false</param>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.CodeGenerator.WriteAndSave(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="fileName"></param>
            <param name="content"></param>
        </member>
        <member name="T:SunnyMES.Commons.CodeGenerator.DataBaseInfo">
            <summary>
            数据库模型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DataBaseInfo.DbName">
            <summary>
            数据库名称
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbExtractor.GetAllDataBases">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbExtractor.GetWhereTables(System.String)">
            <summary>
            获取数据所有表信息
            </summary>
            <param name="tablelist">数据库表名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbExtractor.GetAllColumns(System.String)">
            <summary>
            获取表的所有字段名及字段类型
            </summary>
            <param name="tableName">数据表的名称</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.CodeGenerator.DbExtractorAbstract">
            <summary>
            实现了基本方法的数据库抽取器基类
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbExtractorAbstract.defaultSqlConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.CodeGenerator.DbExtractorAbstract.dbConfigName">
            <summary>
            数据库配置名称
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbExtractorAbstract.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbExtractorAbstract.OpenSharedConnection">
            <summary>
            数据库连接,根据数据库类型自动识别，类型区分用配置名称是否包含主要关键字
            MSSQL、MYSQL、ORACLE、SQLITE、MEMORY、NPGSQL
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbExtractorAbstract.GetAllTablesInternal(System.String)">
            <summary>
            获取数据库的所有表的信息，
            请定义TABLE_NAME 和 COMMENTS 字段的脚本
            </summary>
            <param name="sql">具体的脚本</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbExtractorAbstract.GetAllDataBaseInternal(System.String)">
            <summary>
            获取所有数据库信息，
            </summary>
            <param name="sql">具体的脚本</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbExtractorAbstract.GetAllTablesInternal(System.String,SunnyMES.Commons.Pages.PagerInfo)">
            <summary>
            获取数据库的所有表的信息，
            请定义TABLE_NAME 和 COMMENTS 字段的脚本
            </summary>
            <param name="sql">具体的脚本</param>
            <param name="info">分页信息</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbExtractorAbstract.GetAllColumnsInternal(System.String)">
            <summary>
            获取表的所有字段名及字段类型
            </summary>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.CodeGenerator.DbFieldInfo">
            <summary>
            表的字段
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbFieldInfo.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbFieldInfo.FieldName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbFieldInfo.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbFieldInfo.DataType">
            <summary>
            系统数据类型，如 int
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbFieldInfo.FieldType">
            <summary>
            数据库里面存放的类型。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbFieldInfo.FieldScale">
            <summary>
            代表小数位精度。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbFieldInfo.FieldPrecision">
            <summary>
            数据精度，仅数字类型有效，总共多少位数字（10进制）。
            在MySql里面代表了字段长度
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbFieldInfo.FieldMaxLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbFieldInfo.IsNullable">
            <summary>
            可空
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbFieldInfo.IsIdentity">
            <summary>
            是否为主键字段
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbFieldInfo.Increment">
            <summary>
            【未用上】该字段是否自增
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbFieldInfo.FieldDefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTable.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTable.TableComment">
            <summary>
            表说明
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTable.Columns">
            <summary>
            字段集合
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.TableName">
            <summary>
            表名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.ColName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.Alias">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.IsIdentity">
            <summary>
            是否自增
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.IsPrimaryKey">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.ColumnType">
            <summary>
            字段数据类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.ColumnLength">
            <summary>
            字段数据长度
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.IsNullable">
            <summary>
            是否允许为空
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.Comments">
            <summary>
            字段说明
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.CSharpType">
            <summary>
            C#数据类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.DataPrecision">
            <summary>
            数据精度
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableColumn.DataScale">
            <summary>
            数据刻度
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.CodeGenerator.DbTableInfo">
            <summary>
            数据表的信息
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableInfo.TableName">
            <summary>
            表格ID，表的名称。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableInfo.Description">
            <summary>
            表的别称，或者描述
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.DbTableInfo.Fileds">
            <summary>
            字段列表
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbTableInfo.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbTableInfo.GetIdentityList">
            <summary>
            获取主键的名称列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbTableInfo.GetIdentityFields">
            <summary>
            获取主键字段列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbTableInfo.GetIsNullableFields">
            <summary>
            获取可空字段。
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.DbTableInfo.GetNotNullableFields">
            <summary>
            获取不可空字段。
            </summary>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.CodeGenerator.IDbExtractor">
            <summary>
            数据库操作接口
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.IDbExtractor.GetAllDataBases">
            <summary>
            获取数据库信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.IDbExtractor.GetWhereTables(System.String)">
            <summary>
            获取数据库表的信息
            </summary>
            <param name="tablelist">数据库表名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.IDbExtractor.GetTablesWithPage(System.String,System.String,System.Boolean,SunnyMES.Commons.Pages.PagerInfo)">
            <summary>
            根据条件获取数据库的所有表的信息
            </summary>
            <param name="strwhere"></param>
            <param name="fieldNameToSort"></param>
            <param name="isDescending"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.IDbExtractor.GetAllColumns(System.String)">
            <summary>
            获取表的所有字段名及字段类型
            </summary>
            <param name="tableName">数据表的名称</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.CodeGenerator.MssqlExtractor">
            <summary>
            MS SQL
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MssqlExtractor.GetAllDataBases">
            <summary>
            获取数据库信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MssqlExtractor.GetAllTables(System.String)">
            <summary>
            根据表名获取数据库表的信息
            </summary>
            <param name="tablelist">表名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MssqlExtractor.GetAllTables(System.String,System.String,System.Boolean,SunnyMES.Commons.Pages.PagerInfo)">
            <summary>
            获取数据库的所有表的信息
            </summary>
            <param name="tablename"></param>
            <param name="fieldNameToSort"></param>
            <param name="isDescending"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MssqlExtractor.GetAllColumns(System.String)">
            <summary>
            获取表的所有字段名及字段类型
            </summary>
            <param name="tableName">数据表的名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MssqlExtractor.ConvertDataType(SunnyMES.Commons.CodeGenerator.DbFieldInfo)">
            <summary>
            将字段信息的类型转换为C#信息
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MssqlExtractor.SqlType2CsharpTypeStr(System.String,System.Boolean)">
            <summary>
            将数据库类型转为系统类型。
            </summary>
            <param name="sqlType"></param>
            <param name="isNullable">字段是否可空</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.CodeGenerator.MySqlExtractor">
            <summary>
            mysql
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MySqlExtractor.GetAllDataBases">
            <summary>
            获取数据库信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MySqlExtractor.GetAllTables(System.String,System.String)">
            <summary>
            获取数据库的所有表的信息
            </summary>
            <param name="dbName"></param>
            <param name="tableList"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MySqlExtractor.GetAllTables(System.String,System.String,System.String,System.Boolean,SunnyMES.Commons.Pages.PagerInfo)">
            <summary>
            获取数据库的所有表的信息
            </summary>
            <param name="dbName"></param>
            <param name="tablename"></param>
            <param name="fieldNameToSort"></param>
            <param name="isDescending"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MySqlExtractor.GetAllColumns(System.String,System.String)">
            <summary>
            获取表的所有字段名及字段类型
            </summary>
            <param name="dbName">dbName</param>
            <param name="tableName">数据表的名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MySqlExtractor.ConvertDataType(SunnyMES.Commons.CodeGenerator.DbFieldInfo)">
            <summary>
            将字段信息的类型转换为C#信息
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.CodeGenerator.MySqlExtractor.SqlType2CsharpTypeStr(System.String,System.Boolean)">
            <summary>
            将数据库类型转为系统类型。
            </summary>
            <param name="sqlType">数据库字段类型</param>
            <param name="isNullable">字段是否可空</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.CodeGenerator.TableModel">
            <summary>
            表内容模型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.TableModel.TableName">
            <summary>
            表名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.TableModel.FieldColorder">
            <summary>
            字段序号
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.TableModel.FieldName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.TableModel.IsIdentity">
            <summary>
            标识
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.TableModel.Pkey">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.TableModel.FieldDataType">
            <summary>
            字段数据类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.TableModel.FieldLength">
            <summary>
            字段长度
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.TableModel.FieldDecimalDigit">
            <summary>
            小数位数
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.TableModel.FieldIsNull">
            <summary>
            是否可以为空
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.TableModel.FieldDefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.CodeGenerator.TableModel.FieldDescription">
            <summary>
            字段描述
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Configs">
            <summary>
            配置文件读取操作
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Configs.configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Configs.GetSection(System.String)">
            <summary>
            根据Key获取数配置内容
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Configs.GetConfigurationValue(System.String,System.String)">
            <summary>
            根据section和key获取配置内容
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Configs.GetConnectionString(System.String)">
            <summary>
            根据Key获取数据库连接字符串
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Application.BaseApp`4">
            <summary>
            业务层基类，Service用于普通的数据库操作
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TDto">实体类型</typeparam>
            <typeparam name="TService">Service类型</typeparam>
            <typeparam name="Tkey">主键类型</typeparam>
        </member>
        <member name="F:SunnyMES.Commons.Application.BaseApp`4.service">
            <summary>
            用于普通的数据库操作
            </summary>
            <value>The service.</value>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.#ctor(SunnyMES.Commons.IServices.IService{`0,`1,`3})">
            <summary>
            
            </summary>
            <param name="_service"></param>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.Delete(`0)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.Delete(`3)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.DeleteAsync(`3)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.DeleteAsync(`0)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.DeleteBatch(System.Collections.Generic.IList{System.Object})">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.DeleteBatchWhere(System.String)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.DeleteSoft(System.Boolean,`3,System.String)">
            <summary>
            软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.DeleteSoftAsync(System.Boolean,`3,System.String)">
            <summary>
            异步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.Get(`3)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetWhere(System.String)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetWhereAsync(System.String)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetListTopWhere(System.Int32,System.String)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAll">
            <summary>
            同步查询所有实体。
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAllAsync">
            <summary>
            异步步查询所有实体。
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAsync(`3)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetListWhere(System.String)">
            <summary>
             根据查询条件查询数据
             </summary>
             <param name="where">查询条件</param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetListWhereAsync(System.String)">
            <summary>
             异步根据查询条件查询数据
             </summary>
             <param name="where">查询条件</param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.Insert(`0)">
            <summary>
            同步新增实体。
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.InsertAsync(`0)">
            <summary>
            异步步新增实体。
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.Update(`0,`3)">
            <summary>
            同步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.UpdateAsync(`0,`3)">
            <summary>
            异步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.UpdateTableField(System.String,System.String,System.String)">
            <summary>
            更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAllByIsDeleteMark(System.String)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAllByIsNotDeleteMark(System.String)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAllByIsEnabledMark(System.String)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAllByIsNotEnabledMark(System.String)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAllByIsNotDeleteAndEnabledMark(System.String)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAllByIsDeleteMarkAsync(System.String)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAllByIsNotDeleteMarkAsync(System.String)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAllByIsEnabledMarkAsync(System.String)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAllByIsNotEnabledMarkAsync(System.String)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.SetEnabledMark(System.Boolean,`3,System.String)">
            <summary>
            设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.SetEnabledMarkAsync(System.Boolean,`3,System.String)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean)">
            <summary>
            分页查询，自行封装sql语句
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean)">
            <summary>
            分页查询包含用户信息
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Application.BaseApp`4.GetCountByWhere(System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Core.App.App">
            <summary>
            全局应用类
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Core.App.App.Configuration">
            <summary>
            全局配置选项
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Core.App.App.Services">
            <summary>
             应用服务
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Core.App.App.ConfigurationBuilder">
            <summary>
            全局配置构建器
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Core.App.App._webHostEnvironment">
            <summary>
            私有环境变量，避免重复解析
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.App.App.WebHostEnvironment">
            <summary>
            应用环境，如，是否是开发环境，生产环境等
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Core.App.App.Assemblies">
            <summary>
            应用有效程序集
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Core.App.App.EffectiveTypes">
            <summary>
            有效程序集类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.App.App.ServiceProvider">
            <summary>
            服务提供器
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.App.App.HttpContext">
            <summary>
            获取请求上下文
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.App.GetService``1">
            <summary>
            获取请求生命周期的服务
            </summary>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.App.GetService(System.Type)">
            <summary>
            获取请求生命周期的服务
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.App.GetRequiredService``1">
            <summary>
            获取请求生命周期的服务
            </summary>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.App.GetRequiredService(System.Type)">
            <summary>
            获取请求生命周期的服务
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.App.GetOptions``1">
            <summary>
            获取选项
            </summary>
            <typeparam name="TOptions">强类型选项类</typeparam>
            <returns>TOptions</returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.App.GetOptionsMonitor``1">
            <summary>
            获取选项
            </summary>
            <typeparam name="TOptions">强类型选项类</typeparam>
            <returns>TOptions</returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.App.GetOptionsSnapshot``1">
            <summary>
            获取选项
            </summary>
            <typeparam name="TOptions">强类型选项类</typeparam>
            <returns>TOptions</returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.App.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.App.AddConfigureFiles(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            添加配置文件
            </summary>
            <param name="config"></param>
            <param name="env"></param>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.App.AutoAddJsonFiles(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment,System.String[])">
            <summary>
            自动加载自定义 .json 配置文件
            </summary>
            <param name="config"></param>
            <param name="env"></param>
            <param name="ignoreConfigurationFiles"></param>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.App.AutoAddXmlFiles(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment,System.String[])">
            <summary>
            自动加载自定义 .xml 配置文件
            </summary>
            <param name="config"></param>
            <param name="env"></param>
            <param name="ignoreConfigurationFiles"></param>
        </member>
        <member name="F:SunnyMES.Commons.Core.App.App.excludeJsons">
            <summary>
            默认排除配置项
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Core.App.App.runtimeJsonSuffixs">
            <summary>
            排除运行时 Json 后缀
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Core.App.HostingStartup">
            <summary>
            配置程序启动时自动注入
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.HostingStartup.Configure(Microsoft.AspNetCore.Hosting.IWebHostBuilder)">
            <summary>
            配置应用启动
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:SunnyMES.Commons.Core.App.HttpContextLocal">
            <summary>
            获取 HttpContext 上下文
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.App.HttpContextLocal.Current">
            <summary>
            获取当前 HttpContext 对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Core.Dapper.DapperDbContext">
            <summary>
            注册的时候 InstancePerLifetimeScope
            线程内唯一（也就是单个请求内唯一）
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.Dapper.DapperDbContext.GetConnection``1(System.Boolean)">
            <summary>
            获取的数据库连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="masterDb"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.Dapper.DapperDbContext.GetConnection2(System.Boolean)">
            <summary>
            获取的数据库连接  2
            </summary>
            <param name="masterDb"></param>
            <returns></returns>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dapper.DapperDbContext.DbTransaction">
            <summary>
            事务
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dapper.DapperDbContext.Committed">
            <summary>
            是否已被提交
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.Dapper.DapperDbContext.BeginTransaction">
            <summary>
            开启事务
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.Dapper.DapperDbContext.CommitTransaction">
            <summary>
            事务提交
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.Dapper.DapperDbContext.RollBackTransaction">
            <summary>
            事务回滚
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.Dapper.DapperDbContext.Dispose(System.Boolean)">
            <summary>
            释放
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SunnyMES.Commons.Core.Dapper.DapperDbContext.Dispose">
            <summary>
            仅当以上 Dispose(bool disposing) 拥有用于释放未托管资源的代码时才替代终结器。
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Core.DataManager.AppDBContextAttribute">
            <summary>
            数据库连接配置特性
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.DataManager.AppDBContextAttribute.DbConfigName">
            <summary>
            数据库配置名称
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.AppDBContextAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dbConfigName"></param>
        </member>
        <member name="T:SunnyMES.Commons.Core.DataManager.DbConnections">
            <summary>
            定义主数据和从数据库配置选项
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.DataManager.DbConnections.MassterDB">
            <summary>
            主数据库
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.DataManager.DbConnections.ReadDB">
            <summary>
            从数据库
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Core.DataManager.DbConnectionOptions">
            <summary>
            数据库配置选项,定义数据库连接字符串、数据库类型和访问权重
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.DataManager.DbConnectionOptions.ConnectionString">
            <summary>
            数据库连接字符
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.DataManager.DbConnectionOptions.DatabaseType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.DataManager.DbConnectionOptions.DbLevel">
            <summary>
            访问权重，值越大权重越低
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Core.DataManager.DBServerProvider">
            <summary>
            数据库服务提供者
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Core.DataManager.DBServerProvider.dbConfigName">
            <summary>
            数据库配置名称
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Core.DataManager.DBServerProvider.dbConnection">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.DBServerProvider.GetConnectionString">
            <summary>
            获取默认数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.DBServerProvider.GetConnectionString(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.DBServerProvider.GetDBConnection``1(System.Boolean)">
            <summary>
            获取数据库连接
            </summary>
            <param name="masterDb">是否访问主库，默认为是，否则访问从库即只读数据库</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.DBServerProvider.GetDBConnection(System.Boolean)">
            <summary>
            获取数据库连接
            </summary>
            <param name="masterDb">是否访问主库，默认为是，否则访问从库即只读数据库</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.DBServerProvider.GeDbConnectionOptions``1(System.Boolean)">
            <summary>
            获取数据库连接连接配置
            </summary>
            <typeparam name="TEntity">数据实体</typeparam>
            <param name="masterDb">是否访问主库，默认为是，否则访问从库即只读数据库</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.DBServerProvider.GeDbConnectionOptions2(System.Boolean)">
            <summary>
            获取数据库连接连接配置
            </summary>
            <param name="masterDb">是否访问主库，默认为是，否则访问从库即只读数据库</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.DBServerProvider.GeDbConnectionOptions(System.Boolean)">
            <summary>
            获取数据库连接连接配置
            </summary>
            <param name="masterDb">是否访问主库，默认为是，否则访问从库即只读数据库</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.DBServerProvider.GetReadConn(System.Collections.Generic.Dictionary{System.String,SunnyMES.Commons.Core.DataManager.DbConnectionOptions})">
            <summary>
            按从库数据库连接的策略进行返回连接对象，实现从库的负载均衡
            </summary>
            <param name="slaveData"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.SFCEncode.Encode(System.String)">
             <summary>
            作用：将字符串内容转化为16进制数据编码 
             </summary>
             <param name="strEncode"></param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.SFCEncode.Decode(System.String)">
            <summary>
            作用：将16进制数据编码转化为字符串
            </summary>
            <param name="strDecode"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.SFCEncode.EncryptPassword(System.String,System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="v_Password"></param>
            <param name="v_key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.SFCEncode.DecryptPassword(System.String,System.String)">
            <summary>
            解密字符串
            </summary>
            <param name="v_Password"></param>
            <param name="v_key"></param>
            <returns></returns>
        </member>
        <member name="P:SunnyMES.Commons.Core.DataManager.YuebonDbOptions.DefaultDatabaseType">
            <summary>
            默认数据库类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.DataManager.YuebonDbOptions.DbConnections">
            <summary>
            数据库连接配置
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.DataManager.YuebonDbOptionsSetup.Configure(SunnyMES.Commons.Core.DataManager.YuebonDbOptions)">
            <summary>
            配置options各属性信息
            </summary>
            <param name="options"></param>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.BomLinkedInfo.IsScanFinished">
            <summary>
            当前项已扫描完成
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.BomLinkedInfo.IsCurrentItem">
            <summary>
            当前项是否为输入项
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.BomLinkedInfo.TrayBatchSN">
            <summary>
            托盘关联的批次条码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.BomLinkedInfo.IsClearInput">
            <summary>
            针对批次需要校验数量的类型，判断是否需要强制解锁输入
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Core.Dtos.DeletesInputDto">
            <summary>
            批量物理删除操作传参
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DeletesInputDto.Ids">
            <summary>
            主键Id集合
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Core.Dtos.DynamicItemsDto">
            <summary>
            动态项定义
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.PoDefID">
            <summary>
            Po detail def ID
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.Name">
            <summary>
            动态项名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.Description">
            <summary>
            动态项描述
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.Value">
            <summary>
            动态项值
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.DefaultSpec">
            <summary>
            是否有默认标准值，当有值时，需要检查当前项的值是否存在你当前默认值中
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.IsCurrentItem">
            <summary>
            当前项是提交请求项
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.IsScanFinished">
            <summary>
            当前项已扫描完成
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.CheckType">
            <summary>
            检查类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.Parameters">
            <summary>
            动态参数
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.ParentCheckID">
            <summary>
            父类检查项ID
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.DynamicItemsDto.Required">
            <summary>
            是否是必须项
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.MesInputDtos.AssemblyDynamic.AssemblyDynamicInput.DataList">
            <summary>
            动态项
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.MesInputDtos.BoxScalage.BoxScalageInput.BoxWeight">
            <summary>
            整箱重量
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.MesInputDtos.PalletPackage.PalletPackageInput.S_BoxSN">
            <summary>
            箱码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.MesInputDtos.ShipMent.ShipMentInput.MultipackSn">
            <summary>
            箱码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.MesInputDtos.ShipMent.ShipMentInput.ShippingPallet">
            <summary>
            后端生成的出货栈板码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.MesInputDtos.ShipMent.ShipMentReplaceInput.OriginalBillNO">
            <summary>
            原始的BillNO
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.MesInputDtos.ShipMent.ShipMentReplaceInput.TargetBillNO">
            <summary>
            新的BillNO
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.CartonBoxConfirmed.SEQNO">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.CartonBoxConfirmed.UPCSN">
            <summary>
            UPC SN
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.CartonBoxConfirmed.SN">
            <summary>
            FG SN
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.CartonBoxConfirmed.TIME">
            <summary>
            时间
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Core.Dtos.Models.CustomKeyValue">
            <summary>
            键值
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.Models.CustomKeyValue.Key">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.Models.CustomKeyValue.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.Models.IIdDesc.DefID">
            <summary>
            描述ID
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.Models.IIdDesc.DefDescription">
            <summary>
            描述内容
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.Models.PalletConfirmed.SEQNO">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.Models.PalletConfirmed.KITSN">
            <summary>
            已确认箱码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.Models.PalletConfirmed.TIME">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.PartAttributes.CCCC_Code">
            <summary>
            数据库中的名称为CCCC Code
            实际处理中，需要进行特别处理
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.PartAttributes.PackBoxWeightLimit">
            <summary>
            中箱称重参数配置
            Base=3.57;Unit=kg;UL=+0.05;LL=-0.04
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.PoAttributes.IsScanUPC">
            <summary>
            是否扫描UPC Code
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.PoAttributes.IsScanJAN">
            <summary>
            是否扫描JAN Code
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.PoAttributes.OtherProperty">
            <summary>
            针对新增的参数放在此处
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsCheckPO">
            <summary>
            是否检查PO
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsCheckPN">
            <summary>
            是否检查PN
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.ApplicationType">
            <summary>
            程序类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TTScanType">
            <summary>
            TT 扫描类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.SNScanType">
            <summary>
            SN扫描类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsCheckVendor">
            <summary>
            是否检查供应商
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.COF">
            <summary>
            是否允许重测
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.PlasmaTimeOut">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.PlasmaGroupNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.PlasmaMaxGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.ToolingFrom">
            <summary>
            新治具名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.ToolingTo">
            <summary>
            旧治具名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsTimeCheck_Shell">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TimeCheckStartStationType_Shell">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TimeCheckMin_Shell">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.PlasmaSetTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TimeCheckMax_Shell">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsTimeCheck_MF">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TimeCheckStartStationType_MF">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TimeCheckMin_MF">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TimeCheckMax_MF">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.ORTUnitStateID">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.ORTFromStationTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.StationTypeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TTtarryTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.AdhesiveTimeCheck">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsScanAdhesive">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.AdhesiveTimeCheckOut">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsSendYieldToInsight">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsSendModuleToInsight">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsStationTypeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsTimeCheck_NFCKitting">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TimeCheckStartStationType_NFCKitting">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TimeCheckMin_NFCKitting">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TimeCheckMax_NFCKitting">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.SiemensProjectType">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.SiemensDBConn">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsSampleAlarm">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.SampleAlarmTimePoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.SampleCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsRPTOutput">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsShowTTWIP">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsLastBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsNotPrint">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsQC">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TTBoxType">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TTBoxSN_Pattern">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsTTBoxUnpack">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.TTRegistSN">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsScanPalletSNOrCartonBoxSN">
            <summary>
            0:原始模式，只需要扫描箱码，不能扫描栈板条码 ---20230824  老板要求放弃0，和winform保持一致
            1: Carton Box SN ,先扫栈板条码，再扫箱码
            2: Pallet SN， 只扫栈板条码所有箱子一起过站
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.READ">
            <summary>
            传递给PLC READ 指令
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.READY">
            <summary>
            传递给PLC READY 指令
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.PASS">
            <summary>
            传递给PLC Pass指令
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.FAIL">
            <summary>
            传递给PLC Fail指令
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.AutoStation">
             <summary>
            是否是自动站， 1 是自动站，0 非自动站
             </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.Port">
            <summary>
            串口端口名
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.Delay">
            <summary>
            用于发送指令后，需要延迟的时间，单位毫秒
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.COM_BaudRate">
            <summary>
            串口波特率
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.COM_DataBits">
            <summary>
            串口数据位长度
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.COM_Parity">
            <summary>
            串口校验位
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.COM_StopBits">
            <summary>
            串口停止位
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.PrintIPPort">
            <summary>
            打印端口连接
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.Station_IsTimeCheck">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsBindNFC">
            <summary>
            是否绑定NFC
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsBindAdhesive">
            <summary>
            是否绑定胶
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.OOBANewUnitStateID">
            <summary>
            退回后新的状态ID,多个状态以逗号隔开
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsShowReleaseBtn">
            <summary>
            当扫描类型为1时，当前项设置为1，则启用解锁按钮，反之则不显示解锁按钮
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsKeepUPCSN">
            <summary>
            针对OOBA工站，打散退回前工站，是否需要保留UPC条码，参数为1则保留，其他则不保留
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsCreateUPCSN">
            <summary>
            针对OOBAs
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.CheckOOBAUnitStatusID">
            <summary>
            OOBA允许的状态ID
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.CheckQCTimeOut">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.CardIDPattern">
            <summary>
            卡号正则表达式
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsRPTYield">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.YieldCombineStationTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.RPTOutputName">
            <summary>
            报表站点名字别名
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.CheckReworkTimes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.CheckReworkStationTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.SetReworkStatusID">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.IsCheckBuckFailCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.FailedRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.LatestRecordCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.SerialFailOfTimes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.CheckFailedStationTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.StationAttributes.OtherProperty">
            <summary>
            针对新增的参数放在此处
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Core.Dtos.PackageOverstationInputDto">
            <summary>
            testClass
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.Dtos.PackageOverstationInputDto.test">
            <summary>
            mytest注释
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Core.IRepositories.IReadOnlyRepository`2">
            <summary>
            只读仓储接口,提供查询相关方法
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SunnyMES.Commons.Core.Models.BaseCustomEntity`1.KeyIsNull" -->
        <member name="M:SunnyMES.Commons.Core.Models.BaseCustomEntity`1.GenerateDefaultKeyVal">
            <summary>
            创建默认的主键值
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.Models.BaseCustomEntity`1.GenerateDefaultKeyVal(System.Int32)">
            <summary>
            根据传递主键赋值
            </summary>
            <param name="ID"></param>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.Base64.EncodeBase64(System.Text.Encoding,System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="codeName">加密采用的编码方式</param>
            <param name="source">待加密的明文</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.Base64.EncodeBase64(System.String)">
            <summary>
            Base64加密，采用utf8编码方式加密
            </summary>
            <param name="source">待加密的明文</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.Base64.DecodeBase64(System.Text.Encoding,System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="codeName">解密采用的编码方式，注意和加密时采用的方式一致</param>
            <param name="result">待解密的密文</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.Base64.DecodeBase64(System.String)">
            <summary>
            Base64解密，采用utf8编码方式解密
            </summary>
            <param name="result">待解密的密文</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.EncryptHelper2023.EncryptString(System.String,System.String,System.String)">
            <summary>
            字符串的加密
            </summary>
            <param name="Value">要加密的字符串</param>
            <param name="sKey">密钥，必须32位</param>
            <param name="sIV">向量，必须是12个字符</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.EncryptHelper2023.DecryptString(System.String,System.String,System.String)">
            <summary>
            解密字符串
            </summary>
            <param name="Value">加密后的字符串</param>
            <param name="sKey">密钥，必须32位</param>
            <param name="sIV">向量，必须是12个字符</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="T:SunnyMES.Commons.Core.PublicFun.Model.CommonHeader">
            <summary>
            通用请求头
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Model.CommonHeader.Language">
             <summary>
            当前使用的语言
             0: CH
             1: EN
             </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Model.CommonHeader.LineId">
            <summary>
            当前登录的线别ID
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Model.CommonHeader.LineName">
            <summary>
            线别名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Model.CommonHeader.StationId">
            <summary>
            当前登录的站点ID
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Model.CommonHeader.StationName">
            <summary>
            站点名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Model.CommonHeader.EmployeeId">
            <summary>
            当前登录的用户ID
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Model.CommonHeader.CurrentLoginIp">
            <summary>
            当前连接客户端的IP
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Model.CommonHeader.Url">
            <summary>
            后端配置链接 
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Model.CommonHeader.PageId">
            <summary>
            前端传递的页面ID
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Model.CommonHeader.UserFullName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Core.PublicFun.Public_SNPar">
            <summary>
            Public_SNPar
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Public_SNPar.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Public_SNPar.mask">
            <summary>
            mask
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Public_SNPar.pos">
            <summary>
            pos
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Public_SNPar.len">
            <summary>
            len
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Public_SNPar.type">
            <summary>
            type
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Core.PublicFun.Public_SNPar.luVal">
            <summary>
            luVal
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicCommonFun.ConvertDynamic(System.Object,System.String)">
            <summary>
            取数据表第一行中对应键的值
            </summary>
            <param name="ld"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Core.PublicFun.PublicF">
            <summary>
            PublicF
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.Stuff(System.String,System.Int32,System.Int32,System.Char)">
            <summary>
            Stuff
            </summary>
            <param name="str"></param>
            <param name="startPosition"></param>
            <param name="length"></param>
            <param name="replaceChar"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.ToEnum``1(System.String)">
            <summary>
            字符串转Enum
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="str">字符串</param>
            <returns>转换的枚举</returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.GetSNRRegDateTime(System.String,System.DateTime)">
            <summary>
            GetSNRRegDateTime
            </summary>
            <param name="S_Mask"></param>
            <param name="Date_Time"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.GetManWeek(System.DateTime)">
            <summary>
            GetManWeek
            </summary>
            <param name="Date_Curr"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.StrLeft(System.String,System.Int32)">
            <summary>
            StrLeft
            </summary>
            <param name="S_Str"></param>
            <param name="I_Width"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.StrRight(System.String,System.Int32)">
            <summary>
            StrRight
            </summary>
            <param name="S_Str"></param>
            <param name="I_Width"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.GetSNRDateTime(System.String,System.String,System.DateTime,System.String)">
            <summary>
            GetSNRDateTime
            </summary>
            <param name="S_Type"></param>
            <param name="S_Mask"></param>
            <param name="Date_Time"></param>
            <param name="S_InvalidChars"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.GetSNRCharSet(System.String,System.String,System.Int32,System.String)">
            <summary>
            GetSNRCharSet
            </summary>
            <param name="S_Type"></param>
            <param name="S_CurDigit"></param>
            <param name="I_Omesset"></param>
            <param name="S_InvalidChars"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.SNRParseParam(System.String,System.String)">
            <summary>
            SNRParseParam
            </summary>
            <param name="S_LastUsed"></param>
            <param name="S_Mask"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.GetSNRPureCounter(System.String,System.String,System.Int32,System.String)">
            <summary>
            GetSNRPureCounter
            </summary>
            <param name="S_LastUsed"></param>
            <param name="S_Mask"></param>
            <param name="I_Offset"></param>
            <param name="S_InvalidChars"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.GetLangStr(System.String,System.Int32)">
            <summary>
            语言文字分割类 @
            </summary>
            <param name="S_Str">语言文字字符串</param>
            <param name="I_Lang">语言 0:ZH_CN 1:EN</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.Encode(System.String)">
             <summary>
            作用：将字符串内容转化为16进制数据编码 
             </summary>
             <param name="strEncode"></param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.Decode(System.String)">
            <summary>
            作用：将16进制数据编码转化为字符串
            </summary>
            <param name="strDecode"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.EncryptPassword(System.String,System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="v_Password"></param>
            <param name="v_key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.DecryptPassword(System.String,System.String)">
            <summary>
            解密字符串
            </summary>
            <param name="v_Password"></param>
            <param name="v_key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.PublicF.DataTableToJson(System.Data.DataTable)">
            <summary>
            DataTableToJson
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Core.PublicFun.RSASFC">
            <summary>
            RSASFC
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.RSASFC.RsaEncrypt(System.String,System.Boolean)">
            <summary>
            RSA公钥加密
            </summary>
            <param name="value">待加密的明文</param>
            <param name="usePkcs8">是否使用pkcs8填充</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Core.PublicFun.RSASFC.RsaDecrypt(System.String,System.Boolean)">
            <summary>
            RSA私钥解密
            </summary>
            <param name="value">密文</param>
            <param name="usePkcs8">是否使用pkcs8填充</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.DataManager.WriteAndReadEnum">
            <summary>
            数据库读、写操作枚举
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DataManager.WriteAndReadEnum.Write">
            <summary>
            写操作
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DataManager.WriteAndReadEnum.Read">
            <summary>
            读操作
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DataManager.WriteAndReadEnum.Default">
            <summary>
            默认，不区分读写
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.DbContextCore.BaseDbContext">
            <summary>
            DbContext上下文的实现
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DbContextCore.BaseDbContext.dbConfigName">
            <summary>
            数据库配置名称，可在子类指定不同的配置名称，用于访问不同的数据库
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DbContextCore.BaseDbContext.isMultiTenant">
            <summary>
            是否开启多租户
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DbContextCore.BaseDbContext.dbConnectionOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.DbContextCore.BaseDbContext.IsMultiTenant">
            <summary>
            数据库访问对象的外键约束
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.GetDatabase">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.#ctor(SunnyMES.Commons.Core.DataManager.DbConnectionOptions)">
            <summary>
            
            </summary>
            <param name="dbConnectionOptions"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            配置，初始化数据库引擎
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            模型创建
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.MappingEntityTypes(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.Add``1(``0)">
            <summary>
            新增实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.AddAsync``1(``0)">
            <summary>
            新增实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.AddRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.AddRangeAsync``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.Delete``2(``1)">
            <summary>
            物理删除数据
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.EnsureCreated">
            <summary>
            创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.EnsureCreatedAsync">
            <summary>
            创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.ExecuteSqlWithNonQuery(System.String,System.Object[])">
             <summary>
            执行Sql，返回影响记录行数
             </summary>
             <param name="sql"></param>
             <param name="parameters"></param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.ExecuteSqlWithNonQueryAsync(System.String,System.Object[])">
            <summary>
            执行Sql，返回影响记录行数
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.Edit``1(``0)">
            <summary>
            编辑更新保存实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.EditRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量更新保存实体
            以添加状态开始跟踪给定的实体和任何其他尚未被跟踪的可访问实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.ExistAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.FilterWithInclude``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件进行查询数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="include"></param>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.Find``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.Find``1(System.String)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.Find``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.FindAsync``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.FindAsync``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean)">
            <summary>
            根据条件查询实体，返回实体集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <param name="asNoTracking">是否启用模型跟踪，默认为false不跟踪</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.GetAllEntityTypes">
            <summary>
            获取所有实体类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.GetDbSet``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.GetSingleOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.GetSingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.Update``1(``0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.BulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">数据库表名称</param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.SqlQuery``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.SqlQueryAsync``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.SqlQueryByPagination``2(System.String,System.String[],System.Int32,System.Int32,System.Action{``1})">
            <summary>
            分页查询，SQL语句查询，返回指定输出对象集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="eachAction"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.SqlQueryByPagination``1(System.String,System.String[],System.Int32,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            分页查询，SQL语句查询，返回数据实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="parameters">查询SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.GetByCompileQuery``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.GetByCompileQueryAsync``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.GetByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.GetByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.FirstOrDefaultByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.FirstOrDefaultByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.FirstOrDefaultWithTrackingByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.FirstOrDefaultWithTrackingByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.CountByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.CountByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.GetDataTable(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回DataTable数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[]参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContext.GetDataTables(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回List数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[] 参数</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.DbContextCore.BaseDbContextCustom">
            <summary>
            DbContext上下文的实现
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.dbConfigName">
            <summary>
            数据库配置名称，可在子类指定不同的配置名称，用于访问不同的数据库
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.isMultiTenant">
            <summary>
            是否开启多租户
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.dbConnectionOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.IsMultiTenant">
            <summary>
            数据库访问对象的外键约束
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.GetDatabase">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.#ctor(SunnyMES.Commons.Core.DataManager.DbConnectionOptions)">
            <summary>
            
            </summary>
            <param name="dbConnectionOptions"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            配置，初始化数据库引擎
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            模型创建
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.MappingEntityTypes(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.Add``1(``0)">
            <summary>
            新增实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.AddAsync``1(``0)">
            <summary>
            新增实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.AddRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.AddRangeAsync``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.Delete``2(``1)">
            <summary>
            物理删除数据
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.EnsureCreated">
            <summary>
            创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.EnsureCreatedAsync">
            <summary>
            创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.ExecuteSqlWithNonQuery(System.String,System.Object[])">
             <summary>
            执行Sql，返回影响记录行数
             </summary>
             <param name="sql"></param>
             <param name="parameters"></param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.ExecuteSqlWithNonQueryAsync(System.String,System.Object[])">
            <summary>
            执行Sql，返回影响记录行数
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.Edit``1(``0)">
            <summary>
            编辑更新保存实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.EditRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量更新保存实体
            以添加状态开始跟踪给定的实体和任何其他尚未被跟踪的可访问实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.ExistAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.FilterWithInclude``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件进行查询数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="include"></param>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.Find``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.Find``1(System.String)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.Find``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.FindAsync``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.FindAsync``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean)">
            <summary>
            根据条件查询实体，返回实体集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <param name="asNoTracking">是否启用模型跟踪，默认为false不跟踪</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.GetAllEntityTypes">
            <summary>
            获取所有实体类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.GetDbSet``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.GetSingleOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.GetSingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.Update``1(``0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.BulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">数据库表名称</param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.SqlQuery``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.SqlQueryAsync``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.SqlQueryByPagination``2(System.String,System.String[],System.Int32,System.Int32,System.Action{``1})">
            <summary>
            分页查询，SQL语句查询，返回指定输出对象集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="eachAction"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.SqlQueryByPagination``1(System.String,System.String[],System.Int32,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            分页查询，SQL语句查询，返回数据实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="parameters">查询SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.GetByCompileQuery``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.GetByCompileQueryAsync``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.GetByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.GetByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.FirstOrDefaultByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.FirstOrDefaultByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.FirstOrDefaultWithTrackingByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.FirstOrDefaultWithTrackingByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.CountByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.CountByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.GetDataTable(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回DataTable数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[]参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextCustom.GetDataTables(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回List数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[] 参数</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric">
            <summary>
            DbContext上下文的实现
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.dbConfigName">
            <summary>
            数据库配置名称，可在子类指定不同的配置名称，用于访问不同的数据库
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.isMultiTenant">
            <summary>
            是否开启多租户
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.dbConnectionOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.IsMultiTenant">
            <summary>
            数据库访问对象的外键约束
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.GetDatabase">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.#ctor(SunnyMES.Commons.Core.DataManager.DbConnectionOptions)">
            <summary>
            
            </summary>
            <param name="dbConnectionOptions"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            配置，初始化数据库引擎
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            模型创建
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.MappingEntityTypes(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.Add``1(``0)">
            <summary>
            新增实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.AddAsync``1(``0)">
            <summary>
            新增实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.AddRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.AddRangeAsync``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.Delete``2(``1)">
            <summary>
            物理删除数据
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.EnsureCreated">
            <summary>
            创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.EnsureCreatedAsync">
            <summary>
            创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.ExecuteSqlWithNonQuery(System.String,System.Object[])">
             <summary>
            执行Sql，返回影响记录行数
             </summary>
             <param name="sql"></param>
             <param name="parameters"></param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.ExecuteSqlWithNonQueryAsync(System.String,System.Object[])">
            <summary>
            执行Sql，返回影响记录行数
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.Edit``1(``0)">
            <summary>
            编辑更新保存实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.EditRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量更新保存实体
            以添加状态开始跟踪给定的实体和任何其他尚未被跟踪的可访问实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.ExistAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.FilterWithInclude``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件进行查询数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="include"></param>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.Find``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.Find``1(System.String)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.Find``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.FindAsync``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.FindAsync``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean)">
            <summary>
            根据条件查询实体，返回实体集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <param name="asNoTracking">是否启用模型跟踪，默认为false不跟踪</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.GetAllEntityTypes">
            <summary>
            获取所有实体类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.GetDbSet``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.GetSingleOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.GetSingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.Update``1(``0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.BulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">数据库表名称</param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.SqlQuery``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.SqlQueryAsync``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.SqlQueryByPagination``2(System.String,System.String[],System.Int32,System.Int32,System.Action{``1})">
            <summary>
            分页查询，SQL语句查询，返回指定输出对象集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="eachAction"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.SqlQueryByPagination``1(System.String,System.String[],System.Int32,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            分页查询，SQL语句查询，返回数据实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="parameters">查询SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.GetByCompileQuery``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.GetByCompileQueryAsync``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.GetByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.GetByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.FirstOrDefaultByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.FirstOrDefaultByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.FirstOrDefaultWithTrackingByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.FirstOrDefaultWithTrackingByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.CountByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.CountByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.GetDataTable(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回DataTable数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[]参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.BaseDbContextGeneric.GetDataTables(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回List数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[] 参数</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.DbContextCore.DbContextFactory">
            <summary>
            上下文工厂类
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.DbContextCore.DbContextFactory.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.DbContextCore.DbContextFactory.ServiceCollection">
            <summary>
            服务
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.DbContextFactory.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.DbContextFactory.AddDbContext``1(SunnyMES.Commons.Options.DbContextOption)">
            <summary>
            向服务注入上下文
            </summary>
            <typeparam name="TContext"></typeparam>
            <param name="option"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.DbContextFactory.AddDbContext``2(SunnyMES.Commons.Options.DbContextOption)">
            <summary>
            向服务注入上下文
            </summary>
            <typeparam name="ITContext">上下文接口</typeparam>
            <typeparam name="TContext">上下文实现类</typeparam>
            <param name="option"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.DbContextFactory.CreateContext(SunnyMES.Commons.DataManager.WriteAndReadEnum)">
            <summary>
            创建数据库读写上下文
            </summary>
            <param name="writeAndRead">指定读、写操作</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.DbContextFactory.CreateContext``1(SunnyMES.Commons.DataManager.WriteAndReadEnum)">
            <summary>
            创建数据库读写上下文
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="writeAndRead">指定读或写操作</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.DbContextCore.DbContextFactoryCustom">
            <summary>
            上下文工厂类
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.DbContextCore.DbContextFactoryCustom.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.DbContextCore.DbContextFactoryCustom.ServiceCollection">
            <summary>
            服务
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.DbContextFactoryCustom.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.DbContextFactoryCustom.AddDbContext``1(SunnyMES.Commons.Options.DbContextOption)">
            <summary>
            向服务注入上下文
            </summary>
            <typeparam name="TContext"></typeparam>
            <param name="option"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.DbContextFactoryCustom.AddDbContext``2(SunnyMES.Commons.Options.DbContextOption)">
            <summary>
            向服务注入上下文
            </summary>
            <typeparam name="ITContext">上下文接口</typeparam>
            <typeparam name="TContext">上下文实现类</typeparam>
            <param name="option"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.DbContextFactoryCustom.CreateContext(SunnyMES.Commons.DataManager.WriteAndReadEnum)">
            <summary>
            创建数据库读写上下文
            </summary>
            <param name="writeAndRead">指定读、写操作</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.DbContextFactoryCustom.CreateContext``1(SunnyMES.Commons.DataManager.WriteAndReadEnum)">
            <summary>
            创建数据库读写上下文
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="writeAndRead">指定读或写操作</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.DbContextCore.MySqlDbContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.MySqlDbContext.BulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">数据库表名称</param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.MySqlDbContext.MySqlBulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">数据库表名称</param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.MySqlDbContext.GetDataTable(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="cmdTimeout"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.MySqlDbContext.GetDataTables(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="cmdTimeout"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.DbContextCore.OracleDbContext">
            <summary>
            Oracle上下文
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.OracleDbContext.GetDataTable(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="cmdTimeout"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.OracleDbContext.GetDataTables(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="cmdTimeout"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.DbContextCore.SQLiteDbContext">
            <summary>
            SQLite数据库操作
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SQLiteDbContext.GetDataTable(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="cmdTimeout"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SQLiteDbContext.GetDataTables(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="cmdTimeout"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.DbContextCore.SqlServerDbContext">
            <summary>
            Sql Server数据库上下文
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContext.BulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">如果为 null，则使用 TModel 名称作为 destinationTableName</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContext.SqlBulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">如果为 null，则使用 TModel 名称作为 destinationTableName</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContext.GenerateColumnMappings``1(Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection)">
            <summary>
            字段与实体关系映射
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mappings"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContext.SqlQueryByPagination``2(System.String,System.String[],System.Int32,System.Int32,System.Action{``1})">
            <summary>
            分页查询，SQL语句查询，返回指定输出对象集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="eachAction"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContext.SqlQueryByPagination``1(System.String,System.String[],System.Int32,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            分页查询，SQL语句查询，返回数据实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="parameters">查询SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContext.GetDataTable(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回DataTable数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[]参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContext.GetDataTables(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回List数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[] 参数</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.DbContextCore.SqlServerDbContextCustom">
            <summary>
            Sql Server数据库上下文
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContextCustom.BulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">如果为 null，则使用 TModel 名称作为 destinationTableName</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContextCustom.SqlBulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">如果为 null，则使用 TModel 名称作为 destinationTableName</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContextCustom.GenerateColumnMappings``1(Microsoft.Data.SqlClient.SqlBulkCopyColumnMappingCollection)">
            <summary>
            字段与实体关系映射
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mappings"></param>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContextCustom.SqlQueryByPagination``2(System.String,System.String[],System.Int32,System.Int32,System.Action{``1})">
            <summary>
            分页查询，SQL语句查询，返回指定输出对象集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="eachAction"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContextCustom.SqlQueryByPagination``1(System.String,System.String[],System.Int32,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            分页查询，SQL语句查询，返回数据实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="parameters">查询SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContextCustom.GetDataTable(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回DataTable数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[]参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.DbContextCore.SqlServerDbContextCustom.GetDataTables(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回List数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[] 参数</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.EfDbContext.DefaultModelBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.EfDbContext.DefaultModelBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)">
            <summary>
            
            </summary>
            <param name="conventions"></param>
        </member>
        <member name="M:SunnyMES.Commons.EfDbContext.DefaultModelBuilder.ApplyConfiguration``1(Microsoft.EntityFrameworkCore.IEntityTypeConfiguration{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Dtos.IInputDto`1">
            <summary>
            定义输入DTO
            </summary>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="P:SunnyMES.Commons.Dtos.IInputDto`1.Id">
            <summary>
            获取或设置 主键，唯一标识
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Dtos.InputDtoValidateExtensions">
            <summary>
            <see cref="T:SunnyMES.Commons.Dtos.IInputDto`1"/>验证扩展 
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Dtos.InputDtoValidateExtensions.Validate``1(System.Collections.Generic.IEnumerable{SunnyMES.Commons.Dtos.IInputDto{``0}})">
            <summary>
            InputDto属性验证
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Dtos.InputDtoValidateExtensions.Validate``1(SunnyMES.Commons.Dtos.IInputDto{``0})">
            <summary>
            InputDto属性验证
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Dtos.IOutputDto">
            <summary>
            定义输出DTO
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Dtos.SearchInputDto`1">
            <summary>
            查询条件公共实体类
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Dtos.SearchInputDto`1.Keywords">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Dtos.SearchInputDto`1.EnCode">
            <summary>
            编码/代码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Dtos.SearchInputDto`1.Order">
            <summary>
            排序方式 默认asc 
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Dtos.SearchInputDto`1.Sort">
            <summary>
            排序字段 默认Id
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Dtos.SearchInputDto`1.Filter">
            <summary>
            查询条件
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Dtos.SearchSignalInputDto">
            <summary>
            查询条件公共实体类
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Dtos.SearchSignalInputDto.Keywords">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Dtos.SearchSignalInputDto.EnCode">
            <summary>
            编码/代码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Dtos.SearchSignalInputDto.Order">
            <summary>
            排序方式 默认asc 
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Dtos.SearchSignalInputDto.Sort">
            <summary>
            排序字段 默认Id
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.IDbContext.IDbContextCore">
            <summary>
            上下文基础接口
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.GetDatabase">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.Add``1(``0)">
            <summary>
            新增实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.AddAsync``1(``0)">
            <summary>
            异步新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.AddRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.AddRangeAsync``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            异步批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.Delete``2(``1)">
            <summary>
            物理删除数据
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.EnsureCreated">
            <summary>
            创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.EnsureCreatedAsync">
            <summary>
            异步创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.ExecuteSqlWithNonQuery(System.String,System.Object[])">
            <summary>
            执行Sql语句，返回影响记录行数
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.ExecuteSqlWithNonQueryAsync(System.String,System.Object[])">
            <summary>
            执行Sql，返回影响记录行数
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.Edit``1(``0)">
            <summary>
            更新保存实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.EditRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量更新保存实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.Update``1(``0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件异步统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.ExistAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.FilterWithInclude``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件进行查询数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="include"></param>
            <param name="where">查询数据</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.Find``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.Find``1(System.String)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.Find``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.FindAsync``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.FindAsync``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean)">
            <summary>
            根据条件查询实体，返回实体集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <param name="asNoTracking">是否启用模型跟踪，默认为false不跟踪</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.GetAllEntityTypes">
            <summary>
            获取所有实体类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.GetDbSet``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.GetSingleOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.GetSingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.BulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">数据库表名称，默认为实体名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.SqlQuery``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.SqlQueryAsync``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.SqlQueryByPagination``2(System.String,System.String[],System.Int32,System.Int32,System.Action{``1})">
            <summary>
            分页查询，SQL语句查询，返回指定输出对象集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="eachAction"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.SqlQueryByPagination``1(System.String,System.String[],System.Int32,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            分页查询，SQL语句查询，返回数据实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="parameters">查询SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.SaveChanges">
            <summary>
            保存到数据库
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.SaveChanges(System.Boolean)">
            <summary>
            保存到数据库
            </summary>
            <param name="acceptAllChangesOnSuccess">更改成功发送到数据库后是否调用AcceptAllChanges()</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            保存到数据库
            </summary>
            <param name="cancellationToken">是否等待任务完成时要观察</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            保存到数据库
            </summary>
            <param name="acceptAllChangesOnSuccess">是否更改成功发送到数据库后是否调用AcceptAllChanges()</param>
            <param name="cancellationToken">是否等待任务完成时要观察</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.GetDataTable(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回DataTable数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[]参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.GetDataTables(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回List集合数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[]参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.GetByCompileQuery``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.GetByCompileQueryAsync``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.GetByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.GetByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.FirstOrDefaultByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.FirstOrDefaultByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.FirstOrDefaultWithTrackingByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.FirstOrDefaultWithTrackingByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.CountByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCore.CountByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.IDbContext.IDbContextCoreCustom">
            <summary>
            上下文基础接口
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.GetDatabase">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.Add``1(``0)">
            <summary>
            新增实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.AddAsync``1(``0)">
            <summary>
            异步新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.AddRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.AddRangeAsync``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            异步批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.Delete``2(``1)">
            <summary>
            物理删除数据
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.EnsureCreated">
            <summary>
            创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.EnsureCreatedAsync">
            <summary>
            异步创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.ExecuteSqlWithNonQuery(System.String,System.Object[])">
            <summary>
            执行Sql语句，返回影响记录行数
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.ExecuteSqlWithNonQueryAsync(System.String,System.Object[])">
            <summary>
            执行Sql，返回影响记录行数
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.Edit``1(``0)">
            <summary>
            更新保存实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.EditRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量更新保存实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.Update``1(``0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件异步统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.ExistAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.FilterWithInclude``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件进行查询数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="include"></param>
            <param name="where">查询数据</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.Find``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.Find``1(System.String)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.Find``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.FindAsync``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.FindAsync``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean)">
            <summary>
            根据条件查询实体，返回实体集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <param name="asNoTracking">是否启用模型跟踪，默认为false不跟踪</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.GetAllEntityTypes">
            <summary>
            获取所有实体类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.GetDbSet``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.GetSingleOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.GetSingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.BulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">数据库表名称，默认为实体名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.SqlQuery``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.SqlQueryAsync``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.SqlQueryByPagination``2(System.String,System.String[],System.Int32,System.Int32,System.Action{``1})">
            <summary>
            分页查询，SQL语句查询，返回指定输出对象集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="eachAction"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.SqlQueryByPagination``1(System.String,System.String[],System.Int32,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            分页查询，SQL语句查询，返回数据实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="parameters">查询SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.SaveChanges">
            <summary>
            保存到数据库
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.SaveChanges(System.Boolean)">
            <summary>
            保存到数据库
            </summary>
            <param name="acceptAllChangesOnSuccess">更改成功发送到数据库后是否调用AcceptAllChanges()</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            保存到数据库
            </summary>
            <param name="cancellationToken">是否等待任务完成时要观察</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            保存到数据库
            </summary>
            <param name="acceptAllChangesOnSuccess">是否更改成功发送到数据库后是否调用AcceptAllChanges()</param>
            <param name="cancellationToken">是否等待任务完成时要观察</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.GetDataTable(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回DataTable数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[]参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.GetDataTables(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回List集合数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[]参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.GetByCompileQuery``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.GetByCompileQueryAsync``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.GetByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.GetByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.FirstOrDefaultByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.FirstOrDefaultByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.FirstOrDefaultWithTrackingByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.FirstOrDefaultWithTrackingByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.CountByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreCustom.CountByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric">
            <summary>
            上下文基础接口
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.GetDatabase">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.Add``1(``0)">
            <summary>
            新增实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.AddAsync``1(``0)">
            <summary>
            异步新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.AddRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.AddRangeAsync``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            异步批量新增
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.Delete``2(``1)">
            <summary>
            物理删除数据
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.EnsureCreated">
            <summary>
            创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.EnsureCreatedAsync">
            <summary>
            异步创建数据表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.ExecuteSqlWithNonQuery(System.String,System.Object[])">
            <summary>
            执行Sql语句，返回影响记录行数
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.ExecuteSqlWithNonQueryAsync(System.String,System.Object[])">
            <summary>
            执行Sql，返回影响记录行数
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.Edit``1(``0)">
            <summary>
            更新保存实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.EditRange``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            批量更新保存实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.Update``1(``0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.CountAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件异步统计数量Count()
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.ExistAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.FilterWithInclude``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件进行查询数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="include"></param>
            <param name="where">查询数据</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.Find``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.Find``1(System.String)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.Find``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.FindAsync``1(System.Object)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.FindAsync``2(``1)">
            <summary>
            根据主键查询实体
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="key">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean)">
            <summary>
            根据条件查询实体，返回实体集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <param name="asNoTracking">是否启用模型跟踪，默认为false不跟踪</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.GetAllEntityTypes">
            <summary>
            获取所有实体类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.GetDbSet``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.GetSingleOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.GetSingleOrDefaultAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.BulkInsert``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            批量插入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">数据库表名称，默认为实体名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.SqlQuery``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.SqlQueryAsync``2(System.String,System.Object[])">
            <summary>
            Sql查询，并返回实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.SqlQueryByPagination``2(System.String,System.String[],System.Int32,System.Int32,System.Action{``1})">
            <summary>
            分页查询，SQL语句查询，返回指定输出对象集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <typeparam name="TView">返回/输出实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="eachAction"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.SqlQueryByPagination``1(System.String,System.String[],System.Int32,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            分页查询，SQL语句查询，返回数据实体集合
            </summary>
            <typeparam name="T">查询对象实体</typeparam>
            <param name="sql">sql语句</param>
            <param name="orderBys">排序条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">每页显示数量</param>
            <param name="parameters">查询SQL参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.SaveChanges">
            <summary>
            保存到数据库
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.SaveChanges(System.Boolean)">
            <summary>
            保存到数据库
            </summary>
            <param name="acceptAllChangesOnSuccess">更改成功发送到数据库后是否调用AcceptAllChanges()</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            保存到数据库
            </summary>
            <param name="cancellationToken">是否等待任务完成时要观察</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            保存到数据库
            </summary>
            <param name="acceptAllChangesOnSuccess">是否更改成功发送到数据库后是否调用AcceptAllChanges()</param>
            <param name="cancellationToken">是否等待任务完成时要观察</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.GetDataTable(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回DataTable数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[]参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.GetDataTables(System.String,System.Int32,System.Data.Common.DbParameter[])">
            <summary>
            根据sql语句返回List集合数据
            </summary>
            <param name="sql">Sql语句</param>
            <param name="cmdTimeout">执行超时时间，默认30毫秒</param>
            <param name="parameters">DbParameter[]参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.GetByCompileQuery``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.GetByCompileQueryAsync``2(``1)">
            <summary>
            根据主键查询返回一个实体，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey">主键类型</typeparam>
            <param name="id">主键值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.GetByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.GetByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询返回实体集合，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.FirstOrDefaultByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.FirstOrDefaultByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.FirstOrDefaultWithTrackingByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.FirstOrDefaultWithTrackingByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            根据条件查询一个实体，启用模型跟踪，该方法是显式编译的查询
            检验序列中是否包含有元素。引用类型的默认值default(T)为null，表示在序列中没有找到元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.CountByCompileQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextCoreGeneric.CountByCompileQueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            统计数量Count()，该方法是显式编译的查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filter">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.IDbContext.IDbContextFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextFactory.CreateContext(SunnyMES.Commons.DataManager.WriteAndReadEnum)">
            <summary>
            
            </summary>
            <param name="writeAndRead">指定读、写操作</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IDbContext.IDbContextFactory.CreateContext``1(SunnyMES.Commons.DataManager.WriteAndReadEnum)">
            <summary>
            创建数据库读写上下文
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="writeAndRead">指定读、写操作</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.IRepositories.ICommonRepository`1">
            <summary>
            定义泛型接口,实体仓储模型的数据标准操作  2
            </summary>
            <typeparam name="TKey">主键类型</typeparam>
        </member>
        <member name="T:SunnyMES.Commons.IRepositories.ICustomRepository`2">
            <summary>
            定义泛型接口,实体仓储模型的数据标准操作
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">主键类型</typeparam>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            同步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Insert(System.Collections.Generic.List{`0})">
            <summary>
            同步批量新增实体。
            </summary>
            <param name="entities">实体集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Delete(`0)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Delete(`1,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="primaryKey">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.DeleteAsync(`1,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="primaryKey">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Update(`0,`1,System.Data.IDbTransaction)">
            <summary>
            同步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="primaryKey">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.UpdateAsync(`0,`1,System.Data.IDbTransaction)">
            <summary>
            异步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="primaryKey">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.UpdateAsync2(`0,`1,System.Data.IDbTransaction)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="primaryKey"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.DeleteSoft(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            同步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.DeleteSoftAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.SetEnabledMark(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1-有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.SetEnabledMarkAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="paramparameters">参数</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Get(`1)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAsync(`1)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetWhere(System.String)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetWhereAsync(System.String)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAll(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithAllPagerAsync(SunnyMES.Commons.Page.PageCustomInfo)">
            <summary>
            查询所有页
            </summary>
            <param name="pageCustomInfo"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPagerCustomSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            通过sql语句查询
            </summary>
            <param name="sql"></param>
            <param name="condition"></param>
            <param name="info"></param>
            <param name="fieldToSort"></param>
            <param name="desc"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPagerCustomSqlAsync``1(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            通过sql语句查询自定义类型
            </summary>
            <typeparam name="W"></typeparam>
            <param name="sql"></param>
            <param name="info"></param>
            <param name="fieldToSort"></param>
            <param name="desc"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Add(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.AddAsync(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.AddRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.AddRangeAsync(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.BulkInsert(System.Collections.Generic.IList{`0},System.String)">
            <summary>
            批量新增SqlBulk方式，效率最高
            </summary>
            <param name="entities"></param>
            <param name="destinationTableName"></param>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.AddBySql(System.String)">
            <summary>
            执行新增的sql语句
            </summary>
            <param name="sql">新增Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Delete(`1)">
            <summary>
            根据主键删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.DeleteBySql(System.String)">
            <summary>
            执行删除数据Sql语句
            </summary>
            <param name="sql">删除的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Edit(`0)">
            <summary>
            更新一个实体数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.EditRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量更新数据实体
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Update(`0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.UpdateBySql(System.String)">
            <summary>
            执行更新数据的Sql语句
            </summary>
            <param name="sql">更新数据的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Exist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.ExistAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetSingle(`1)">
            <summary>
             根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetSingleAsync(`1)">
            <summary>
             根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetSingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetSingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetByPagination(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},SunnyMES.Commons.Pages.PagerInfo,System.Boolean,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
             分页获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where">查询条件</param>
            <param name="pagerInfo">分页信息</param>
            <param name="asc">排序方式</param>
            <param name="orderby">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetBySql(System.String)">
            <summary>
            sql语句查询数据集
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetViews``1(System.String)">
            <summary>
            sql语句查询数据集，返回输出Dto实体
            </summary>
            <typeparam name="TView">返回结果对象</typeparam>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.ICustomRepository`2.GetViews``1(System.String,System.Func{``0,System.Boolean})">
            <summary>
            查询视图
            </summary>
            <typeparam name="TView">返回结果对象</typeparam>
            <param name="viewName">视图名称</param>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.IRepositories.IRepository`2">
            <summary>
            定义泛型接口,实体仓储模型的数据标准操作
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">主键类型</typeparam>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            同步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Insert(System.Collections.Generic.List{`0})">
            <summary>
            同步批量新增实体。
            </summary>
            <param name="entities">实体集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Delete(`0)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Delete(`1,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="primaryKey">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.DeleteAsync(`1,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="primaryKey">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Update(`0,`1,System.Data.IDbTransaction)">
            <summary>
            同步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="primaryKey">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.UpdateAsync(`0,`1,System.Data.IDbTransaction)">
            <summary>
            异步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="primaryKey">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.DeleteSoft(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            同步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.DeleteSoftAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.SetEnabledMark(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1-有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.SetEnabledMarkAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="paramparameters">参数</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Get(`1)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAsync(`1)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetWhere(System.String)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetWhereAsync(System.String)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAll(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.ExecSQLite(System.String)">
            <summary>
            ExecSQLite
            </summary>
            <param name="S_SQLite"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.SQLite_Data_Table(System.String)">
            <summary>
            SQLite_Data_Table
            </summary>
            <param name="S_SQLite"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Data_Table(System.String)">
            <summary>
            Data_Table
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Data_Set(System.String)">
            <summary>
            Data_Set
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.ExecSql(System.String)">
            <summary>
            ExecSql
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Add(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.AddAsync(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.AddRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.AddRangeAsync(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.BulkInsert(System.Collections.Generic.IList{`0},System.String)">
            <summary>
            批量新增SqlBulk方式，效率最高
            </summary>
            <param name="entities"></param>
            <param name="destinationTableName"></param>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.AddBySql(System.String)">
            <summary>
            执行新增的sql语句
            </summary>
            <param name="sql">新增Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Delete(`1)">
            <summary>
            根据主键删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.DeleteBySql(System.String)">
            <summary>
            执行删除数据Sql语句
            </summary>
            <param name="sql">删除的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Edit(`0)">
            <summary>
            更新一个实体数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.EditRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量更新数据实体
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Update(`0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.UpdateBySql(System.String)">
            <summary>
            执行更新数据的Sql语句
            </summary>
            <param name="sql">更新数据的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Exist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.ExistAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetSingle(`1)">
            <summary>
             根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetSingleAsync(`1)">
            <summary>
             根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetSingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetSingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetByPagination(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},SunnyMES.Commons.Pages.PagerInfo,System.Boolean,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
             分页获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where">查询条件</param>
            <param name="pagerInfo">分页信息</param>
            <param name="asc">排序方式</param>
            <param name="orderby">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetBySql(System.String)">
            <summary>
            sql语句查询数据集
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetViews``1(System.String)">
            <summary>
            sql语句查询数据集，返回输出Dto实体
            </summary>
            <typeparam name="TView">返回结果对象</typeparam>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepository`2.GetViews``1(System.String,System.Func{``0,System.Boolean})">
            <summary>
            查询视图
            </summary>
            <typeparam name="TView">返回结果对象</typeparam>
            <param name="viewName">视图名称</param>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2">
            <summary>
            定义泛型接口,实体仓储模型的数据标准操作
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">主键类型</typeparam>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            同步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Insert(System.Collections.Generic.List{`0})">
            <summary>
            同步批量新增实体。
            </summary>
            <param name="entities">实体集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Delete(`0)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Delete(`1,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="primaryKey">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.DeleteAsync(`1,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="primaryKey">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Update(`0,`1,System.Data.IDbTransaction)">
            <summary>
            同步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="primaryKey">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.UpdateAsync(`0,`1,System.Data.IDbTransaction)">
            <summary>
            异步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="primaryKey">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.UpdateAsync2(`0,`1,System.Data.IDbTransaction)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="primaryKey"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.DeleteSoft(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            同步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.DeleteSoftAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.SetEnabledMark(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1-有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.SetEnabledMarkAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="paramparameters">参数</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Get(`1)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAsync(`1)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetWhere(System.String)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetWhereAsync(System.String)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAll(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Add(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.AddAsync(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.AddRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.AddRangeAsync(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.BulkInsert(System.Collections.Generic.IList{`0},System.String)">
            <summary>
            批量新增SqlBulk方式，效率最高
            </summary>
            <param name="entities"></param>
            <param name="destinationTableName"></param>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.AddBySql(System.String)">
            <summary>
            执行新增的sql语句
            </summary>
            <param name="sql">新增Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Delete(`1)">
            <summary>
            根据主键删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.DeleteBySql(System.String)">
            <summary>
            执行删除数据Sql语句
            </summary>
            <param name="sql">删除的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Edit(`0)">
            <summary>
            更新一个实体数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.EditRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量更新数据实体
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Update(`0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.UpdateBySql(System.String)">
            <summary>
            执行更新数据的Sql语句
            </summary>
            <param name="sql">更新数据的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Exist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.ExistAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetSingle(`1)">
            <summary>
             根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetSingleAsync(`1)">
            <summary>
             根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetSingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetSingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetByPagination(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},SunnyMES.Commons.Pages.PagerInfo,System.Boolean,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
             分页获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where">查询条件</param>
            <param name="pagerInfo">分页信息</param>
            <param name="asc">排序方式</param>
            <param name="orderby">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetBySql(System.String)">
            <summary>
            sql语句查询数据集
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetViews``1(System.String)">
            <summary>
            sql语句查询数据集，返回输出Dto实体
            </summary>
            <typeparam name="TView">返回结果对象</typeparam>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IRepositories.IRepositoryGeneric`2.GetViews``1(System.String,System.Func{``0,System.Boolean})">
            <summary>
            查询视图
            </summary>
            <typeparam name="TView">返回结果对象</typeparam>
            <param name="viewName">视图名称</param>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.IRepositories.IRepositoryReport`1">
            <summary>
            定义泛型接口,实体仓储模型的数据标准操作  2
            </summary>
            <typeparam name="TKey">主键类型</typeparam>
        </member>
        <member name="T:SunnyMES.Commons.IServices.ICustomService`3">
            <summary>
            泛型应用服务接口  Generic
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TODto"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetDbTran">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.Get(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetOutDto(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetOutDtoAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetOutDtoWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetOutDtoWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAll(System.Data.IDbTransaction)">
            <summary>
            同步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            异步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            同步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.Insert(System.Collections.Generic.List{`0})">
            <summary>
            同步批量新增实体。
            </summary>
            <param name="entities">实体集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.Update(`0,`2,System.Data.IDbTransaction)">
            <summary>
            同步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.UpdateAsync(`0,`2,System.Data.IDbTransaction)">
            <summary>
            异步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.UpdateAsync2(`0,`2,System.Data.IDbTransaction)">
            <summary>
            异步更新实体 My。
            </summary>
            <param name="entity"></param>
            <param name="id"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.Delete(`0,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.Delete(`2,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.DeleteAsync(`2,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.DeleteSoft(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            同步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.DeleteSoftAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.SetEnabledMark(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1-有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.SetEnabledMarkAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="paramparameters"></param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithAllPagerAsync(SunnyMES.Commons.Page.PageCustomInfo)">
            <summary>
            查询所有页
            </summary>
            <param name="pageCustomInfo"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPager(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPagerAsync(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.ICustomService`3.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.IServices.IService`3">
            <summary>
            泛型应用服务接口
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TODto"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.Get(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetOutDto(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetOutDtoAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetOutDtoWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetOutDtoWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAll(System.Data.IDbTransaction)">
            <summary>
            同步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            异步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            同步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.Insert(System.Collections.Generic.List{`0})">
            <summary>
            同步批量新增实体。
            </summary>
            <param name="entities">实体集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.Update(`0,`2,System.Data.IDbTransaction)">
            <summary>
            同步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.UpdateAsync(`0,`2,System.Data.IDbTransaction)">
            <summary>
            异步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.Delete(`0,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.Delete(`2,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.DeleteAsync(`2,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.DeleteSoft(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            同步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.DeleteSoftAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.SetEnabledMark(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1-有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.SetEnabledMarkAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="paramparameters"></param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPager(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPagerAsync(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.ExecSQLite(System.String)">
            <summary>
            ExecSQLite
            </summary>
            <param name="S_SQLite"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.SQLite_Data_Table(System.String)">
            <summary>
            SQLite_Data_Table
            </summary>
            <param name="S_SQLite"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.Data_Table(System.String)">
            <summary>
            Data_Table
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.Data_Set(System.String)">
            <summary>
            Data_Set
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IService`3.ExecSql(System.String)">
            <summary>
            ExecSql
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.IServices.IServiceGeneric`3">
            <summary>
            泛型应用服务接口  Generic
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TODto"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.Get(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetOutDto(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetOutDtoAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetOutDtoWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetOutDtoWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAll(System.Data.IDbTransaction)">
            <summary>
            同步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            异步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步根据查询条件查询数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            同步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.Insert(System.Collections.Generic.List{`0})">
            <summary>
            同步批量新增实体。
            </summary>
            <param name="entities">实体集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.Update(`0,`2,System.Data.IDbTransaction)">
            <summary>
            同步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.UpdateAsync(`0,`2,System.Data.IDbTransaction)">
            <summary>
            异步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.UpdateAsync2(`0,`2,System.Data.IDbTransaction)">
            <summary>
            异步更新实体 My。
            </summary>
            <param name="entity"></param>
            <param name="id"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步更新某一字段值
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.Delete(`0,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.Delete(`2,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.DeleteAsync(`2,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.DeleteSoft(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            同步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.DeleteSoftAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.SetEnabledMark(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1-有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.SetEnabledMarkAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="paramparameters"></param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="tran">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPager(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPagerAsync(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.IServices.IServiceGeneric`3.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.IServices.IServiceReport`1">
            <summary>
            泛型应用服务接口 IServiceReport
            </summary>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="T:SunnyMES.Commons.Models.BaseEntity`1">
            <summary>
            定义领域对象框架实体类的基类，系统默认主键为Id
            </summary>
            <typeparam name="TKey">实体主键类型</typeparam>
        </member>
        <member name="M:SunnyMES.Commons.Models.BaseEntity`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.BaseEntity`1.Id">
            <summary>
            获取或设置 编号
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Models.BaseEntity`1.KeyIsNull">
            <summary>
            判断主键是否为空
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Models.BaseEntity`1.GenerateDefaultKeyVal">
            <summary>
            创建默认的主键值
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.BaseEntityGeneric`1">
            <summary>
            定义领域对象框架实体类的基类，系统默认主键为Id
            </summary>
            <typeparam name="TKey">实体主键类型</typeparam>
        </member>
        <member name="M:SunnyMES.Commons.Models.BaseEntityGeneric`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.BaseEntityGeneric`1.Id">
            <summary>
            获取或设置 编号
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Models.BaseEntityGeneric`1.KeyIsNull">
            <summary>
            判断主键是否为空
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Models.BaseEntityGeneric`1.GenerateDefaultKeyVal">
            <summary>
            创建默认的主键值
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.BaseViewModel">
            <summary>
            所有数据库视图对应实体类必须继承此类
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.Entity">
            <summary>
            实体基类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Models.Entity.KeyIsNull">
            <summary>
            判断主键是否为空
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Models.Entity.GenerateDefaultKeyVal">
            <summary>
            创建默认的主键值
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Models.Entity.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.EntityGeneric">
            <summary>
            实体基类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Models.EntityGeneric.KeyIsNull">
            <summary>
            判断主键是否为空
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Models.EntityGeneric.GenerateDefaultKeyVal">
            <summary>
            创建默认的主键值
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Models.EntityGeneric.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.IBaseEntity`1">
            <summary>
            数据模型接口
            </summary>
            <typeparam name="TKey">实体主键类型</typeparam>
        </member>
        <member name="P:SunnyMES.Commons.Models.IBaseEntity`1.Id">
            <summary>
            获取 实体唯一标识，主键
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.IBaseEntityGeneric`1">
            <summary>
            数据模型接口
            </summary>
            <typeparam name="TKey">实体主键类型</typeparam>
        </member>
        <member name="T:SunnyMES.Commons.Models.ICreationAudited">
            <summary>
            定义创建审计信息：给实体添加创建时的 创建人CreatorUserId，创建时间CreatorTime 的审计信息，这些值将在数据层执行 创建Insert 时自动赋值。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.ICreationAudited.CreatorTime">
            <summary>
            获取或设置 创建日期
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.ICreationAudited.CreatorUserId">
            <summary>
            获取或设置 创建用户主键
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.IDataAuthEnabled">
            <summary>
            定义数据权限的更新，删除状态
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.IDataAuthEnabled.Updatable">
            <summary>
            获取或设置 是否可更新的数据权限状态
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.IDataAuthEnabled.Deletable">
            <summary>
            获取或设置 是否可删除的数据权限状态
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.IDeleteAudited">
            <summary>
             定义逻辑删除功能审计信息
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.IDeleteAudited.DeleteMark">
            <summary>
            获取或设置 逻辑删除标记
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.IDeleteAudited.DeleteUserId">
            <summary>
            获取或设置 删除实体的用户
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.IDeleteAudited.DeleteTime">
            <summary>
            获取或设置 删除实体时间
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.IEntity">
            <summary>
            实体基接口，是所有实体的基接口
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.IEntityHash">
            <summary>
            定义实体Hash功能，对实体的属性值进行Hash，确定实体是否存在变化，
            这些变化可用于系统初始化时确定是否需要进行数据同步
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.IExpirable">
            <summary>
            定义可过期性，包含生效时间和过期时间：给实体添加 生效时间BeginTime，过期时间EndTime 的属性
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.IExpirable.BeginTime">
            <summary>
            获取或设置 生效时间
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.IExpirable.EndTime">
            <summary>
            获取或设置 过期时间
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.IModificationAudited">
            <summary>
            定义更新审计的信息
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.IModificationAudited.LastModifyUserId">
            <summary>
            获取或设置 最后修改用户
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.IModificationAudited.LastModifyTime">
            <summary>
            获取或设置 最后修改时间
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.IMustHaveTenant">
            <summary>
            定义多租户实体信息
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.IMustHaveTenant.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.CommonResult">
            <summary>
             公共返回结果对象
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Models.CommonResult.#ctor">
            <summary>
            BaseResult构造函数
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Models.CommonResult.#ctor(System.String,System.String)">
            <summary>
            BaseResult构造函数
            </summary>
            <param name="errmsg">错误消息</param>
            <param name="errcode">错误代码</param>
        </member>
        <member name="M:SunnyMES.Commons.Models.CommonResult.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="errmsg">错误消息</param>
            <param name="success">成功或失败</param>
            <param name="errcode">错误代码</param>
        </member>
        <member name="F:SunnyMES.Commons.Models.CommonResult.m_ErrCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Models.CommonResult.m_ErrMsg">
            <summary>
            错误描述信息
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Models.CommonResult.m_Success">
            <summary>
            成功或失败
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Models.CommonResult.m_ResData">
            <summary>
            用来传递的object内容
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Models.CommonResult.m_Sounds">
            <summary>
            用来传递的Sounds内容
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.CommonResult.ResultCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.CommonResult.ResultMsg">
            <summary>
            如果不成功，返回的错误描述信息
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.CommonResult.Success">
            <summary>
            成功返回true，失败返回false
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.CommonResult.ResData">
            <summary>
            用来传递的object内容
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.CommonResult.Sounds">
            <summary>
            用来传递的Sounds内容
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.CommonResult`1">
            <summary>
            WEBAPI通用返回泛型基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:SunnyMES.Commons.Models.CommonResult`1.Result">
            <summary>
            回传的结果
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Models.TokenResult">
            <summary>
            Token返回结果对象
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Models.TokenResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.TokenResult.AccessToken">
            <summary>
            获取到的凭证值
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Models.TokenResult.ExpiresIn">
            <summary>
            凭证有效时间，单位：分钟
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Models.GrantType.Password">
            <summary>
            密码校验。
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Models.GrantType.ClientCredentials">
            <summary>
            ClientCredential。
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Module.AutoMapperService">
            <summary>
            AutoMapperService
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Module.AutoMapperService.UsePack(System.IServiceProvider)">
            <summary>
            
            </summary>
            <param name="provider"></param>
        </member>
        <member name="T:SunnyMES.Commons.Repositories.BaseCommonRepository`1">
            <summary>
            泛型仓储，实现泛型仓储接口
            </summary>    
            <typeparam name="TKey">实体主键类型</typeparam>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.I_DBTimeout">
            <summary>
            数据库超时(10分)  600000 秒
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.S_DateTimeFormat">
            <summary>
            时间日期格式 yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.S_PwdKey">
            <summary>
            字符串密钥 123456
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.S_IsCheckPN">
            <summary>
            是否检查料号
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.S_IsCheckPO">
            <summary>
            是否检查工单
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.S_ApplicationType">
            <summary>
            程序类别
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCommonRepository`1.S_IsLegalPage">
            <summary>
            是否合法的页面
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.S_TTScanType">
            <summary>
            TT 扫描类型 //扫码类型 1:条码SN 2:BOX 3:MachineBox (未配置默认1) 
            4:混合（前3种类型都可以扫描）当输入为1类型时，且条码被绑定在2或3中，这时对SN做解除动作。
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.I_FullBoxQTY">
            <summary>
            TT 满箱数量
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1._dbContext">
            <summary>
             EF DBContext
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.dbConnectionOptions">
            <summary>
            获取访问数据库配置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.parameterPrefix">
            <summary>
            数据库参数化访问的占位符
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.safeFieldFormat">
            <summary>
            防止和保留字、关键字同名的字段格式，如[value]
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.primaryKey">
            <summary>
            数据库的主键字段名,若主键不是Id请重载BaseRepository设置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.sortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.isDescending">
            <summary>
            是否为降序
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.selectedFields">
            <summary>
            选择的字段，默认为所有(*) 
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.isMultiTenant">
            <summary>
            是否开启多租户
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.cacheHelper">
            <summary>
            缓存读取实例
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.oStationAttributes">
            <summary>
            站点详细属性集合
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.oPoAttributes">
            <summary>
            工单详细属性集合
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCommonRepository`1.baseCommonHeader">
            <summary>
            请求头集合
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCommonRepository`1.SortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCommonRepository`1.PrimaryKey">
            <summary>
            数据库访问对象的外键约束
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.#ctor(SunnyMES.Commons.IDbContext.IDbContextCore)">
            <summary>
            构造方法，注入上下文
            </summary>
            <param name="dbContext">上下文</param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.#ctor(SunnyMES.Commons.IDbContext.IDbContextFactory)">
            <summary>
            构造方法，注入上下文
            </summary>
            <param name="dbContextFactory">上下文</param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.GetSNDateTime(System.String)">
            <summary>
            GetSNDateTime
            </summary>
            <param name="S_SN"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.ExecuteTransactionSqlAsync(System.String)">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.ExecuteTransactionSql(System.String)">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.ExecuteTransactionSqlAsync(System.Collections.Generic.List{System.String})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.ExecuteTransactionSql(System.Collections.Generic.List{System.String})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.ExecuteTransactionSqlAdapterAsync(System.String)">
            <summary>
            返回多个实体
            </summary>
            <param name="sqls"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.HasInjectionData(System.String)">
            <summary>
            验证是否存在注入代码(条件语句）
            </summary>
            <param name="inputData"></param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.GetRegexString">
            <summary>
            获取正则表达式
            </summary>
            <returns></returns>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCommonRepository`1.DbContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCommonRepository`1.DapperConn">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCommonRepository`1.DapperConnRead2">
            <summary>
            用Dapper原生方法，仅用于只读数据库
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCommonRepository`1.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Repositories.BaseCustomRepository`2">
            <summary>
            泛型仓储，实现泛型仓储接口
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">实体主键类型</typeparam>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCustomRepository`2.I_DBTimeout">
            <summary>
            数据库超时(10分)  600000 秒
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCustomRepository`2._dbContext">
            <summary>
             EF DBContext
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCustomRepository`2.dbConnectionOptions">
            <summary>
            获取访问数据库配置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCustomRepository`2.tableName">
            <summary>
            需要初始化的对象表名
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCustomRepository`2.parameterPrefix">
            <summary>
            数据库参数化访问的占位符
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCustomRepository`2.safeFieldFormat">
            <summary>
            防止和保留字、关键字同名的字段格式，如[value]
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCustomRepository`2.primaryKey">
            <summary>
            数据库的主键字段名,若主键不是Id请重载BaseRepository设置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCustomRepository`2.sortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCustomRepository`2.isDescending">
            <summary>
            是否为降序
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCustomRepository`2.selectedFields">
            <summary>
            选择的字段，默认为所有(*) 
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseCustomRepository`2.isMultiTenant">
            <summary>
            是否开启多租户
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCustomRepository`2.SortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCustomRepository`2.PrimaryKey">
            <summary>
            数据库访问对象的外键约束
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.#ctor(SunnyMES.Commons.IDbContext.IDbContextCoreCustom)">
            <summary>
            构造方法，注入上下文
            </summary>
            <param name="dbContext">上下文</param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.#ctor(SunnyMES.Commons.IDbContext.IDbContextFactory)">
            <summary>
            构造方法，注入上下文
            </summary>
            <param name="dbContextFactory">上下文</param>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DapperConn">
            <summary>
            用Dapper原生方法操作数据，支持读写操作
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DapperConnRead">
            <summary>
            用Dapper原生方法，仅用于只读数据库
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetWhere(System.String)">
            <summary>
            根据条件获取一个对象
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetWhereAsync(System.String)">
            <summary>
            根据条件异步获取一个对象
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAll(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件获取数据集合
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件获取数据集合
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithAllPagerAsync(SunnyMES.Commons.Page.PageCustomInfo)">
            <summary>
            查询整个表 慎用
            </summary>
            <param name="pageCustomInfo"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithPagerCustomSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="sql">查询语句</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步新增
            </summary>
            <param name="entity"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Insert(System.Collections.Generic.List{`0})">
            <summary>
            批量插入数据
            </summary>
            <param name="entities"></param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Update(`0,`1,System.Data.IDbTransaction)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <param name="primaryKey">主键</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Update(`0,System.Data.IDbTransaction)">
            <summary>
            更新指定字段的值
            </summary>
            <param name="entity"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.UpdateAsync(`0,`1,System.Data.IDbTransaction)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="primaryKey"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Delete(`0)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Delete(`1,System.Data.IDbTransaction)">
            <summary>
            物理删除信息
            </summary>
            <param name="primaryKey"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DeleteAsync(`1,System.Data.IDbTransaction)">
            <summary>
            异步物理删除信息
            </summary>
            <param name="primaryKey"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids">主键Id List集合</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DeleteByUser(`1,System.String,System.Data.IDbTransaction)">
            <summary>
            根据指定对象的ID和用户ID,从数据库中删除指定对象(用于记录人员的操作日志）
            </summary>
            <param name="primaryKey">指定对象的ID</param>
            <param name="userId">用户ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DeleteByUserAsync(`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步根据指定对象的ID和用户ID,从数据库中删除指定对象(用于记录人员的操作日志）
            </summary>
            <param name="primaryKey">指定对象的ID</param>
            <param name="userId">用户ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DeleteSoft(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            逻辑删除信息，bl为true时将DeleteMark设置为1删除，bl为flase时将DeleteMark设置为10-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DeleteSoftAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步逻辑删除信息，bl为true时将DeleteMark设置为1删除，bl为flase时将DeleteMark设置为0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.SetEnabledMark(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1-有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.SetEnabledMarkAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="paramparameters"></param>
            <param name="userId"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DbContext">
            <summary>
            EF 上下文接口，可读可写
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DbContextRead">
            <summary>
            EF 上下文接口，仅可读
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Add(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.AddAsync(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.AddRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增实体，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.AddRangeAsync(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增实体，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.BulkInsert(System.Collections.Generic.IList{`0},System.String)">
            <summary>
            批量新增SqlBulk方式，效率最高
            </summary>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">数据库表名称，默认为实体名称</param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.AddBySql(System.String)">
            <summary>
            执行新增的sql语句
            </summary>
            <param name="sql">新增Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Edit(`0)">
            <summary>
            更新数据实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.EditRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量更新数据实体
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Update(`0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.UpdateBySql(System.String)">
            <summary>
            执行更新数据的Sql语句
            </summary>
            <param name="sql">更新数据的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Delete(`1)">
            <summary>
            根据主键删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.DeleteBySql(System.String)">
            <summary>
            执行删除数据Sql语句
            </summary>
            <param name="sql">删除的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Get(`1)">
            <summary>
            根据id获取一个对象
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAsync(`1)">
            <summary>
            异步根据id获取一个对象
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Exist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.ExistAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetSingle(`1)">
            <summary>
            根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetSingleAsync(`1)">
            <summary>
            根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetSingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetSingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetByPagination(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},SunnyMES.Commons.Pages.PagerInfo,System.Boolean,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
             分页获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where">查询条件</param>
            <param name="pagerInfo">分页信息</param>
            <param name="asc">排序方式</param>
            <param name="orderby">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetBySql(System.String)">
            <summary>
            sql语句查询数据集
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetViews``1(System.String)">
            <summary>
            sql语句查询数据集，返回输出Dto实体
            </summary>
            <typeparam name="TView"></typeparam>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetViews``1(System.String,System.Func{``0,System.Boolean})">
            <summary>
            查询视图
            </summary>
            <typeparam name="TView">返回结果对象</typeparam>
            <param name="viewName">视图名称</param>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.HasInjectionData(System.String)">
            <summary>
            验证是否存在注入代码(条件语句）
            </summary>
            <param name="inputData"></param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetRegexString">
            <summary>
            获取正则表达式
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseCustomRepository`2.GetDbTran">
            <summary>
            获取事务对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Repositories.BaseRepository`2">
            <summary>
            泛型仓储，实现泛型仓储接口
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">实体主键类型</typeparam>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepository`2._dbContext">
            <summary>
             EF DBContext
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepository`2.dbConnectionOptions">
            <summary>
            获取访问数据库配置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepository`2.tableName">
            <summary>
            需要初始化的对象表名
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepository`2.parameterPrefix">
            <summary>
            数据库参数化访问的占位符
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepository`2.safeFieldFormat">
            <summary>
            防止和保留字、关键字同名的字段格式，如[value]
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepository`2.primaryKey">
            <summary>
            数据库的主键字段名,若主键不是Id请重载BaseRepository设置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepository`2.sortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepository`2.isDescending">
            <summary>
            是否为降序
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepository`2.selectedFields">
            <summary>
            选择的字段，默认为所有(*) 
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepository`2.isMultiTenant">
            <summary>
            是否开启多租户
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepository`2.SortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepository`2.PrimaryKey">
            <summary>
            数据库访问对象的外键约束
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.#ctor(SunnyMES.Commons.IDbContext.IDbContextCore)">
            <summary>
            构造方法，注入上下文
            </summary>
            <param name="dbContext">上下文</param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.#ctor(SunnyMES.Commons.IDbContext.IDbContextFactory)">
            <summary>
            构造方法，注入上下文
            </summary>
            <param name="dbContextFactory">上下文</param>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepository`2.DapperConn">
            <summary>
            用Dapper原生方法操作数据，支持读写操作
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepository`2.DapperConnRead">
            <summary>
            用Dapper原生方法，仅用于只读数据库
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetWhere(System.String)">
            <summary>
            根据条件获取一个对象
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetWhereAsync(System.String)">
            <summary>
            根据条件异步获取一个对象
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAll(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件获取数据集合
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件获取数据集合
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步新增
            </summary>
            <param name="entity"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Insert(System.Collections.Generic.List{`0})">
            <summary>
            批量插入数据
            </summary>
            <param name="entities"></param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Update(`0,`1,System.Data.IDbTransaction)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <param name="primaryKey">主键</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Update(`0,System.Data.IDbTransaction)">
            <summary>
            更新指定字段的值
            </summary>
            <param name="entity"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.UpdateAsync(`0,`1,System.Data.IDbTransaction)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="primaryKey"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Delete(`0)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Delete(`1,System.Data.IDbTransaction)">
            <summary>
            物理删除信息
            </summary>
            <param name="primaryKey"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.DeleteAsync(`1,System.Data.IDbTransaction)">
            <summary>
            异步物理删除信息
            </summary>
            <param name="primaryKey"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids">主键Id List集合</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.DeleteByUser(`1,System.String,System.Data.IDbTransaction)">
            <summary>
            根据指定对象的ID和用户ID,从数据库中删除指定对象(用于记录人员的操作日志）
            </summary>
            <param name="primaryKey">指定对象的ID</param>
            <param name="userId">用户ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.DeleteByUserAsync(`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步根据指定对象的ID和用户ID,从数据库中删除指定对象(用于记录人员的操作日志）
            </summary>
            <param name="primaryKey">指定对象的ID</param>
            <param name="userId">用户ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.DeleteSoft(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            逻辑删除信息，bl为true时将DeleteMark设置为1删除，bl为flase时将DeleteMark设置为10-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.DeleteSoftAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步逻辑删除信息，bl为true时将DeleteMark设置为1删除，bl为flase时将DeleteMark设置为0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.SetEnabledMark(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1-有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.SetEnabledMarkAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="paramparameters"></param>
            <param name="userId"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.ExecSQLite(System.String)">
            <summary>
            ExecSQLite
            </summary>
            <param name="S_SQLite"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.SQLite_Data_Table(System.String)">
            <summary>
            SQLite_Data_Table
            </summary>
            <param name="S_SQLite"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Data_Table(System.String)">
            <summary>
            Data_Table
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Data_Set(System.String)">
            <summary>
            Data_Set
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.ExecSql(System.String)">
            <summary>
            ExecSql
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepository`2.DbContext">
            <summary>
            EF 上下文接口，可读可写
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepository`2.DbContextRead">
            <summary>
            EF 上下文接口，仅可读
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Add(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.AddAsync(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.AddRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增实体，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.AddRangeAsync(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增实体，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.BulkInsert(System.Collections.Generic.IList{`0},System.String)">
            <summary>
            批量新增SqlBulk方式，效率最高
            </summary>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">数据库表名称，默认为实体名称</param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.AddBySql(System.String)">
            <summary>
            执行新增的sql语句
            </summary>
            <param name="sql">新增Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Edit(`0)">
            <summary>
            更新数据实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.EditRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量更新数据实体
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Update(`0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.UpdateBySql(System.String)">
            <summary>
            执行更新数据的Sql语句
            </summary>
            <param name="sql">更新数据的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Delete(`1)">
            <summary>
            根据主键删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.DeleteBySql(System.String)">
            <summary>
            执行删除数据Sql语句
            </summary>
            <param name="sql">删除的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Get(`1)">
            <summary>
            根据id获取一个对象
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAsync(`1)">
            <summary>
            异步根据id获取一个对象
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Exist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.ExistAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetSingle(`1)">
            <summary>
            根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetSingleAsync(`1)">
            <summary>
            根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetSingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetSingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetByPagination(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},SunnyMES.Commons.Pages.PagerInfo,System.Boolean,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
             分页获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where">查询条件</param>
            <param name="pagerInfo">分页信息</param>
            <param name="asc">排序方式</param>
            <param name="orderby">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetBySql(System.String)">
            <summary>
            sql语句查询数据集
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetViews``1(System.String)">
            <summary>
            sql语句查询数据集，返回输出Dto实体
            </summary>
            <typeparam name="TView"></typeparam>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetViews``1(System.String,System.Func{``0,System.Boolean})">
            <summary>
            查询视图
            </summary>
            <typeparam name="TView">返回结果对象</typeparam>
            <param name="viewName">视图名称</param>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.HasInjectionData(System.String)">
            <summary>
            验证是否存在注入代码(条件语句）
            </summary>
            <param name="inputData"></param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.GetRegexString">
            <summary>
            获取正则表达式
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepository`2.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2">
            <summary>
            泛型仓储，实现泛型仓储接口
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <typeparam name="TKey">实体主键类型</typeparam>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.I_DBTimeout">
            <summary>
            数据库超时(10分)  600000 秒
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2._dbContext">
            <summary>
             EF DBContext
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.dbConnectionOptions">
            <summary>
            获取访问数据库配置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.tableName">
            <summary>
            需要初始化的对象表名
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.parameterPrefix">
            <summary>
            数据库参数化访问的占位符
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.safeFieldFormat">
            <summary>
            防止和保留字、关键字同名的字段格式，如[value]
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.primaryKey">
            <summary>
            数据库的主键字段名,若主键不是Id请重载BaseRepository设置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.sortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.isDescending">
            <summary>
            是否为降序
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.selectedFields">
            <summary>
            选择的字段，默认为所有(*) 
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.isMultiTenant">
            <summary>
            是否开启多租户
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.SortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.PrimaryKey">
            <summary>
            数据库访问对象的外键约束
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.#ctor(SunnyMES.Commons.IDbContext.IDbContextCoreGeneric)">
            <summary>
            构造方法，注入上下文
            </summary>
            <param name="dbContext">上下文</param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.#ctor(SunnyMES.Commons.IDbContext.IDbContextFactory)">
            <summary>
            构造方法，注入上下文
            </summary>
            <param name="dbContextFactory">上下文</param>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DapperConn">
            <summary>
            用Dapper原生方法操作数据，支持读写操作
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DapperConnRead">
            <summary>
            用Dapper原生方法，仅用于只读数据库
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetWhere(System.String)">
            <summary>
            根据条件获取一个对象
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetWhereAsync(System.String)">
            <summary>
            根据条件异步获取一个对象
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAll(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            获取所有数据，谨慎使用
            </summary>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件获取数据集合
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件获取数据集合
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            新增
            </summary>
            <param name="entity"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步新增
            </summary>
            <param name="entity"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Insert(System.Collections.Generic.List{`0})">
            <summary>
            批量插入数据
            </summary>
            <param name="entities"></param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Update(`0,`1,System.Data.IDbTransaction)">
            <summary>
            更新
            </summary>
            <param name="entity"></param>
            <param name="primaryKey">主键</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Update(`0,System.Data.IDbTransaction)">
            <summary>
            更新指定字段的值
            </summary>
            <param name="entity"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.UpdateAsync(`0,`1,System.Data.IDbTransaction)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="primaryKey"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Delete(`0)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Delete(`1,System.Data.IDbTransaction)">
            <summary>
            物理删除信息
            </summary>
            <param name="primaryKey"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DeleteAsync(`1,System.Data.IDbTransaction)">
            <summary>
            异步物理删除信息
            </summary>
            <param name="primaryKey"></param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids">主键Id List集合</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DeleteByUser(`1,System.String,System.Data.IDbTransaction)">
            <summary>
            根据指定对象的ID和用户ID,从数据库中删除指定对象(用于记录人员的操作日志）
            </summary>
            <param name="primaryKey">指定对象的ID</param>
            <param name="userId">用户ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DeleteByUserAsync(`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步根据指定对象的ID和用户ID,从数据库中删除指定对象(用于记录人员的操作日志）
            </summary>
            <param name="primaryKey">指定对象的ID</param>
            <param name="userId">用户ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DeleteSoft(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            逻辑删除信息，bl为true时将DeleteMark设置为1删除，bl为flase时将DeleteMark设置为10-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DeleteSoftAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步逻辑删除信息，bl为true时将DeleteMark设置为1删除，bl为flase时将DeleteMark设置为0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.SetEnabledMark(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1-有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.SetEnabledMarkAsync(System.Boolean,`1,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="primaryKey">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="paramparameters"></param>
            <param name="userId"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值，字段值为数字
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DbContext">
            <summary>
            EF 上下文接口，可读可写
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DbContextRead">
            <summary>
            EF 上下文接口，仅可读
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Add(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.AddAsync(`0)">
            <summary>
            新增实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.AddRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增实体，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.AddRangeAsync(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量新增实体，数量量较多是推荐使用BulkInsert()
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.BulkInsert(System.Collections.Generic.IList{`0},System.String)">
            <summary>
            批量新增SqlBulk方式，效率最高
            </summary>
            <param name="entities">数据实体集合</param>
            <param name="destinationTableName">数据库表名称，默认为实体名称</param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.AddBySql(System.String)">
            <summary>
            执行新增的sql语句
            </summary>
            <param name="sql">新增Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Edit(`0)">
            <summary>
            更新数据实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.EditRange(System.Collections.Generic.ICollection{`0})">
            <summary>
            批量更新数据实体
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Update(`0,System.String[])">
            <summary>
            更新指定字段的值
            </summary>
            <param name="model">数据实体</param>
            <param name="updateColumns">指定字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.UpdateBySql(System.String)">
            <summary>
            执行更新数据的Sql语句
            </summary>
            <param name="sql">更新数据的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Delete(`1)">
            <summary>
            根据主键删除数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.DeleteBySql(System.String)">
            <summary>
            执行删除数据Sql语句
            </summary>
            <param name="sql">删除的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Get(`1)">
            <summary>
            根据id获取一个对象
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAsync(`1)">
            <summary>
            异步根据id获取一个对象
            </summary>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件统计数量Count()
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Exist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.ExistAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在,存在返回true，不存在返回false
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetSingle(`1)">
            <summary>
            根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetSingleAsync(`1)">
            <summary>
            根据主键获取实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetSingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetSingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取单个实体。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetByPagination(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},SunnyMES.Commons.Pages.PagerInfo,System.Boolean,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
             分页获取实体列表。建议：如需使用Include和ThenInclude请重载此方法。
            </summary>
            <param name="where">查询条件</param>
            <param name="pagerInfo">分页信息</param>
            <param name="asc">排序方式</param>
            <param name="orderby">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetBySql(System.String)">
            <summary>
            sql语句查询数据集
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetViews``1(System.String)">
            <summary>
            sql语句查询数据集，返回输出Dto实体
            </summary>
            <typeparam name="TView"></typeparam>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetViews``1(System.String,System.Func{``0,System.Boolean})">
            <summary>
            查询视图
            </summary>
            <typeparam name="TView">返回结果对象</typeparam>
            <param name="viewName">视图名称</param>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.HasInjectionData(System.String)">
            <summary>
            验证是否存在注入代码(条件语句）
            </summary>
            <param name="inputData"></param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.GetRegexString">
            <summary>
            获取正则表达式
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryGeneric`2.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Repositories.BaseRepositoryReport`1">
            <summary>
            泛型仓储，实现泛型仓储接口
            </summary>    
            <typeparam name="TKey">实体主键类型</typeparam>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.I_DBTimeout">
            <summary>
            数据库超时(10分)  600000 秒
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_DateTimeFormat">
            <summary>
            时间日期格式 yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_PwdKey">
            <summary>
            字符串密钥 123456
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_IsCheckPN">
            <summary>
            是否检查料号
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_IsCheckPO">
            <summary>
            是否检查工单
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_ApplicationType">
            <summary>
            程序类别
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_IsLegalPage">
            <summary>
            是否合法的页面
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_TTScanType">
            <summary>
            TT 扫描类型 //扫码类型 1:条码SN 2:BOX 3:MachineBox (未配置默认1) 
            4:混合（前3种类型都可以扫描）当输入为1类型时，且条码被绑定在2或3中，这时对SN做解除动作。
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_IsTTRegistSN">
            <summary>
            IsTTRegistSN
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_TTBoxType">
            <summary>
            TTBoxType
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_IsChangePN">
            <summary>
            IsChangePN
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_IsChangePO">
            <summary>
            IsChangePO
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_ChangedUnitStateID">
            <summary>
            ChangedUnitStateID
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_JumpFromUnitStateID">
            <summary>
            JumpFromUnitStateID
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_JumpToUnitStateID">
            <summary>
            JumpToUnitStateID
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_JumpStatusID">
            <summary>
            JumpStatusID
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_JumpUnitStateID">
            <summary>
            JumpUnitStateID
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_OperationType">
            <summary>
            OperationType
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_IsCheckCardID">
            <summary>
            IsCheckCardID
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.S_CardIDPattern">
            <summary>
            CardIDPattern
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1._dbContext">
            <summary>
             EF DBContext
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.dbConnectionOptions">
            <summary>
            获取访问数据库配置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.parameterPrefix">
            <summary>
            数据库参数化访问的占位符
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.safeFieldFormat">
            <summary>
            防止和保留字、关键字同名的字段格式，如[value]
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.primaryKey">
            <summary>
            数据库的主键字段名,若主键不是Id请重载BaseRepository设置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.sortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.isDescending">
            <summary>
            是否为降序
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.selectedFields">
            <summary>
            选择的字段，默认为所有(*) 
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.isMultiTenant">
            <summary>
            是否开启多租户
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.SortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.PrimaryKey">
            <summary>
            数据库访问对象的外键约束
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.#ctor(SunnyMES.Commons.IDbContext.IDbContextCore)">
            <summary>
            构造方法，注入上下文
            </summary>
            <param name="dbContext">上下文</param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.#ctor(SunnyMES.Commons.IDbContext.IDbContextFactory)">
            <summary>
            构造方法，注入上下文
            </summary>
            <param name="dbContextFactory">上下文</param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.GetSNDateTime(System.String)">
            <summary>
            GetSNDateTime
            </summary>
            <param name="S_SN"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.Data_Table(System.String)">
            <summary>
            Data_Table
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.Data_Set(System.String)">
            <summary>
            Data_Set
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.ExecSql(System.String)">
            <summary>
            ExecSql
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <param name="I_MaxID">MaxID</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.ExecuteTransactionSqlAsync(System.String)">
            <summary>
            多表多数据操作批量插入、更新、删除--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.HasInjectionData(System.String)">
            <summary>
            验证是否存在注入代码(条件语句）
            </summary>
            <param name="inputData"></param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.GetRegexString">
            <summary>
            获取正则表达式
            </summary>
            <returns></returns>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.DbContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.DapperConn">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.DapperConnRead2">
            <summary>
            用Dapper原生方法，仅用于只读数据库
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SunnyMES.Commons.Repositories.BaseRepositoryReport`1.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Services.BaseCommonService`1.repository">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCommonService`1.#ctor(SunnyMES.Commons.IRepositories.ICommonRepository{`0})">
            <summary>
            
            </summary>
            <param name="iRepository"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCommonService`1.#ctor(SunnyMES.Commons.IRepositories.ICommonRepository{`0},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            
            </summary>
            <param name="iRepository"></param>
            <param name="accessor"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCommonService`1.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCommonService`1.System#IDisposable#Dispose">
            <summary>
            添加此代码以正确实现可处置模式
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Services.BaseCustomService`3">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TODto"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="F:SunnyMES.Commons.Services.BaseCustomService`3.repository">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.#ctor(SunnyMES.Commons.IRepositories.ICustomRepository{`0,`2})">
            <summary>
            
            </summary>
            <param name="iRepository"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.#ctor(SunnyMES.Commons.IRepositories.ICustomRepository{`0,`2},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            
            </summary>
            <param name="iRepository"></param>
            <param name="accessor"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.Delete(`0,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.Delete(`2,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.DeleteAsync(`2,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.DeleteSoft(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.DeleteSoftAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.Get(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetOutDto(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetOutDtoWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetOutDtoWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAll(System.Data.IDbTransaction)">
            <summary>
            同步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            异步步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetOutDtoAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
             根据查询条件查询数据
             </summary>
             <param name="where">查询条件</param>
             <param name="trans">事务对象</param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
             异步根据查询条件查询数据
             </summary>
             <param name="where">查询条件</param>
             <param name="trans">事务对象</param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            同步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.Insert(System.Collections.Generic.List{`0})">
            <summary>
            同步批量新增实体。
            </summary>
            <param name="entities">实体集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.Update(`0,`2,System.Data.IDbTransaction)">
            <summary>
            同步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.UpdateAsync(`0,`2,System.Data.IDbTransaction)">
            <summary>
            异步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值数字类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值数字类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.SetEnabledMark(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.SetEnabledMarkAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl"></param>
            <param name="where"></param>
            <param name="paramparameters"></param>
            <param name="userId"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithAllPagerAsync(SunnyMES.Commons.Page.PageCustomInfo)">
            <summary>
            查询所有页
            </summary>
            <param name="pageCustomInfo"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPager(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            查询条件变换时请重写该方法。
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPagerAsync(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            查询条件变换时请重写该方法。
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.GetDataPrivilege(System.Boolean)">
            <summary>
            获取当前登录用户的数据访问权限
            </summary>
            <param name="blDeptCondition">是否开启，默认开启</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseCustomService`3.System#IDisposable#Dispose">
            <summary>
            添加此代码以正确实现可处置模式
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Services.BaseService`3">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TODto"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="F:SunnyMES.Commons.Services.BaseService`3.repository">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.#ctor(SunnyMES.Commons.IRepositories.IRepository{`0,`2})">
            <summary>
            
            </summary>
            <param name="iRepository"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.#ctor(SunnyMES.Commons.IRepositories.IRepository{`0,`2},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            
            </summary>
            <param name="iRepository"></param>
            <param name="accessor"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.Delete(`0,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.Delete(`2,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.DeleteAsync(`2,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.DeleteSoft(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.DeleteSoftAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.Get(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetOutDto(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetOutDtoWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetOutDtoWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAll(System.Data.IDbTransaction)">
            <summary>
            同步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            异步步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetOutDtoAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
             根据查询条件查询数据
             </summary>
             <param name="where">查询条件</param>
             <param name="trans">事务对象</param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
             异步根据查询条件查询数据
             </summary>
             <param name="where">查询条件</param>
             <param name="trans">事务对象</param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            同步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.Insert(System.Collections.Generic.List{`0})">
            <summary>
            同步批量新增实体。
            </summary>
            <param name="entities">实体集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.Update(`0,`2,System.Data.IDbTransaction)">
            <summary>
            同步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.UpdateAsync(`0,`2,System.Data.IDbTransaction)">
            <summary>
            异步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值数字类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值数字类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.SetEnabledMark(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.SetEnabledMarkAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl"></param>
            <param name="where"></param>
            <param name="paramparameters"></param>
            <param name="userId"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPager(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            查询条件变换时请重写该方法。
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPagerAsync(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            查询条件变换时请重写该方法。
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.ExecSQLite(System.String)">
            <summary>
            ExecSQLite
            </summary>
            <param name="S_SQLite"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.SQLite_Data_Table(System.String)">
            <summary>
            SQLite_Data_Table
            </summary>
            <param name="S_SQLite"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.Data_Table(System.String)">
            <summary>
            Data_Table
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.Data_Set(System.String)">
            <summary>
            Data_Set
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.ExecSql(System.String)">
            <summary>
            ExecSql
            </summary>
            <param name="S_Sql"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.GetDataPrivilege(System.Boolean)">
            <summary>
            获取当前登录用户的数据访问权限
            </summary>
            <param name="blDeptCondition">是否开启，默认开启</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseService`3.System#IDisposable#Dispose">
            <summary>
            添加此代码以正确实现可处置模式
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Services.BaseServiceGeneric`3">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TODto"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="F:SunnyMES.Commons.Services.BaseServiceGeneric`3.repository">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.#ctor(SunnyMES.Commons.IRepositories.IRepositoryGeneric{`0,`2})">
            <summary>
            
            </summary>
            <param name="iRepository"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.#ctor(SunnyMES.Commons.IRepositories.IRepositoryGeneric{`0,`2},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            
            </summary>
            <param name="iRepository"></param>
            <param name="accessor"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.Delete(`0,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.Delete(`2,System.Data.IDbTransaction)">
            <summary>
            同步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.DeleteAsync(`2,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="id">主键</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.DeleteAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步物理删除实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.DeleteBatch(System.Collections.Generic.IList{System.Object},System.Data.IDbTransaction)">
            <summary>
            按主键批量删除
            </summary>
            <param name="ids"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.DeleteBatchWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.DeleteBatchWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            按条件批量删除
            </summary>
            <param name="where">条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.DeleteSoft(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.DeleteSoftAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.DeleteSoftBatchAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步批量软删除信息，将DeleteMark设置为1-删除，0-恢复删除
            </summary>
            <param name="bl">true为不删除，false删除</param> c
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.Get(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetOutDto(`2)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetOutDtoWhere(System.String,System.Data.IDbTransaction)">
            <summary>
            同步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetOutDtoWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetListTopWhere(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetListTopWhereAsync(System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            根据查询条件查询前多少条数据
            </summary>
            <param name="top">多少条数据</param>
            <param name="where">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAll(System.Data.IDbTransaction)">
            <summary>
            同步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAllAsync(System.Data.IDbTransaction)">
            <summary>
            异步步查询所有实体。
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetOutDtoAsync(`2)">
            <summary>
            异步查询单个实体。
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetListWhere(System.String,System.Data.IDbTransaction)">
            <summary>
             根据查询条件查询数据
             </summary>
             <param name="where">查询条件</param>
             <param name="trans">事务对象</param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetListWhereAsync(System.String,System.Data.IDbTransaction)">
            <summary>
             异步根据查询条件查询数据
             </summary>
             <param name="where">查询条件</param>
             <param name="trans">事务对象</param>
             <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.Insert(`0,System.Data.IDbTransaction)">
            <summary>
            同步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.InsertAsync(`0,System.Data.IDbTransaction)">
            <summary>
            异步步新增实体。
            </summary>
            <param name="entity">实体</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.Insert(System.Collections.Generic.List{`0})">
            <summary>
            同步批量新增实体。
            </summary>
            <param name="entities">实体集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.Update(`0,`2,System.Data.IDbTransaction)">
            <summary>
            同步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.UpdateAsync(`0,`2,System.Data.IDbTransaction)">
            <summary>
            异步更新实体。
            </summary>
            <param name="entity">实体</param>
            <param name="id">主键ID</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.UpdateTableField(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.UpdateTableFieldAsync(System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值字符类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值字符类型</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.UpdateTableField(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值数字类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.UpdateTableFieldAsync(System.String,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            更新某一字段值,字段值数字类型
            </summary>
            <param name="strField">字段</param>
            <param name="fieldValue">字段值数字</param>
            <param name="where">条件,为空更新所有内容</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAllByIsDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAllByIsNotDeleteMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAllByIsEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAllByIsNotEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAllByIsNotDeleteAndEnabledMark(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAllByIsDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询软删除的数据，如果查询条件为空，即查询所有软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAllByIsNotDeleteMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除的数据，如果查询条件为空，即查询所有未软删除的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAllByIsEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询有效的数据，如果查询条件为空，即查询所有有效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAllByIsNotEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询无效的数据，如果查询条件为空，即查询所有无效的数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetAllByIsNotDeleteAndEnabledMarkAsync(System.String,System.Data.IDbTransaction)">
            <summary>
            查询未软删除且有效的数据，如果查询条件为空，即查询所有数据
            </summary>
            <param name="where">查询条件</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.SetEnabledMark(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.SetEnabledMarkAsync(System.Boolean,`2,System.String,System.Data.IDbTransaction)">
            <summary>
            异步设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="id">主键ID</param>
            <param name="userId">操作用户</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl">true为有效，false无效</param>
            <param name="where">条件</param>
            <param name="userId">操作用户</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.SetEnabledMarkByWhereAsync(System.Boolean,System.String,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
            异步按条件设置数据有效性，将EnabledMark设置为1:有效，0-为无效
            </summary>
            <param name="bl"></param>
            <param name="where"></param>
            <param name="paramparameters"></param>
            <param name="userId"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPager(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPagerSql(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPager(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            查询条件变换时请重写该方法。
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPagerAsync(SunnyMES.Commons.Dtos.SearchInputDto{`0})">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            查询条件变换时请重写该方法。
            </summary>
            <param name="search">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPagerAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.Data.IDbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPagerSqlAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询，自行封装sql语句(仅支持sql server)
            非常复杂的查询，可在具体业务模块重写该方法
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">排序方式 true为desc，false为asc</param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPagerRelationUserAsync(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.FindWithPagerRelationUser(System.String,SunnyMES.Commons.Pages.PagerInfo,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            分页查询包含用户信息(仅支持sql server)
            查询主表别名为t1,用户表别名为t2，在查询字段需要注意使用t1.xxx格式，xx表示主表字段
            用户信息主要有用户账号：Account、昵称：NickName、真实姓名：RealName、头像：HeadIcon、手机号：MobilePhone
            输出对象请在Dtos中进行自行封装，不能是使用实体Model类
            </summary>
            <param name="condition">查询条件字段需要加表别名</param>
            <param name="info">分页信息</param>
            <param name="fieldToSort">排序字段，也需要加表别名</param>
            <param name="desc">排序方式</param>
            <param name="trans">事务</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetCountByWhere(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetCountByWhereAsync(System.String,System.String)">
            <summary>
            根据条件统计数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="fieldName">统计字段名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetMaxValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件查询获取某个字段的最大值
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段的最大值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetSumValueByFieldAsync(System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            根据条件统计某个字段之和,sum(字段)
            </summary>
            <param name="strField">字段</param>
            <param name="where">条件</param>
            <param name="trans">事务</param>
            <returns>返回字段求和后的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.ExecuteTransactionAsync(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.ExecuteTransaction(System.Collections.Generic.List{System.Tuple{System.String,System.Object}},System.Nullable{System.Int32})">
            <summary>
            多表操作--事务
            </summary>
            <param name="trans">事务</param>
            <param name="commandTimeout">超时</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.GetDataPrivilege(System.Boolean)">
            <summary>
            获取当前登录用户的数据访问权限
            </summary>
            <param name="blDeptCondition">是否开启，默认开启</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceGeneric`3.System#IDisposable#Dispose">
            <summary>
            添加此代码以正确实现可处置模式
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Services.BaseServiceReport`1">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="F:SunnyMES.Commons.Services.BaseServiceReport`1.repository">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceReport`1.#ctor(SunnyMES.Commons.IRepositories.IRepositoryReport{`0})">
            <summary>
            
            </summary>
            <param name="iRepository"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceReport`1.#ctor(SunnyMES.Commons.IRepositories.IRepositoryReport{`0},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            
            </summary>
            <param name="iRepository"></param>
            <param name="accessor"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceReport`1.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SunnyMES.Commons.Services.BaseServiceReport`1.System#IDisposable#Dispose">
            <summary>
            添加此代码以正确实现可处置模式
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Data.Check">
            <summary>
            参数合法性检查类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.Require``1(System.Boolean,System.String)">
            <summary>
            验证指定值的断言<paramref name="assertion"/>是否为真，如果不为真，抛出指定消息<paramref name="message"/>的指定类型<typeparamref name="TException"/>异常
            </summary>
            <typeparam name="TException">异常类型</typeparam>
            <param name="assertion">要验证的断言。</param>
            <param name="message">异常消息。</param>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.Required``1(``0,System.Func{``0,System.Boolean},System.String)">
            <summary>
            验证指定值的断言表达式是否为真，不为值抛出<see cref="T:System.Exception"/>异常
            </summary>
            <param name="value"></param>
            <param name="assertionFunc">要验证的断言表达式</param>
            <param name="message">异常消息</param>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.Required``2(``0,System.Func{``0,System.Boolean},System.String)">
            <summary>
            验证指定值的断言表达式是否为真，不为真抛出<typeparamref name="TException"/>异常
            </summary>
            <typeparam name="T">要判断的值的类型</typeparam>
            <typeparam name="TException">抛出的异常类型</typeparam>
            <param name="value">要判断的值</param>
            <param name="assertionFunc">要验证的断言表达式</param>
            <param name="message">异常消息</param>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.NotNull``1(``0,System.String)">
            <summary>
            检查参数不能为空引用，否则抛出<see cref="T:System.ArgumentNullException"/>异常。
            </summary>
            <param name="value"></param>
            <param name="paramName">参数名称</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.NotNullOrEmpty(System.String,System.String)">
            <summary>
            检查字符串不能为空引用或空字符串，否则抛出<see cref="T:System.ArgumentNullException"/>异常或<see cref="T:System.ArgumentException"/>异常。
            </summary>
            <param name="value"></param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.NotEmpty(System.Guid,System.String)">
            <summary>
            检查Guid值不能为Guid.Empty，否则抛出<see cref="T:System.ArgumentException"/>异常。
            </summary>
            <param name="value"></param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.NotNullOrEmpty``1(System.Collections.Generic.IReadOnlyList{``0},System.String)">
            <summary>
            检查集合不能为空引用或空集合，否则抛出<see cref="T:System.ArgumentNullException"/>异常或<see cref="T:System.ArgumentException"/>异常。
            </summary>
            <typeparam name="T">集合项的类型。</typeparam>
            <param name="list"></param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.HasNoNulls``1(System.Collections.Generic.IReadOnlyList{``0},System.String)">
            <summary>
            检查集合中没有包含值为null的项
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.LessThan``1(``0,System.String,``0,System.Boolean)">
            <summary>
            检查参数必须小于[或可等于，参数<paramref name="canEqual"/>]指定值，否则抛出<see cref="T:System.ArgumentOutOfRangeException"/>异常。
            </summary>
            <typeparam name="T">参数类型。</typeparam>
            <param name="value"></param>
            <param name="paramName">参数名称。</param>
            <param name="target">要比较的值。</param>
            <param name="canEqual">是否可等于。</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.GreaterThan``1(``0,System.String,``0,System.Boolean)">
            <summary>
            检查参数必须大于[或可等于，参数<paramref name="canEqual"/>]指定值，否则抛出<see cref="T:System.ArgumentOutOfRangeException"/>异常。
            </summary>
            <typeparam name="T">参数类型。</typeparam>
            <param name="value"></param>
            <param name="paramName">参数名称。</param>
            <param name="target">要比较的值。</param>
            <param name="canEqual">是否可等于。</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.Between``1(``0,System.String,``0,``0,System.Boolean,System.Boolean)">
            <summary>
            检查参数必须在指定范围之间，否则抛出<see cref="T:System.ArgumentOutOfRangeException"/>异常。
            </summary>
            <typeparam name="T">参数类型。</typeparam>
            <param name="value"></param>
            <param name="paramName">参数名称。</param>
            <param name="start">比较范围的起始值。</param>
            <param name="end">比较范围的结束值。</param>
            <param name="startEqual">是否可等于起始值</param>
            <param name="endEqual">是否可等于结束值</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.DirectoryExists(System.String,System.String)">
            <summary>
            检查指定路径的文件夹必须存在，否则抛出<see cref="T:System.IO.DirectoryNotFoundException"/>异常。
            </summary>
            <param name="directory"></param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.IO.DirectoryNotFoundException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.FileExists(System.String,System.String)">
            <summary>
            检查指定路径的文件必须存在，否则抛出<see cref="T:System.IO.FileNotFoundException"/>异常。
            </summary>
            <param name="filename"></param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentNullException">当文件路径为null时</exception>
            <exception cref="T:System.IO.FileNotFoundException">当文件路径不存在时</exception>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.Validate``1(SunnyMES.Commons.Dtos.IInputDto{``0},System.String)">
            <summary>
            检查<see cref="T:SunnyMES.Commons.Dtos.IInputDto`1"/>各属性的合法性，否则抛出<see cref="!:ValidationException"/>异常
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="dto"></param>
            <param name="paramName"></param>
        </member>
        <member name="M:SunnyMES.Commons.Data.Check.Validate``2(``0[],System.String)">
            <summary>
            检查<see cref="T:SunnyMES.Commons.Dtos.IInputDto`1"/>各属性的合法性，否则抛出<see cref="!:ValidationException"/>异常
            </summary>
            <typeparam name="TInputDto"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="dtos"></param>
            <param name="paramName"></param>
        </member>
        <member name="T:SunnyMES.Commons.Data.MicroDataTable">
            <summary>
            查询结果数据表样式
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Data.MicroDataTable.TotalCount">
            <summary>
            整个查询语句结果的总条数，而非本DataTable的条数
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Data.MicroDataTable.Columns">
            <summary>
            数据列名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Data.MicroDataTable.Rows">
            <summary>
            数据记录
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Data.MicroDataTable.PrimaryKey">
            <summary>
            主键
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Data.MicroDataTableHelper.FillDataTable(System.Data.Common.DbDataReader,System.Int32,System.Int32)">
            <summary>
            DbDataReaders 数据转化Datatable
            </summary>
            <param name="reader"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.DependencyInjection.IPrivateDependency">
            <summary>
            依赖空接口（禁止外部继承）
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.DependencyInjection.IScopedDependency">
            <summary>
            作用域服务注册依赖
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.DependencyInjection.ISingletonDependency">
            <summary>
            单例服务注册依赖
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.DependencyInjection.ITransientDependency">
            <summary>
            暂时服务注册依赖
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Device.AudioHelper">
            <summary>
            WAV声音格式文件播放辅助类
            仅支持windows平台
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.AudioHelper.Play(System.String)">
            <summary>
            播放 .wav 格式的声音文件
            </summary>
            <param name="location">声音文件路径 </param>
        </member>
        <member name="M:SunnyMES.Commons.Device.AudioHelper.Play(System.String,SunnyMES.Commons.Device.AudioPlayMode)">
            <summary>
            播放 .wav 格式的声音文件
            </summary>
            <param name="playMode">播放声音的枚举模式。默认为AudioPlayMode.Background。</param>
            <param name="location">声音文件路径</param>
        </member>
        <member name="M:SunnyMES.Commons.Device.AudioHelper.Play(System.IO.Stream,SunnyMES.Commons.Device.AudioPlayMode)">
            <summary>
            播放 .wav 格式的声音文件
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"></see>声音文件的流对象</param>
            <param name="playMode">播放声音的枚举模式。默认为AudioPlayMode.Background。</param>
        </member>
        <member name="M:SunnyMES.Commons.Device.AudioHelper.Play(System.Byte[],SunnyMES.Commons.Device.AudioPlayMode)">
            <summary>
            播放 .wav 格式的声音文件
            </summary>
            <param name="data">声音文件的字节数组</param>
            <param name="playMode">播放声音的枚举模式。默认为AudioPlayMode.Background。</param>
        </member>
        <member name="M:SunnyMES.Commons.Device.AudioHelper.PlaySystemSound(System.Media.SystemSound)">
            <summary>
            播放系统声音
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.AudioHelper.Stop">
            <summary>
            停止正在后台播放的声音
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.AudioHelper.Play(System.Media.SoundPlayer,SunnyMES.Commons.Device.AudioPlayMode)">
            <summary>
            播放声音函数
            </summary>
            <param name="sound">声音文件</param>
            <param name="mode">播放模式</param>
        </member>
        <member name="T:SunnyMES.Commons.Device.AudioPlayMode">
            <summary>
            声音播放的方式
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.AudioPlayMode.WaitToComplete">
            <summary>
            播放声音，并等待，直到它完成
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.AudioPlayMode.Background">
            <summary>
            在后台播放声音。调用代码继续执行。
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.AudioPlayMode.BackgroundLoop">
            <summary>
            在后台播放声音，直到调用stop方法。调用代码继续执行。
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Device.Camera">
            <summary>
            摄像头操作辅助类，包括开启、关闭、抓图、设置等功能
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.Camera.#ctor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="handle"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="T:SunnyMES.Commons.Device.Camera.RecievedFrameEventHandler">
            <summary>
            帧回调的委托
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="E:SunnyMES.Commons.Device.Camera.RecievedFrame">
            <summary>
            帧回调事件处理
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.Camera.CloseWebcam">
            <summary>
            关闭摄像头
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.Camera.StartWebCam">
            <summary>
            开启摄像头
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.Camera.GrabImage(System.String)">
            <summary>
            抓图到文件
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:SunnyMES.Commons.Device.Camera.GrabImageToClipBoard">
            <summary>
            抓图到剪切板
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Device.Camera.SetCaptureSource">
            <summary>
            弹出色彩设置对话框
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.Camera.SetCaptureFormat">
            <summary>
            弹出视频格式设置对话框
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Device.AviCapture">
            <summary>
            视频辅助类
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Device.HardwareInfoHelper">
            <summary>
            获取系统信息、电脑CPU、磁盘、网卡、内存等相关信息辅助类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.HDVal(System.String)">
            <summary>
            获得盘符为drvID的硬盘序列号，缺省为C
            </summary>
            <param name="drvID">盘符，如"C"</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.HDVal">
            <summary>
            获取默认C盘的磁盘序列号
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetDiskID">
            <summary>
            获取硬盘ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetDiskModel">
            <summary>
            获取硬盘Model的信息
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsage">
            <summary>
            定义一个抽象基类实现CPU使用率计数器
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsage.Create">
            <summary>
            Creates and returns a CpuUsage instance that can be used to query the CPU time on this operating system.
            </summary>
            <returns>An instance of the CpuUsage class.</returns>
            <exception cref="T:System.NotSupportedException">This platform is not supported -or- initialization of the CPUUsage object failed.</exception>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsage.Query">
            <summary>
            Determines the current average CPU load.
            </summary>
            <returns>An integer that holds the CPU load percentage.</returns>
            <exception cref="T:System.NotSupportedException">One of the system calls fails. The CPU time can not be obtained.</exception>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsage.m_CpuUsage">
            <summary>
            Holds an instance of the CPUUsage class.
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsage9x">
            <summary>
            Inherits the CPUUsage class and implements the Query method for Windows 9x systems.
            </summary>
            <remarks>
            <p>This class works on Windows 98 and Windows Millenium Edition.</p>
            <p>You should not use this class directly in your code. Use the CPUUsage.Create() method to instantiate a CPUUsage object.</p>
            </remarks>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsage9x.#ctor">
            <summary>
            Initializes a new CPUUsage9x instance.
            </summary>
            <exception cref="T:System.NotSupportedException">One of the system calls fails.</exception>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsage9x.Query">
            <summary>
            Determines the current average CPU load.
            </summary>
            <returns>An integer that holds the CPU load percentage.</returns>
            <exception cref="T:System.NotSupportedException">One of the system calls fails. The CPU time can not be obtained.</exception>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsage9x.Finalize">
            <summary>
            Closes the allocated resources.
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsage9x.m_StatData">
            <summary>Holds the registry key that's used to read the CPU load.</summary>
        </member>
        <member name="T:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsageNt">
            <summary>
            Inherits the CPUUsage class and implements the Query method for Windows NT systems.
            </summary>
            <remarks>
            <p>This class works on Windows NT4, Windows 2000, Windows XP, Windows .NET Server and higher.</p>
            <p>You should not use this class directly in your code. Use the CPUUsage.Create() method to instantiate a CPUUsage object.</p>
            </remarks>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsageNt.#ctor">
            <summary>
            Initializes a new CpuUsageNt instance.
            </summary>
            <exception cref="T:System.NotSupportedException">One of the system calls fails.</exception>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsageNt.Query">
            <summary>
            Determines the current average CPU load.
            </summary>
            <returns>An integer that holds the CPU load percentage.</returns>
            <exception cref="T:System.NotSupportedException">One of the system calls fails. The CPU time can not be obtained.</exception>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsageNt.NtQuerySystemInformation(System.Int32,System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            NtQuerySystemInformation is an internal Windows function that retrieves various kinds of system information.
            </summary>
            <param name="dwInfoType">One of the values enumerated in SYSTEM_INFORMATION_CLASS, indicating the kind of system information to be retrieved.</param>
            <param name="lpStructure">Points to a buffer where the requested information is to be returned. The size and structure of this information varies depending on the value of the SystemInformationClass parameter.</param>
            <param name="dwSize">Length of the buffer pointed to by the SystemInformation parameter.</param>
            <param name="returnLength">Optional pointer to a location where the function writes the actual size of the information requested.</param>
            <returns>Returns a success NTSTATUS if successful, and an NTSTATUS error code otherwise.</returns>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsageNt.SYSTEM_BASICINFORMATION">
            <summary>Returns the number of processors in the system in a SYSTEM_BASIC_INFORMATION structure.</summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsageNt.SYSTEM_PERFORMANCEINFORMATION">
            <summary>Returns an opaque SYSTEM_PERFORMANCE_INFORMATION structure.</summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsageNt.SYSTEM_TIMEINFORMATION">
            <summary>Returns an opaque SYSTEM_TIMEOFDAY_INFORMATION structure.</summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsageNt.NO_ERROR">
            <summary>The value returned by NtQuerySystemInformation is no error occurred.</summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsageNt.oldIdleTime">
            <summary>Holds the old idle time.</summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsageNt.oldSystemTime">
            <summary>Holds the old system time.</summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.CpuUsageNt.processorCount">
            <summary>Holds the number of processors in the system.</summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetCpuUsage">
            <summary>
            获得Cpu使用率
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetCPUId">
            <summary>
            获取CPU的ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetCPUName">
            <summary>
            获取CPU的名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetUSBDriveLetters">
            <summary>
            返回USB盘符列表
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Device.HardwareInfoHelper.HardDiskInfo">
            <summary>
            硬盘信息
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.HardDiskInfo.ModuleNumber">
            <summary>
            型号
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.HardDiskInfo.Firmware">
            <summary>
            固件版本
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.HardDiskInfo.SerialNumber">
            <summary>
            序列号
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Device.HardwareInfoHelper.HardDiskInfo.Capacity">
            <summary>
            容量，以M为单位
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetHddInfo9x(System.Byte)">
            <summary>
            获取9X架构的硬盘信息
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetHddInfoNT(System.Byte)">
            <summary>
            获取NT架构的硬盘信息
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetHardDiskInfo(SunnyMES.Commons.Device.HardwareInfoHelper.IdSector)">
            <summary>
            获取硬盘信息的细节
            </summary>
            <param name="phdinfo"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.ChangeByteOrder(System.Byte[])">
            <summary>
            将byte数组中保存的信息转换成字符串
            </summary>
            <param name="charArray"></param>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetHDInfo(System.Byte)">
            <summary>
            获得硬盘信息
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetMacAddress">
            <summary>
            获取MAC地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetIPAddress">
            <summary>
            获取IP地址
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetUserName">
            <summary>
            获取操作系统的登录用户名
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetComputerName">
            <summary>
            获取计算机名
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetSystemType">
            <summary>
            获取PC类型
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.HardwareInfoHelper.GetTotalPhysicalMemory">
            <summary>
            获取物理内存
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Device.SoundPlayerHelper">
             <summary>
            声音文件播放操作辅助类。除了MP3声音文件外，还可以播放WAV格式、midi格式声音文件。
             </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.SoundPlayerHelper.Play(System.String,System.Boolean)">
            <summary>
            播放声音文件
            </summary>
            <param name="soundFileName">声音文件路径（可以是MP3、WAV、Midi等声音文件）</param>
            <param name="Repeat">是否重复播放</param>
        </member>
        <member name="M:SunnyMES.Commons.Device.SoundPlayerHelper.Play(System.Byte[],System.Boolean)">
            <summary>
            播放声音嵌入资源字节数组
            </summary>
            <param name="soundEmbeddedResource">声音文件嵌入资源字节数组（可以是MP3、WAV、Midi等声音格式）</param>
            <param name="Repeat">是否重复播放</param>
        </member>
        <member name="M:SunnyMES.Commons.Device.SoundPlayerHelper.Pause">
            <summary>
            暂停播放
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.SoundPlayerHelper.Stop">
            <summary>
            停止播放
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Device.SoundPlayerHelper.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Device.SoundPlayerHelper.VolumePercent">
            <summary>
            获取或设置音量的百分比
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Device.SoundPlayerHelper.GetVolume">
            <summary>
            获取音量
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Device.SoundPlayerHelper.SetVolume(System.Single)">
            <summary>
            设置音量
            </summary>
            <param name="volume"></param>
        </member>
        <member name="P:SunnyMES.Commons.Device.SoundPlayerHelper.Status">
            <SUMMARY>
            返回当前状态播放：播放，暂停，停止等
            </SUMMARY>
        </member>
        <member name="T:SunnyMES.Commons.Base64Util">
            <summary>
            基于Base64的加密编码辅助类，
            可以设置不同的密码表来获取不同的编码与解码
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.#ctor">
            <summary>
            构造函数，初始化编码表
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Base64Util.s_b64">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.Encrypt(System.String)">
            <summary>
            使用默认的密码表加密字符串
            </summary>
            <param name="input">待加密字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.Decrypt(System.String)">
            <summary>
            使用默认的密码表解密字符串
            </summary>
            <param name="input">待解密字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.GetStandardBase64">
            <summary>
            获取具有标准的Base64密码表的加密类
            </summary>
            <returns></returns>
        </member>
        <member name="F:SunnyMES.Commons.Base64Util.m_codeTable">
            <summary>
            密码表
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Base64Util.m_pad">
            <summary>
            补码
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Base64Util.m_t1">
            <summary>
            
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Base64Util.m_t2">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Base64Util.CodeTable">
            <summary>
            密码表
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Base64Util.Pad">
            <summary>
            补码
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.Encode(System.String)">
            <summary>
            返回编码后的字符串
            </summary>
            <param name="source">原字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.EncodeUnit(System.Byte[])">
            <summary>
            
            </summary>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.GetEC(System.Int32)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.Decode(System.String)">
            <summary>
            获得解码字符串
            </summary>
            <param name="source">原字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.DecodeUnit(System.Collections.Generic.List{System.Byte},System.Char[])">
            <summary>
            获得解码字符串
            </summary>
            <param name="byteArr"></param>
            <param name="chArray"></param>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.FindChar(System.Char)">
            <summary>
            
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.InitDict">
            <summary>
            初始化双向哈希字典
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.ValidateRepeat(System.String)">
            <summary>
            检查字符串中的字符是否有重复
            </summary>
            <param name="input">待检查字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Base64Util.ValidateEqualPad(System.String,System.String)">
            <summary>
            检查字符串是否包含补码字符
            </summary>
            <param name="input">待检查字符串</param>
            <param name="pad"></param>
        </member>
        <member name="T:SunnyMES.Commons.Cryptography">
            <summary>
            用于webapi 生成票据使用，公开
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Cryptography.AES_encrypt(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="tmpStr"></param>
            <param name="encodingAESKey"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Cryptography.SHA256(System.String)">
            <summary>
            SHA256函数
            </summary>
            <param name="str">原始字符串</param>
            <returns>SHA256结果(返回长度为44字节的字符串)</returns>
        </member>
        <member name="M:SunnyMES.Commons.Cryptography.GetMD5_32(System.String)">
            <summary>
            获得32位的MD5加密
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Encrypt.DEncrypt">
            <summary>
            Encrypt 的加密/解密。
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.DEncrypt.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.DEncrypt.Encrypt(System.String)">
            <summary>
            使用缺省密钥字符串加密string
            </summary>
            <param name="original">明文</param>
            <returns>密文</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.DEncrypt.Decrypt(System.String)">
            <summary>
            使用缺省密钥字符串解密string
            </summary>
            <param name="original">密文</param>
            <returns>明文</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.DEncrypt.Encrypt(System.String,System.String)">
            <summary>
            使用给定密钥字符串加密string
            </summary>
            <param name="original">原始文字</param>
            <param name="key">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.DEncrypt.Decrypt(System.String,System.String)">
            <summary>
            使用给定密钥字符串解密string
            </summary>
            <param name="original">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.DEncrypt.Decrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            使用给定密钥字符串解密string,返回指定编码方式明文
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <param name="encoding">字符编码方案</param>
            <returns>明文</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.DEncrypt.Decrypt(System.Byte[])">
            <summary>
            使用缺省密钥字符串解密byte[]
            </summary>
            <param name="encrypted">密文</param>
            <returns>明文</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.DEncrypt.Encrypt(System.Byte[])">
            <summary>
            使用缺省密钥字符串加密
            </summary>
            <param name="original">原始数据</param>
            <returns>密文</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.DEncrypt.MakeMD5(System.Byte[])">
            <summary>
            生成MD5摘要
            </summary>
            <param name="original">数据源</param>
            <returns>摘要</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.DEncrypt.Encrypt(System.Byte[],System.Byte[])">
            <summary>
            使用给定密钥加密
            </summary>
            <param name="original">明文</param>
            <param name="key">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.DEncrypt.Decrypt(System.Byte[],System.Byte[])">
            <summary>
            使用给定密钥解密数据
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="T:SunnyMES.Commons.Encrypt.EncodeHelper">
            <summary>
            DES对称加解密、AES RijndaelManaged加解密、Base64加密解密、MD5加密等操作辅助类
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Encrypt.EncodeHelper.DEFAULT_ENCRYPT_KEY">
            <summary>
            注意DEFAULT_ENCRYPT_KEY的长度为8位(如果要增加或者减少key长度,调整IV的长度就是了) 
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.DesEncrypt(System.String)">
            <summary>
            使用默认加密
            </summary>
            <param name="strText"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.DesDecrypt(System.String)">
            <summary>
            使用默认解密
            </summary>
            <param name="strText">解密字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.DesEncrypt(System.String,System.String)">
            <summary> 
            加密字符串,注意strEncrKey的长度为8位
            </summary> 
            <param name="strText">待加密字符串</param> 
            <param name="strEncrKey">加密键</param> 
            <returns></returns> 
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.DesDecrypt(System.String,System.String)">
            <summary> 
            解密字符串,注意strEncrKey的长度为8位
            </summary> 
            <param name="strText">待解密的字符串</param> 
            <param name="sDecrKey">解密键</param> 
            <returns>解密后的字符串</returns> 
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.DesEncrypt(System.String,System.String,System.String)">
            <summary> 
            加密数据文件,注意strEncrKey的长度为8位
            </summary> 
            <param name="m_InFilePath">待加密的文件路径</param> 
            <param name="m_OutFilePath">输出文件路径</param> 
            <param name="strEncrKey">加密键</param> 
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.DesDecrypt(System.String,System.String,System.String)">
            <summary> 
            解密数据文件,注意strEncrKey的长度为8位
            </summary> 
            <param name="m_InFilePath">待解密的文件路径</param> 
            <param name="m_OutFilePath">输出路径</param> 
            <param name="sDecrKey">解密键</param> 
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.AES_Encrypt(System.String)">
            <summary>
            对称加密算法AES RijndaelManaged加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.AES_Encrypt(System.String,System.String)">
            <summary>
            对称加密算法AES 加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <param name="encryptKey">加密密钥，须半角字符</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.AES_Decrypt(System.String)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <returns>解密成功返回解密后的字符串,失败返源串</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.AES_Decrypt(System.String,System.String)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串,失败返回空</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            按字节长度(按字节,一个汉字为2个字节)取得某字符串的一部分
            </summary>
            <param name="sourceString">源字符串</param>
            <param name="length">所取字符串字节长度</param>
            <param name="tailString">附加字符串(当字符串不够长时，尾部所添加的字符串，一般为"...")</param>
            <returns>某字符串的一部分</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            按字节长度(按字节,一个汉字为2个字节)取得某字符串的一部分
            </summary>
            <param name="sourceString">源字符串</param>
            <param name="startIndex">索引位置，以0开始</param>
            <param name="length">所取字符串字节长度</param>
            <param name="tailString">附加字符串(当字符串不够长时，尾部所添加的字符串，一般为"...")</param>
            <returns>某字符串的一部分</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.AES_EncryptStrream(System.IO.FileStream,System.String)">
            <summary>
            加密文件流
            </summary>
            <param name="fs">文件流对象</param>
            <param name="encryptKey">加密键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.AES_DecryptStream(System.IO.FileStream,System.String)">
            <summary>
            解密文件流
            </summary>
            <param name="fs">文件流对象</param>
            <param name="decryptKey">解密键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.AES_EncryptFile(System.String,System.String)">
            <summary>
            对指定文件加密
            </summary>
            <param name="InputFile">输入文件</param>
            <param name="OutputFile">输出文件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.AES_DecryptFile(System.String,System.String)">
            <summary>
            对指定的文件解压缩
            </summary>
            <param name="InputFile">输入文件</param>
            <param name="OutputFile">输出文件</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.Base64Encrypt(System.String)">
            <summary>
            Base64是一種使用64基的位置計數法。它使用2的最大次方來代表僅可列印的ASCII 字元。
            這使它可用來作為電子郵件的傳輸編碼。在Base64中的變數使用字元A-Z、a-z和0-9 ，
            這樣共有62個字元，用來作為開始的64個數字，最後兩個用來作為數字的符號在不同的
            系統中而不同。
            Base64加密
            </summary>
            <param name="str">Base64方式加密字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.Base64Decrypt(System.String)">
            <summary>
            Base64解密字符串
            </summary>
            <param name="str">待解密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.MD5Encrypt(System.String)">
            <summary> 
            使用MD5加密字符串
            </summary> 
            <param name="strText">待加密的字符串</param> 
            <returns>MD5加密后的字符串</returns> 
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.MD5EncryptHash(System.String)">
            <summary>
            使用MD5加密的Hash表
            </summary>
            <param name="input">待加密字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.MD5EncryptHashHex(System.String)">
            <summary>
            使用Md5加密为16进制字符串
            </summary>
            <param name="input">待加密字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.EncyptMD5_3_16(System.String)">
            <summary>
            MD5 三次加密算法.计算过程: (QQ使用)
            1. 验证码转为大写
            2. 将密码使用这个方法进行三次加密后,与验证码进行叠加
            3. 然后将叠加后的内容再次MD5一下,得到最终验证码的值
            </summary>
            <param name="s">待加密字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.SHA256(System.String)">
            <summary>
            SHA256函数
            </summary>
            <param name="str">原始字符串</param>
            <returns>SHA256结果(返回长度为44字节的字符串)</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.EncryptString(System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="input">待加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncodeHelper.DecryptString(System.String,System.Boolean)">
            <summary>
            解密加过密的字符串
            </summary>
            <param name="input">待解密的字符串</param>
            <param name="throwException">解密失败是否抛异常</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Encrypt.EncryptHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncryptHelper.ComputeHash(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncryptHelper.EncryptStr(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.EncryptHelper.UnEncryptStr(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Encrypt.MD5Util">
            <summary>
            MD5各种长度加密字符、验证MD5等操作辅助类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.MD5Util.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.MD5Util.GetMD5_32(System.String)">
            <summary>
            获得32位的MD5加密
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.MD5Util.GetMD5_16(System.String)">
            <summary>
            获得16位的MD5加密
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.MD5Util.GetMD5_8(System.String)">
            <summary>
            获得8位的MD5加密
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.MD5Util.GetMD5_4(System.String)">
            <summary>
            获得4位的MD5加密
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.MD5Util.AddMD5Profix(System.String)">
            <summary>
            添加MD5的前缀，便于检查有无篡改
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.MD5Util.RemoveMD5Profix(System.String)">
            <summary>
            移除MD5的前缀
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.MD5Util.ValidateValue(System.String)">
            <summary>
            验证MD5前缀处理的字符串有无被篡改
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.MD5Util.AddMD5(System.String)">
            <summary>
            对给定文件路径的文件加上标签
            </summary>
            <param name="path">要加密的文件的路径</param>
            <returns>标签的值</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.MD5Util.CheckMD5(System.String)">
            <summary>
            对给定路径的文件进行验证，如果一致返回True，否则返回False
            </summary>
            <param name="path"></param>
            <returns>是否加了标签或是否标签值与内容值一致</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.MD5Util.MD5Buffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            计算文件的MD5值
            </summary>
            <param name="MD5File">MD5签名文件字符数组</param>
            <param name="index">计算起始位置</param>
            <param name="count">计算终止位置</param>
            <returns>计算结果</returns>
        </member>
        <member name="T:SunnyMES.Commons.Encrypt.QQEncryptUtil">
            <summary>
            QQ密码加密操作辅助类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.QQEncryptUtil.EncodePasswordWithVerifyCode(System.String,System.String)">
            <summary>
            QQ根据密码及验证码对数据进行加密
            </summary>
            <param name="password">原始密码</param>
            <param name="verifyCode">验证码</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Encrypt.RSASecurityHelper">
            <summary>
            非对称加密、解密、验证辅助类
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Encrypt.RSASecurityHelper.DESENCRYPT_KEY">
            <summary>
            默认公钥。必须是8位字符的密钥字符串(不能有特殊字符)
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.GenerateRSAKey(System.String@,System.String@)">
            <summary>
            非对称加密生成的私钥和公钥 
            </summary>
            <param name="publicKey">公钥,必须是8位字符的密钥字符串(不能有特殊字符)</param>
            <param name="privateKey">私钥</param>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.RSAEncrypt(System.String)">
            <summary>
             非对称加密字符串数据，返回加密后的数据
            </summary>
            <param name="originalString">待加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.RSAEncrypt(System.Byte[])">
            <summary>
            非对称加密字节数组，返回加密后的数据
            </summary>
            <param name="originalBytes">待加密的字节数组</param>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.RSAEncrypt(System.String,System.String)">
            <summary>
            非对称加密字符串数据，返回加密后的数据
            </summary>
            <param name="originalString">待加密的字符串</param>
            <param name="publicKey">公钥,必须是8位字符的密钥字符串(不能有特殊字符)</param>
            <returns>加密后的数据</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.RSAEncrypt(System.Byte[],System.String)">
            <summary>
            非对称加密字节数组，返回加密后的数据
            </summary>
            <param name="originalBytes">待加密的字节数组</param>
            <param name="publicKey">公钥,必须是8位字符的密钥字符串(不能有特殊字符)</param>
            <returns>返回加密后的数据</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.RSADecrypt(System.String,System.String)">
            <summary>
            非对称解密字符串，返回解密后的数据
            </summary>
            <param name="privateKey">私钥</param>
            <param name="encryptedString">待解密数据</param>
            <returns>返回解密后的数据</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.RSADecrypt(System.String,System.Byte[])">
            <summary>
            非对称解密字节数组，返回解密后的数据
            </summary>
            <param name="privateKey">私钥</param>
            <param name="encryptedBytes">待解密数据</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.RSAEncrypSignature(System.String,System.String)">
            <summary>
            使用非对称加密签名数据
            </summary>
            <param name="privateKey">私钥</param>
            <param name="originalString">待加密的字符串</param>
            <returns>加密后的数据</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.Validate(System.String,System.String,System.String)">
            <summary>
            对私钥加密的字符串，使用公钥对其进行验证
            </summary>
            <param name="originalString">未加密的文本，如机器码</param>
            <param name="encrytedString">加密后的文本，如注册序列号</param>
            <param name="publicKey">非对称加密的公钥</param>
            <returns>如果验证成功返回True，否则为False</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.HashEncrypt(System.String)">
            <summary> Hash 加密 </summary>
            <param name="str2Hash"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.ComputeMD5(System.String)">
            <summary>
            MD5加密
            </summary>
            <param name="str">待加密字串</param>
            <returns>加密后的字串</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.ComputeMD5Data(System.String)">
            <summary>
            MD5加密
            </summary>
            <param name="input">待加密字串</param>
            <returns>加密后的字串</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.ComputeMD5Data(System.Byte[])">
            <summary>
            MD5加密
            </summary>
            <param name="data">待加密数据</param>
            <returns>加密后的字串</returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSASecurityHelper.ComputeMD5Data(System.IO.Stream)">
            <summary>
            MD5加密
            </summary>
            <param name="stream">待加密流</param>
            <returns>加密后的字串</returns>
        </member>
        <member name="T:SunnyMES.Commons.Encrypt.RSAUtils">
            <summary>
            RSA加解密工具
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSAUtils.TryGetKeyParameters(System.String,System.Boolean,System.Security.Cryptography.RSAParameters@)">
            <summary>
            从本地文件中读取用来签发Token的 RSA Key。
            </summary>
            <param name="filePath">存放密钥的文件夹路径</param>
            <param name="withPrivate"></param>
            <param name="keyParameters"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Encrypt.RSAUtils.GenerateAndSaveKey(System.String)">
            <summary>
            生成并保存 RSA 公钥与私钥。
            </summary>
            <param name="filePath">存放密钥的文件夹路径</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Enums.DatabaseType">
            <summary>
            数据库类型枚举
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.DatabaseType.SqlServer">
            <summary>
            SqlServer数据库
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.DatabaseType.Oracle">
            <summary>
            Oracle数据库
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.DatabaseType.Access">
            <summary>
            Access数据库
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.DatabaseType.MySql">
            <summary>
            MySql数据库
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.DatabaseType.SQLite">
            <summary>
            SQLite数据库
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.DatabaseType.PostgreSQL">
            <summary>
            PostgreSQL数据库
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.DatabaseType.Npgsql">
            <summary>
            Npgsql数据库
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Enums.JobAction">
            <summary>
            任务操作
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Enums.JobRunResult">
            <summary>
            
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Enums.MsgType">
            <summary>
            通知操作类型
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.MsgType.No">
            <summary>
            不通知
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.MsgType.Error">
            <summary>
            异常通知
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.MsgType.All">
            <summary>
            通知所有
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.PoDefCheckType.NoSet">
            <summary>
            未配置
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.PoDefCheckType.ValueCompare">
            <summary>
            值对比类型
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.PoDefCheckType.Procedures">
            <summary>
            存储过程检查
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.PoDefCheckType.Interfaces">
            <summary>
            动态接口型
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.PoDefCheckType.UPCSNCheck">
            <summary>
            UPC SN Check
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Enums.QueryOrderBy">
            <summary>
            查询排序方式
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.QueryOrderBy.Desc">
            <summary>
            降序
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.QueryOrderBy.Asc">
            <summary>
            升序
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Enums.SAPDataState">
            <summary>
            SAP 数据状态
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Enums.ScanType">
            <summary>
                系统存在数据_SN1 = 1 
                非系统注册批次_Batch校验数量_不校验唯一性2 = 2,
                设备数据_绑定过批次_类似托盘3 = 3,
                设备数据_无批次_类似夹具4 = 4,
                非系统注册SN_校验唯一性5 = 5,
                设备数据_包含3_4类型_ValidFrom工位可以重复绑定6 = 6,
                系统注册批次_Batch校验数量7 = 7
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.ScanType.系统存在数据_SN1">
            <summary>
            系统存储数据
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.ScanType.非系统注册批次_Batch校验数量_不校验唯一性2">
            <summary>
            非系统注册批次_Batch校验数量_不校验唯一性2
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.ScanType.设备数据_绑定过批次_类似托盘3">
            <summary>
            设备数据_绑定过批次_类似托盘3
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.ScanType.设备数据_无批次_类似夹具4">
            <summary>
            设备数据_无批次_类似夹具4
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.ScanType.非系统注册SN_校验唯一性5">
            <summary>
            非系统注册SN_校验唯一性5
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.ScanType.设备数据_包含3_4类型_ValidFrom工位可以重复绑定6">
            <summary>
            设备数据_包含3_4类型_ValidFrom工位可以重复绑定6
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.ScanType.系统注册批次_Batch校验数量7">
            <summary>
            系统注册批次_Batch校验数量7
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Enums.SoundType">
            <summary>
            声音类型
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.SoundType.NG">
            <summary>
            NG声音
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.SoundType.OK">
            <summary>
            OK声音
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.SoundType.RE">
            <summary>
            警告声音
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Enums.UserType">
            <summary>
            用户类型
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.UserType.Member">
            <summary>
            会员
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.UserType.Tenant">
            <summary>
            租户
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Enums.UserType.Manager">
            <summary>
            管理员
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Extend.ExtDate">
            <summary>
            日期扩展方法
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtDate.ToEasyString(System.DateTime)">
            <summary>
            格式：刚刚、几分钟前、几小时前、几天前、yyyy/MM/dd
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtDate.ToEasyStringDQ(System.DateTime)">
            <summary>
            格式：即将、几分钟后、几小时后、几天后、yyyy/MM/dd
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtDate.ToBrowseTime(System.Int32)">
            <summary>
            格式：几秒、几分钟几秒、几小时几分钟几秒
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtDate.ToEasyString(System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtDate.ToEasyStringDQ(System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtDate.ToDiffResult(System.DateTime,System.DateTime,SunnyMES.Commons.Extend.DiffResultFormat)">
            <summary>
            计算日期间隔
            </summary>
            <param name="d1">要参与计算的其中一个日期</param>
            <param name="d2">要参与计算的另一个日期</param>
            <param name="drf">决定返回值形式的枚举</param>
            <returns>一个代表年月日的int数组，具体数组长度与枚举参数drf有关</returns>
        </member>
        <member name="T:SunnyMES.Commons.Extend.DiffResultFormat">
            <summary>
            关于返回值形式的枚举
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Extend.DiffResultFormat.yymm">
            <summary>
            年数和月数
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Extend.DiffResultFormat.yy">
            <summary>
            年数
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Extend.DiffResultFormat.mm">
            <summary>
            月数
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Extend.DiffResultFormat.dd">
            <summary>
            天数
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtEnum.ToEnum``1(System.String)">
            <summary>
            字符串转枚举
            </summary>
            <typeparam name="T"></typeparam>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtEnum.GetFuncDescription(System.Enum,System.Boolean)">
            <summary>
            扩展方法，获得枚举的Description
            </summary>
            <param name="value">枚举值</param>
            <param name="nameInstead">当枚举值没有定义DescriptionAttribute，是否使用枚举名代替，默认是使用</param>
            <returns>枚举的Description</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtEnum.GetDescription(System.Enum,System.Boolean)">
            <summary>
            扩展方法，获得枚举的Description
            </summary>
            <param name="value">枚举值</param>
            <param name="nameInstead">当枚举值没有定义DescriptionAttribute，是否使用枚举名代替，默认是使用</param>
            <returns>枚举的Description</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SunnyMES.Commons.Extend.ExtEnum.EnumToDictionary(System.Type,System.Func{System.Enum,System.String})" -->
        <member name="M:SunnyMES.Commons.Extend.ExtEnum.EnumToList(System.Type,System.Func{System.Enum,System.String})">
            <summary>
            将枚举信息转成列表信息
            </summary>
            <param name="enumType">枚举类型</param>
            <param name="getText">查询委托</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtEnum.GetEnumItems(System.Type)">
            <summary>
            获取枚举的相关信息
            描述信息无法获取。。。
            </summary>
            <param name="e">枚举的类型</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Extend.ExtIEnumerable">
            <summary>
            IEnumerable扩展类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtIEnumerable.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            循环IEnumerable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="fun"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtIEnumerable.ToList``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            IEnumerable转List
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="fun"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Extend.ExtInt">
            <summary>
            文件大小，较小的文件
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtInt.ToDisplayFileSize(System.Int32)">
            <summary>
            显示文件大小，X Byte、x Kb、xM、xG
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Extend.Extlong">
            <summary>
            文件大小，较大的文件
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extend.Extlong.ToDisplayFileSize(System.Int64)">
            <summary>
            显示文件大小
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtPublicFunc.GetDescription``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            获取第一个属性值
             用法：  ExtPublicFunc.GetDescription(() => mConfirmPoOutput.CurrentInitPageInfo.poAttributes.IsScanUPC);
            </summary>
            <typeparam name="T"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtPublicFunc.GetPropertyNames``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            获取完整变量名称
             用法：  ExtPublicFunc.GetPropertyNames((() => mConfirmPoOutput.CurrentInitPageInfo));
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyLambda"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SunnyMES.Commons.Extend.ExtPublicFunc.GetName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" -->
        <member name="M:SunnyMES.Commons.Extend.ExtPublicFunc.ConvertDynamic(System.Collections.Generic.List{System.Object},System.String)">
            <summary>
            只能读取第一层的指定key的值
            </summary>
            <param name="ld"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SunnyMES.Commons.Extend.ExtPublicFunc.ToDynamicList(System.Data.DataTable,System.Boolean,System.String[])" -->
        <member name="T:SunnyMES.Commons.Extend.ExtQueryable">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtQueryable.OrderBy``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="ordering"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtQueryable.OrderByDescending``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="ordering"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Extend.ExtString">
            <summary>
            字符串处理
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.NoHTML(System.String)">
            <summary>
            过滤html格式
            </summary>
            <param name="Htmlstring"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.YuebonEditorJsonToHtml(System.String)">
            <summary>
            用于微信小程序编辑页面，将json字符串解析成html格式
            </summary>
            <param name="Jsonstring"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.YuebonHtmlToEditorJson(System.String)">
            <summary>
            用于微信小程序编辑页面，将html符串解析成json字格式
            </summary>
            <param name="htmlstring"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.ToByte(System.String)">
            <summary>
            转换为字节流
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.HtmlDecode(System.String)">
            <summary>
            转换为HtmlDecode
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.HtmlEncode(System.String)">
            <summary>
            转换为HtmlEncode
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.UrlEncode(System.String)">
            <summary>
            转换为UrlEncode
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.ToUnicode(System.String)">
            <summary>
            转换为ToUnicode
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:SunnyMES.Commons.Extend.ExtString.emailExpression">
            <summary>
            email正则验证
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Extend.ExtString.webUrlExpression">
            <summary>
            url正则验证
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Extend.ExtString.stripHTMLExpression">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.FormatWith(System.String,System.Object[])">
            <summary>
            格式化
            </summary>
            <param name="instance"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.ToEnum``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.ToEnum``1(System.Int32,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.StripHtml(System.String)">
            <summary>
            删除html内容
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.IsEmail(System.String)">
            <summary>
            是否是email地址
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.IsWebUrl(System.String)">
            <summary>
            是否是url
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.AsBool(System.String)">
            <summary>
            转换为bool
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.AsDateTime(System.String)">
            <summary>
            转换为日期时间型
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.AsDecimal(System.String)">
            <summary>
            转换为Decima
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.AsInt(System.String)">
            <summary>
            转换为整型
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.IsInt(System.String)">
            <summary>
            是否是Int整型
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.IsDateTime(System.String)">
            <summary>
            是否是DateTime日期时间型
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.IsFloat(System.String)">
            <summary>
            是否是Float浮点型
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.IsNullOrWhiteSpace(System.String)">
            <summary>
            是否为空或空白
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.IsNotNullAndWhiteSpace(System.String)">
            <summary>
            是否为不空或空白
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.IsNullOrEmpty(System.String)">
            <summary>
            是否为空
            </summary>
            <param name="theString"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.IsAlphanumeric(System.String)">
            <summary>
            是否字母和数字
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.FirstCharToLowerCase(System.String)">
            <summary>
            字符串第一个字符大写
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.ToFilePath(System.String)">
            <summary>
            文件路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.ReplacePath(System.String)">
            <summary>
            文件路径转换
            </summary>
            <param name="path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.CombinePath(System.String,System.String)">
            <summary>
            文件路径拼接
            </summary>
            <param name="p">原有文件路径</param>
            <param name="path">新文件路径</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.FromJsonString``1(System.String)">
            <summary>
            将JSON字符串还原为对象
            </summary>
            <typeparam name="T">要转换的目标类型</typeparam>
            <param name="json">JSON字符串 </param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.FromJsonString(System.String,System.Type)">
            <summary>
            将JSON字符串还原为对象
            </summary>
            <param name="json">JSON字符串 </param>
            <param name="type">数据类型</param>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.UpperFirst(System.String)">
            <summary>
            Json字符串首字母转大写
            </summary>
            <param name="strJsonData">json字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.Base64Encrypt(System.String,System.Text.Encoding)">
            <summary>
            Base64加密，采用指定字符编码方式加密。
            </summary>
            <param name="input">待加密的明文</param>
            <param name="encode">字符编码</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.Base64Encrypt(System.String)">
            <summary>
            Base64加密，采用UTF8编码方式加密。
            </summary>
            <param name="input">待加密的明文</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.Base64Decrypt(System.String)">
            <summary>
            Base64解密，采用UTF8编码方式解密。
            </summary>
            <param name="input">待解密的秘文</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.ExtString.Base64Decrypt(System.String,System.Text.Encoding)">
            <summary>
            Base64解密，采用指定字符编码方式解密。
            </summary>
            <param name="input">待解密的秘文</param>
            <param name="encode">字符的编码</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Extend.Reflect`1">
            <summary>
            根据业务对象的类型进行反射操作辅助类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SunnyMES.Commons.Extend.Reflect`1.Create(System.String,System.String)">
            <summary>
            根据参数创建对象实例
            </summary>
            <param name="sName">对象全局名称</param>
            <param name="sFilePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.Reflect`1.Create(System.String,System.String,System.Boolean)">
            <summary>
            根据参数创建对象实例
            </summary>
            <param name="sName">对象全局名称</param>
            <param name="sFilePath">文件路径</param>
            <param name="bCache">缓存集合</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extend.Reflect`1.CreateInstance(System.String,System.String)">
            <summary>
            根据全名和路径构造对象
            </summary>
            <param name="sName">对象全名</param>
            <param name="sFilePath">程序集路径</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.ApiDescriptionExtension">
            <summary>
            API描述器扩展
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ApiDescriptionExtension.GetAreaName(Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription)">
            <summary>
            获取区域名称
            </summary>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions">
            <summary>
            IServiceCollection自定义扩展
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddTransientAssembly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            用DI批量注入接口程序集中对应的实现类。
            针对每一次服务提供请求，IServiceProvider对象总是创建一个新的服务实例
            <para>
            需要注意的是，这里有如下约定：
            IUserService --> UserService, IUserRepository --> UserRepository.
            </para>
            </summary>
            <param name="service"></param>
            <param name="interfaceAssemblyName">接口程序集的名称（不包含文件扩展名）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddScopedAssembly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            用DI批量注入接口程序集中对应的实现类。
            在同一个作用域内只初始化一个实例 ，可以理解为每一个请求只创建一个实例，同一个请求会在一个作用域内。在Scooped的生存周期内，如果容器释放 它也就被释放了
            <para>
            需要注意的是，这里有如下约定：
            IUserService --> UserService, IUserRepository --> UserRepository.
            </para>
            </summary>
            <param name="service"></param>
            <param name="interfaceAssemblyName">接口程序集的名称（不包含文件扩展名）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddSingletonAssembly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            用DI批量注入接口程序集中对应的实现类。
            整个应用程序生命周期以内只创建一个实例，后续每个请求都使用相同的实例。如果应用程序需要单例行为，建议让服务容器管理服务的生命周期，而不是在自己的类中实现单例模式。
            <para>
            需要注意的是，这里有如下约定：
            IUserService --> UserService, IUserRepository --> UserRepository.
            </para>
            </summary>
            <param name="service"></param>
            <param name="interfaceAssemblyName">接口程序集的名称（不包含文件扩展名）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddScopedAssembly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String)">
            <summary>
            用DI批量注入接口程序集中对应的实现类。
            </summary>
            <param name="service"></param>
            <param name="interfaceAssemblyName">接口程序集的名称（不包含文件扩展名）</param>
            <param name="implementAssemblyName">实现程序集的名称（不包含文件扩展名）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddTransientAssembly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String)">
            <summary>
            用DI批量注入接口程序集中对应的实现类。
            </summary>
            <param name="service"></param>
            <param name="interfaceAssemblyName">接口程序集的名称（不包含文件扩展名）</param>
            <param name="implementAssemblyName">实现程序集的名称（不包含文件扩展名）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddSingletonAssembly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String)">
            <summary>
            用DI批量注入接口程序集中对应的实现类。
            </summary>
            <param name="service"></param>
            <param name="interfaceAssemblyName">接口程序集的名称（不包含文件扩展名）</param>
            <param name="implementAssemblyName">实现程序集的名称（不包含文件扩展名）</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.RegisterControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            注入Controler
            </summary>
            <param name="service"></param>
            <param name="controllerAssemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddDbContextFactory(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SunnyMES.Commons.DbContextCore.DbContextFactory})">
            <summary>
            注册数据库上下文工厂
            </summary>
            <param name="services"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddDbContext``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,SunnyMES.Commons.Options.DbContextOption)">
            <summary>
            注入数据库上下文
            </summary>
            <typeparam name="IT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="services"></param>
            <param name="option">数据库上下文配置参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddDbContextCustom``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注入数据库上下文
            </summary>
            <typeparam name="IT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddDbContextCustom``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,SunnyMES.Commons.Options.DbContextOption)">
            <summary>
            注入数据库上下文
            </summary>
            <typeparam name="IT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="services"></param>
            <param name="option">数据库上下文配置参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddDbContext``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注入数据库上下文
            </summary>
            <typeparam name="IT"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.GetDbContext(System.IServiceProvider,System.String,System.Type)">
            <summary>
            获取数据库上下文
            </summary>
            <param name="provider"></param>
            <param name="dbContextTagName">上下文标签名称</param>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.RegisterDefaultRepositories``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册仓储Repositories
            </summary>
            <typeparam name="T"></typeparam>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.GetRepositoryType(System.Type,System.Type)">
            <summary>
            获取继承仓储BaseRepository的所有仓储类型
            </summary>
            <param name="entityType"></param>
            <param name="primaryKeyType"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.GetPrimaryKeyType(System.Type)">
            <summary>
            获取继承Entity的所有实体类型主键类型
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.AppServiceCollectionExtensions.AddAutoScanInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加自动扫描注入Service服务和Respository仓储        /// 
            <para>
            需要注意的是，遵循如下约定：
            IUserService --> UserService, IUserRepository --> UserRepository.
            </para>
            </summary>
            <param name="services">服务集合</param>
            <returns>服务集合</returns>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.CollectionExtensions">
            <summary>
            集合扩展方法
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.CollectionExtensions.AddIf``1(System.Collections.Generic.ICollection{``0},``0,System.Boolean)">
            <summary>
            如果条件成立，添加项
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.CollectionExtensions.AddIf``1(System.Collections.Generic.ICollection{``0},``0,System.Func{System.Boolean})">
            <summary>
            如果条件成立，添加项
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.CollectionExtensions.AddIfNotExist``1(System.Collections.Generic.ICollection{``0},``0,System.Func{``0,System.Boolean})">
            <summary>
            如果不存在，添加项
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.CollectionExtensions.AddIfNotNull``1(System.Collections.Generic.ICollection{``0},``0)">
            <summary>
            如果不为空，添加项
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.CollectionExtensions.GetOrAdd``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean},System.Func{``0})">
            <summary>
            获取对象，不存在对使用委托添加对象
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.DateTimeExtensions">
            <summary>
            日期时间扩展
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Extensions.DateTimeExtensions.BeginOfEpoch">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.ToUniversalTime(System.Nullable{System.DateTime})">
            <summary>
            Converts a nullable date/time value to UTC.
            </summary>
            <param name="dateTime">The nullable date/time</param>
            <returns>The nullable date/time in UTC</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.ToLocalTime(System.Nullable{System.DateTime})">
            <summary>
            Converts a nullable UTC date/time value to local time.
            </summary>
            <param name="dateTime">The nullable UTC date/time</param>
            <returns>The nullable UTC date/time as local time</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.GetEvenHourDate(System.Nullable{System.DateTime})">
            <summary>
            Returns a date that is rounded to the next even hour above the given
            date.
            <p>
            For example an input date with a time of 08:13:54 would result in a date
            with the time of 09:00:00. If the date's time is in the 23rd hour, the
            date's 'day' will be promoted, and the time will be set to 00:00:00.
            </p>
            </summary>
            <param name="dateTime">the Date to round, if <see langword="null" /> the current time will
            be used</param>
            <returns>the new rounded date</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.GetEvenMinuteDate(System.Nullable{System.DateTime})">
            <summary>
            Returns a date that is rounded to the next even minute above the given
            date.
            <p>
            For example an input date with a time of 08:13:54 would result in a date
            with the time of 08:14:00. If the date's time is in the 59th minute,
            then the hour (and possibly the day) will be promoted.
            </p>
            </summary>
            <param name="dateTime">The Date to round, if <see langword="null" /> the current time will  be used</param>
            <returns>The new rounded date</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.GetEvenMinuteDateBefore(System.Nullable{System.DateTime})">
            <summary>
            Returns a date that is rounded to the previous even minute below the
            given date.
            <p>
            For example an input date with a time of 08:13:54 would result in a date
            with the time of 08:13:00.
            </p>
            </summary>
            <param name="dateTime">the Date to round, if <see langword="null" /> the current time will
            be used</param>
            <returns>the new rounded date</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.ToJavaScriptTicks(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.GetFirstDayOfMonth(System.DateTime)">
            <summary>
            Get the first day of the month for
            any full date submitted
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.GetLastDayOfMonth(System.DateTime)">
            <summary>
            Get the last day of the month for any
            full date
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.ToEndOfTheDay(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.ToEndOfTheDay(System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.ToUnixTime(System.DateTime)">
            <summary>Epoch time. Number of seconds since midnight (UTC) on 1st January 1970.</summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.FromUnixTime(System.Int64)">
            <summary>UTC date based on number of seconds since midnight (UTC) on 1st January 1970.</summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.DateTimeToUnixTime(System.DateTime)">
            <summary>
            将 DateTime 转换为 Unix 时间戳
            </summary>
            <param name="dateTime">需要转换的时间</param>
            <returns>Unix 时间戳</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.DateTimeExtensions.UnixTimeToDateTime(System.Int64)">
            <summary>
            将 Unix 时间戳转换为 DateTime
            </summary>
            <param name="timestamp">Unix 时间戳</param>
            <returns>需要转换的时间</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.EntityFrameworkCoreExtensions.GetCurrentDatabaseTableList(SunnyMES.Commons.IDbContext.IDbContextCore)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.EntityFrameworkCoreExtensions.ExecuteSqlNoQuery(SunnyMES.Commons.IDbContext.IDbContextCore,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行SQL返回受影响的行数
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.EntityFrameworkCoreExtensions.ExecuteStoredProcedure``1(SunnyMES.Commons.IDbContext.IDbContextCore,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行存储过程返回IEnumerable数据集
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.EntityFrameworkCoreExtensions.ExecuteSqlReader``1(SunnyMES.Commons.IDbContext.IDbContextCore,System.String,System.Data.Common.DbParameter[])">
            <summary>
            执行sql返回IEnumerable数据集
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.ExpressionExtensions">
            <summary>
            表达式树常用扩展方法
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SunnyMES.Commons.Extensions.ExpressionExtensions.GetPropertyName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" -->
        <member name="M:SunnyMES.Commons.Extensions.ExpressionExtensions.CreateLambdaParam``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ExpressionExtensions.GenerateBody``1(System.Linq.Expressions.ParameterExpression,SunnyMES.Commons.Extensions.Filter)">
            <summary>
            创建linq表达示的body部分
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ExpressionExtensions.GenerateLambda(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>
            创建完整的lambda
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ExpressionExtensions.Compose``1(System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression{``0},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
            以特定的条件运行组合两个Expression表达式
            </summary>
            <typeparam name="T">表达式的主实体类型</typeparam>
            <param name="first">第一个Expression表达式</param>
            <param name="second">要组合的Expression表达式</param>
            <param name="merge">组合条件运算方式</param>
            <returns>组合后的表达式</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ExpressionExtensions.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            以 Expression.AndAlso 组合两个Expression表达式
            </summary>
            <typeparam name="T">表达式的主实体类型</typeparam>
            <param name="first">第一个Expression表达式</param>
            <param name="second">要组合的Expression表达式</param>
            <returns>组合后的表达式</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ExpressionExtensions.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            以 Expression.OrElse 组合两个Expression表达式
            </summary>
            <typeparam name="T">表达式的主实体类型</typeparam>
            <param name="first">第一个Expression表达式</param>
            <param name="second">要组合的Expression表达式</param>
            <returns>组合后的表达式</returns>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.ExpressionExtensions.ParameterRebinder">
            <summary>
            参数重新绑定
            </summary>
            <seealso cref="T:System.Linq.Expressions.ExpressionVisitor" />
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ExpressionExtensions.ParameterRebinder.#ctor(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:SunnyMES.Commons.Extensions.ExpressionExtensions.ParameterRebinder"/> class.
            </summary>
            <param name="map">The map.</param>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ExpressionExtensions.ParameterRebinder.ReplaceParameters(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression)">
            <summary>
            Replaces the parameters.
            </summary>
            <param name="map">The map.</param>
            <param name="exp">The exp.</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ExpressionExtensions.ParameterRebinder.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            访问 <see cref="T:System.Linq.Expressions.ParameterExpression" />。
            </summary>
            <param name="node">要访问的表达式。</param>
            <returns>
            如果修改了该表达式或任何子表达式，则为修改后的表达式；否则返回原始表达式。
            </returns>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.HttpContextExtentions">
            <summary>
            HttpContext 扩展
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.ObjectExtension">
            <summary>
            对象自定义扩展类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToDataSet``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <typeparam name="T">转换的元素类型。</typeparam>
            <param name="list">集合。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>数据集。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToDataSet(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <param name="list">集合。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>数据集。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToDataSet``1(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <typeparam name="T">转换的元素类型。</typeparam>
            <param name="list">集合。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>数据集。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToListSet``1(``0,System.Boolean)">
            <summary>
            将实例转换为集合数据集。
            </summary>
            <typeparam name="T">实例类型。</typeparam>
            <param name="o">实例。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>数据集。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToXmlDocument``1(``0)">
            <summary>
            将可序列化实例转换为XmlDocument。
            </summary>
            <typeparam name="T">实例类型。</typeparam>
            <param name="o">实例。</param>
            <returns>XmlDocument。</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SunnyMES.Commons.Extensions.ObjectExtension.GetExpressionProperty``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" -->
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ListToDataSet(System.Collections.IEnumerable,System.Type,System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <param name="list">集合。</param>
            <param name="t">转换的元素类型。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>转换后的数据集。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ListToDataSet``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <typeparam name="T">转换的元素类型。</typeparam>
            <param name="list">集合。</param>
            <param name="generic">是否生成泛型数据集。</param>
            <returns>数据集。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ListToDataSet(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            将集合转换为数据集。
            </summary>
            <param name="list">集合。</param>
            <param name="generic">是否转换为字符串形式。</param>
            <returns>转换后的数据集。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetData(System.Data.DataSet)">
            <summary>
            获取DataSet第一表，第一行，第一列的值。
            </summary>
            <param name="ds">DataSet数据集。</param>
            <returns>值。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetData(System.Data.DataTable)">
            <summary>
            获取DataTable第一行，第一列的值。
            </summary>
            <param name="dt">DataTable数据集表。</param>
            <returns>值。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetData(System.Data.DataSet,System.String)">
            <summary>
            获取DataSet第一个匹配columnName的值。
            </summary>
            <param name="ds">数据集。</param>
            <param name="columnName">列名。</param>
            <returns>值。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetData(System.Data.DataTable,System.String)">
            <summary>
            获取DataTable第一个匹配columnName的值。
            </summary>
            <param name="dt">数据表。</param>
            <param name="columnName">列名。</param>
            <returns>值。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToString(System.Object,System.String)">
            <summary>
            将object转换为string类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>string。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToString(System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            将DateTime?转换为string类型信息。
            </summary>
            <param name="o">DateTime?。</param>
            <param name="format">标准或自定义日期和时间格式的字符串。</param>
            <param name="t">默认值。</param>
            <returns>string。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToString(System.Nullable{System.TimeSpan},System.String,System.String)">
            <summary>
            将TimeSpan?转换为string类型信息。
            </summary>
            <param name="o">TimeSpan?。</param>
            <param name="format">标准或自定义时间格式的字符串。</param>
            <param name="t">默认值。</param>
            <returns>string。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToSubString(System.Object,System.Int32,System.Int32,System.String)">
            <summary>
            将object转换为截取后的string类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="startIndex">此实例中子字符串的起始字符位置（从零开始）。</param>
            <param name="length">子字符串中的字符数。</param>
            <param name="suffix">后缀。如果没有截取则不添加。</param>
            <returns>截取后的string类型信息。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToByte(System.Object,System.Byte)">
            <summary>
            将object转换为byte类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>byte。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToChar(System.Object,System.Char)">
            <summary>
            将object转换为char类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>char。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToInt(System.Object,System.Int32)">
            <summary>
            将object转换为int类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>int。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToDouble(System.Object,System.Double)">
            <summary>
            将object转换为double类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>double。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToDecimal(System.Object,System.Decimal)">
            <summary>
            将object转换为decimal类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>decimal。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToFloat(System.Object,System.Single)">
            <summary>
            将object转换为float类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>float。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToLong(System.Object,System.Int64)">
            <summary>
            将object转换为long类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>long。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToBool(System.Object,System.Boolean)">
            <summary>
            将object转换为bool类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToSbyte(System.Object,System.SByte)">
            <summary>
            将object转换为sbyte类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>sbyte。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToShort(System.Object,System.Int16)">
            <summary>
            将object转换为short类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>short。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToUShort(System.Object,System.UInt16)">
            <summary>
            将object转换为ushort类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>ushort。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToULong(System.Object,System.UInt64)">
            <summary>
            将object转换为ulong类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>ulong。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToEnum``1(System.Object,``0)">
            <summary>
            将object转换为Enum[T]类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>Enum[T]。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToDateTime(System.Object,System.DateTime)">
            <summary>
            将object转换为DateTime类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>DateTime。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToTimeSpan(System.Object,System.TimeSpan)">
            <summary>
            将object转换为TimeSpan类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>TimeSpan。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToGuid(System.Object,System.Guid)">
            <summary>
            将object转换为Guid类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>Guid。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetBool(System.Object)">
            <summary>
            从object中获取bool类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetInt(System.Object)">
            <summary>
            从object中获取int类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>int。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetDecimal(System.Object)">
            <summary>
            从object中获取decimal类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>decimal。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetDouble(System.Object)">
            <summary>
            从object中获取double类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>double。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetPositiveNumber(System.Object)">
            <summary>
            从object中获取正数信息。
            </summary>
            <param name="o">object。</param>
            <returns>decimal。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetDateTime(System.Object)">
            <summary>
            从object中获取DateTime?类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>DateTime?。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetTimeSpan(System.Object)">
            <summary>
            从object中获取TimeSpan?类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>TimeSpan?。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetGuid(System.Object)">
            <summary>
            从object中获取Guid?类型信息。
            </summary>
            <param name="o">object。</param>
            <returns>Guid?。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetSqlDateTime(System.Object,System.DateTime)">
            <summary>
            将object转换为SqlServer中的DateTime?类型信息。
            </summary>
            <param name="o">object。</param>
            <param name="t">默认值。</param>
            <returns>DateTime?。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.Value(System.Xml.Linq.XElement,System.String)">
            <summary>
            读取XElement节点的文本内容。
            </summary>
            <param name="xElement">XElement节点。</param>
            <param name="t">默认值。</param>
            <returns>文本内容。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            获取与指定键相关的值。
            </summary>
            <typeparam name="TKey">键类型。</typeparam>
            <typeparam name="TValue">值类型。</typeparam>
            <param name="dictionary">表示键/值对象的泛型集合。</param>
            <param name="key">键。</param>
            <param name="t">默认值。</param>
            <returns>值。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetFirstOrDefaultValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            获取与指定键相关或者第一个的值。
            </summary>
            <typeparam name="TKey">键类型。</typeparam>
            <typeparam name="TValue">值类型。</typeparam>
            <param name="dictionary">表示键/值对象的泛型集合。</param>
            <param name="key">键。</param>
            <param name="t">默认值。</param>
            <returns>值。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.Element(System.Xml.Linq.XContainer,System.Xml.Linq.XName,System.Boolean)">
            <summary>
            获取具有指定 System.Xml.Linq.XName 的第一个（按文档顺序）子元素。
            </summary>
            <param name="xContainer">XContainer。</param>
            <param name="xName">要匹配的 System.Xml.Linq.XName。</param>
            <param name="t">是否返回同名默认值。</param>
            <returns>与指定 System.Xml.Linq.XName 匹配的 System.Xml.Linq.XElement，或者为 null。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.Elements(System.Xml.Linq.XContainer,System.Boolean)">
            <summary>
            按文档顺序返回此元素或文档的子元素集合。
            </summary>
            <param name="xContainer">XContainer。</param>
            <param name="t">是否返回非空默认值。</param>
            <returns>System.Xml.Linq.XElement 的按文档顺序包含此System.Xml.Linq.XContainer 的子元素，或者非空默认值。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.Elements(System.Xml.Linq.XContainer,System.Xml.Linq.XName,System.Boolean)">
            <summary>
            按文档顺序返回此元素或文档的经过筛选的子元素集合。集合中只包括具有匹配 System.Xml.Linq.XName 的元素。
            </summary>
            <param name="xContainer">XContainer。</param>
            <param name="xName">要匹配的 System.Xml.Linq.XName。</param>
            <param name="t">是否返回非空默认值。</param>
            <returns>System.Xml.Linq.XElement 的按文档顺序包含具有匹配System.Xml.Linq.XName 的 System.Xml.Linq.XContainer 的子级，或者非空默认值。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.RemoveHTMLTags(System.String)">
            <summary>
            删除html标签。
            </summary>
            <param name="html">输入的字符串。</param>
            <returns>没有html标签的字符串。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToFileName(System.String)">
            <summary>
            字符串转换为文件名。
            </summary>
            <param name="s">字符串。</param>
            <returns>文件名。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.GetMonday(System.DateTime)">
            <summary>
            获取星期一的日期。
            </summary>
            <param name="dateTime">日期。</param>
            <returns>星期一的日期。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.DefaultStringIfEmpty(System.String,System.String[])">
            <summary>
            获取默认非空字符串。
            </summary>
            <param name="s">首选默认非空字符串。</param>
            <param name="args">依次非空字符串可选项。</param>
            <returns>默认非空字符串。若无可选项则返回string.Empty。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToUrlEncodeString(System.String,System.Text.RegularExpressions.Regex,System.Text.Encoding)">
            <summary>
            对 URL 字符串进行编码。
            </summary>
            <param name="s">要编码的文本。</param>
            <param name="regex">匹配要编码的文本。</param>
            <param name="encoding">指定编码方案的 System.Text.Encoding 对象。</param>
            <returns>一个已编码的字符串。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToUrlEncodeString(System.String,System.String,System.Text.Encoding)">
            <summary>
            对 URL 字符串进行编码。
            </summary>
            <param name="s">要编码的文本。</param>
            <param name="regex">匹配要编码的文本。</param>
            <param name="encoding">指定编码方案的 System.Text.Encoding 对象。</param>
            <returns>一个已编码的字符串。</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToUnixTimeStamp(System.DateTime)">
            <summary>
            将日期转换为UNIX时间戳字符串
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.IsMobile(System.String)">
            <summary>
            判断当前字符串是否是移动电话号码
            </summary>
            <param name="mobile"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.IsEmail(System.String)">
            <summary>
            判断当前字符串是否为邮箱
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.CastTo(System.Object,System.Type)">
            <summary>
            把对象类型转换为指定类型
            </summary>
            <param name="value"></param>
            <param name="conversionType"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.CastTo``1(System.Object)">
            <summary>
            把对象类型转化为指定类型
            </summary>
            <typeparam name="T"> 动态类型 </typeparam>
            <param name="value"> 要转化的源对象 </param>
            <returns> 转化后的指定类型的对象，转化失败引发异常。 </returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.CastTo``1(System.Object,``0)">
            <summary>
            把对象类型转化为指定类型，转化失败时返回指定的默认值
            </summary>
            <typeparam name="T"> 动态类型 </typeparam>
            <param name="value"> 要转化的源对象 </param>
            <param name="defaultValue"> 转化失败返回的指定默认值 </param>
            <returns> 转化后的指定类型对象，转化失败时返回指定的默认值 </returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.SaveToCsv``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            将对象保存为csv
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="csvFullName">文件名称</param>
            <param name="separator">分隔符，默认逗号</param>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.IsImplement(System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="interfaceType"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ObjectExtension.ToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将对象转为DataTable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.Result`1">
            <summary>
            结果。
            </summary>
            <typeparam name="T">结果返回值类型。</typeparam>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.Result`1.Flag">
            <summary>
            标记。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.Result`1.Return">
            <summary>
            返回值。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.Result`1.Message">
            <summary>
            消息。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.Result`1.Exception">
            <summary>
            异常。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.Result`1.DateTime">
            <summary>
            时间。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.Result`1.Int">
            <summary>
            整型数据。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.Result`1.Decimal">
            <summary>
            浮点数据。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.Result`1.Bool">
            <summary>
            布尔数据。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.Result`1.Object">
            <summary>
            对象。
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.Flag">
            <summary>
            标记。
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Extensions.Flag.Default">
            <summary>
            默认。
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Extensions.Flag.True">
            <summary>
            真。
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Extensions.Flag.False">
            <summary>
            假。
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.ParameterCheckExtensions">
            <summary>
            用于参数检查的扩展方法
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.Require``1(System.Boolean,System.String)">
            <summary>
            验证指定值的断言<paramref name="assertion"/>是否为真，如果不为真，抛出指定消息<paramref name="message"/>的指定类型<typeparamref name="TException"/>异常
            </summary>
            <typeparam name="TException">异常类型</typeparam>
            <param name="assertion">要验证的断言。</param>
            <param name="message">异常消息。</param>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)">
            <summary>
            验证指定值的断言表达式是否为真，不为值抛出<see cref="T:System.Exception"/>异常
            </summary>
            <param name="value"></param>
            <param name="assertionFunc">要验证的断言表达式</param>
            <param name="message">异常消息</param>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)">
            <summary>
            验证指定值的断言表达式是否为真，不为真抛出<typeparamref name="TException"/>异常
            </summary>
            <typeparam name="T">要判断的值的类型</typeparam>
            <typeparam name="TException">抛出的异常类型</typeparam>
            <param name="value">要判断的值</param>
            <param name="assertionFunc">要验证的断言表达式</param>
            <param name="message">异常消息</param>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)">
            <summary>
            检查参数不能为空引用，否则抛出<see cref="T:System.ArgumentNullException"/>异常。
            </summary>
            <param name="value"></param>
            <param name="paramName">参数名称</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty(System.String,System.String)">
            <summary>
            检查字符串不能为空引用或空字符串，否则抛出<see cref="T:System.ArgumentNullException"/>异常或<see cref="T:System.ArgumentException"/>异常。
            </summary>
            <param name="value"></param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.CheckNotEmpty(System.Guid,System.String)">
            <summary>
            检查Guid值不能为Guid.Empty，否则抛出<see cref="T:System.ArgumentException"/>异常。
            </summary>
            <param name="value"></param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            检查集合不能为空引用或空集合，否则抛出<see cref="T:System.ArgumentNullException"/>异常或<see cref="T:System.ArgumentException"/>异常。
            </summary>
            <typeparam name="T">集合项的类型。</typeparam>
            <param name="collection"></param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.CheckLessThan``1(``0,System.String,``0,System.Boolean)">
            <summary>
            检查参数必须小于[或可等于，参数canEqual]指定值，否则抛出<see cref="T:System.ArgumentOutOfRangeException"/>异常。
            </summary>
            <typeparam name="T">参数类型。</typeparam>
            <param name="value"></param>
            <param name="paramName">参数名称。</param>
            <param name="target">要比较的值。</param>
            <param name="canEqual">是否可等于。</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.CheckGreaterThan``1(``0,System.String,``0,System.Boolean)">
            <summary>
            检查参数必须大于[或可等于，参数canEqual]指定值，否则抛出<see cref="T:System.ArgumentOutOfRangeException"/>异常。
            </summary>
            <typeparam name="T">参数类型。</typeparam>
            <param name="value"></param>
            <param name="paramName">参数名称。</param>
            <param name="target">要比较的值。</param>
            <param name="canEqual">是否可等于。</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.CheckBetween``1(``0,System.String,``0,``0,System.Boolean,System.Boolean)">
            <summary>
            检查参数必须在指定范围之间，否则抛出<see cref="T:System.ArgumentOutOfRangeException"/>异常。
            </summary>
            <typeparam name="T">参数类型。</typeparam>
            <param name="value"></param>
            <param name="paramName">参数名称。</param>
            <param name="start">比较范围的起始值。</param>
            <param name="end">比较范围的结束值。</param>
            <param name="startEqual">是否可等于起始值</param>
            <param name="endEqual">是否可等于结束值</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.CheckDirectoryExists(System.String,System.String)">
            <summary>
            检查指定路径的文件夹必须存在，否则抛出<see cref="T:System.IO.DirectoryNotFoundException"/>异常。
            </summary>
            <param name="directory"></param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.IO.DirectoryNotFoundException"></exception>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.ParameterCheckExtensions.CheckFileExists(System.String,System.String)">
            <summary>
            检查指定路径的文件必须存在，否则抛出<see cref="T:System.IO.FileNotFoundException"/>异常。
            </summary>
            <param name="filename"></param>
            <param name="paramName">参数名称。</param>
            <exception cref="T:System.ArgumentNullException">当文件路径为null时</exception>
            <exception cref="T:System.IO.FileNotFoundException">当文件路径不存在时</exception>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.SessionExtensions">
            <summary>
            Session 扩展函数,直接将实体类序列化成json存储和读取
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.SessionExtensions.Set(Microsoft.AspNetCore.Http.ISession,System.String,System.Object)">
            <summary>
            设置session值
            </summary>
            <param name="session"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.SessionExtensions.Get``1(Microsoft.AspNetCore.Http.ISession,System.String)">
            <summary>
            获取session
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.TypeExtensions">
            <summary>
            类型<see cref="T:System.Type"/>辅助扩展方法类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.IsDeriveClassFrom``1(System.Type,System.Boolean)">
            <summary>
            判断当前类型是否可由指定类型派生
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.IsDeriveClassFrom(System.Type,System.Type,System.Boolean)">
            <summary>
            判断当前类型是否可由指定类型派生
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.IsNullableType(System.Type)">
            <summary>
            判断类型是否为Nullable类型
            </summary>
            <param name="type"> 要处理的类型 </param>
            <returns> 是返回True，不是返回False </returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.GetNonNullableType(System.Type)">
            <summary>
            由类型的Nullable类型返回实际类型
            </summary>
            <param name="type"> 要处理的类型对象 </param>
            <returns> </returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.GetUnNullableType(System.Type)">
            <summary>
            通过类型转换器获取Nullable类型的基础类型
            </summary>
            <param name="type"> 要处理的类型对象 </param>
            <returns> </returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.GetDescription(System.Type,System.Boolean)">
            <summary>
            获取类型的Description特性描述信息
            </summary>
            <param name="type">类型对象</param>
            <param name="inherit">是否搜索类型的继承链以查找描述特性</param>
            <returns>返回Description特性描述信息，如不存在则返回类型的全名</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.GetDescription(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            获取成员元数据的Description特性描述信息
            </summary>
            <param name="member">成员元数据对象</param>
            <param name="inherit">是否搜索成员的继承链以查找描述特性</param>
            <returns>返回Description特性描述信息，如不存在则返回成员的名称</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.HasAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            检查指定指定类型成员中是否存在指定的Attribute特性
            </summary>
            <typeparam name="T">要检查的Attribute特性类型</typeparam>
            <param name="memberInfo">要检查的类型成员</param>
            <param name="inherit">是否从继承中查找</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.GetAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            从类型成员获取指定Attribute特性
            </summary>
            <typeparam name="T">Attribute特性类型</typeparam>
            <param name="memberInfo">类型类型成员</param>
            <param name="inherit">是否从继承中查找</param>
            <returns>存在返回第一个，不存在返回null</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.GetAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            从类型成员获取指定Attribute特性
            </summary>
            <typeparam name="T">Attribute特性类型</typeparam>
            <param name="memberInfo">类型类型成员</param>
            <param name="inherit">是否从继承中查找</param>
            <returns>返回所有指定Attribute特性的数组</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.IsEnumerable(System.Type)">
            <summary>
            判断类型是否为集合类型
            </summary>
            <param name="type">要处理的类型</param>
            <returns>是返回True，不是返回False</returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.IsGenericAssignableFrom(System.Type,System.Type)">
            <summary>
            判断当前泛型类型是否可由指定类型的实例填充
            </summary>
            <param name="genericType">泛型类型</param>
            <param name="type">指定类型</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.IsAsync(System.Reflection.MethodInfo)">
            <summary>
            方法是否是异步
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.IsBaseOn(System.Type,System.Type)">
            <summary>
            返回当前类型是否是指定基类的派生类
            </summary>
            <param name="type">当前类型</param>
            <param name="baseType">要判断的基类型</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.IsBaseOn``1(System.Type)">
            <summary>
            返回当前类型是否是指定基类的派生类
            </summary>
            <typeparam name="TBaseType">要判断的基类型</typeparam>
            <param name="type">当前类型</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.GetFullNameWithModule(System.Type)">
            <summary>
            获取类型的全名，附带所在类库
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.ShortDisplayName(System.Type)">
            <summary>
            获取类型的显示短名称
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.DisplayName(System.Type,System.Boolean)">
            <summary>
            获取类型的显示名称
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.GetKeyProperty(System.Type)">
            <summary>
            获取主键字段
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.GetKeyProperty(System.Reflection.PropertyInfo[])">
            <summary>
            
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Extensions.TypeExtensions.IsKey(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Extensions.YuebonClaimTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.YuebonClaimTypes.UserName">
            <summary>
            Default: <see cref="F:System.Security.Claims.ClaimTypes.Name"/>
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.YuebonClaimTypes.UserId">
            <summary>
            Default: <see cref="F:System.Security.Claims.ClaimTypes.NameIdentifier"/>
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.YuebonClaimTypes.Role">
            <summary>
            Default: <see cref="F:System.Security.Claims.ClaimTypes.Role"/>
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.YuebonClaimTypes.Email">
            <summary>
            Default: <see cref="F:System.Security.Claims.ClaimTypes.Email"/>
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.YuebonClaimTypes.EmailVerified">
            <summary>
            Default: "email_verified".
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.YuebonClaimTypes.PhoneNumber">
            <summary>
            Default: "phone_number".
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.YuebonClaimTypes.PhoneNumberVerified">
            <summary>
            Default: "phone_number_verified".
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.YuebonClaimTypes.TenantId">
            <summary>
            Default: "tenantid".
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.YuebonClaimTypes.EditionId">
            <summary>
            Default: "editionid".
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Extensions.YuebonClaimTypes.ClientId">
            <summary>
            Default: "client_id".
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.AppVersionHelper">
            <summary>
            应用版本号、软件厂商等信息
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Helpers.AppVersionHelper.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Helpers.AppVersionHelper.Manufacturer">
            <summary>
            软件厂商
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Helpers.AppVersionHelper.WebSite">
            <summary>
            网站地址
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Helpers.AppVersionHelper.UpdateUrl">
            <summary>
            更新地址
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.BooleanJsonConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.BooleanJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.BooleanJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Boolean,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.ByteConvertHelper">
            <summary>
            byte转换类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ByteConvertHelper.Object2Bytes(System.Object)">
            <summary>
            将对象转换为byte数组
            </summary>
            <param name="obj">被转换对象</param>
            <returns>转换后byte数组</returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ByteConvertHelper.Bytes2Object(System.Byte[])">
            <summary>
            将byte数组转换成对象
            </summary>
            <param name="buff">被转换byte数组</param>
            <returns>转换完成后的对象</returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ByteConvertHelper.Bytes2Object``1(System.Byte[])">
            <summary>
            将byte数组转换成对象
            </summary>
            <param name="buff">被转换byte数组</param>
            <returns>转换完成后的对象</returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.ConvertHelper">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.isBaseNumber(System.Int32)">
            <summary>
            判断是否是 2 8 10 16
            </summary>
            <param name="baseNumber"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.StringToBytes(System.String)">
            <summary>
            将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.BytesToString(System.Byte[])">
            <summary>
            将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            使用指定字符集将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToInt32``1(``0,System.Int32)">
            <summary>
            将数据转换为整型   转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToInt32(System.String,System.Int32)">
            <summary>
            将数据转换为整型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToInt32(System.Object,System.Int32)">
            <summary>
            将数据转换为整型  转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToBoolean``1(``0,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToBoolean(System.String,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToBoolean(System.Object,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToFloat``1(``0,System.Single)">
            <summary>
            将数据转换为单精度浮点型  转换失败 返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToFloat(System.Object,System.Single)">
            <summary>
            将数据转换为单精度浮点型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToFloat(System.String,System.Single)">
            <summary>
            将数据转换为单精度浮点型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDouble``1(``0,System.Double)">
            <summary>
            将数据转换为双精度浮点型   转换失败返回默认值
            </summary>
            <typeparam name="T">数据的类型</typeparam>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDouble``1(``0,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位   转换失败返回默认值
            </summary>
            <typeparam name="T">数据的类型</typeparam>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDouble(System.Object,System.Double)">
            <summary>
            将数据转换为双精度浮点型  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDouble(System.String,System.Double)">
            <summary>
            将数据转换为双精度浮点型  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDouble(System.Object,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDouble(System.String,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ConvertTo(System.Object,System.Type)">
            <summary>
            将数据转换为指定类型
            </summary>
            <param name="data">转换的数据</param>
            <param name="targetType">转换的目标类型</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ConvertTo``1(System.Object)">
            <summary>
            将数据转换为指定类型
            </summary>
            <typeparam name="T">转换的目标类型</typeparam>
            <param name="data">转换的数据</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ChangeType(System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="conversionType"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="conversionType"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDecimal``1(``0,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDecimal(System.Object,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDecimal(System.String,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDateTime``1(``0,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDateTime(System.Object,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ToDateTime(System.String,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ConvertToSBC(System.String)">
             <summary>
             转全角的函数(SBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>全角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ConvertHelper.ConvertToDBC(System.String)">
             <summary> 转半角的函数(DBC case) </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.CookiesHelper">
            <summary>
            Cookie操作类
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Helpers.CookiesHelper.HttpHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Helpers.CookiesHelper.CookieName">
            <summary>
            Cookie名称
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CookiesHelper.CookieKey(System.String)">
            <summary>
            设置Cookie键
            </summary>
            <param name="cookieName">键</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CookiesHelper.DeleteCookie(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            删除Cookie
            </summary>
            <param name="context"></param>
            <param name="cookieName">Coookie名称</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CookiesHelper.WriteCookie(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.Int32)">
            <summary>
            写/保存Cookie
            </summary>
            <param name="context"></param>
            <param name="cookieName">Coookie名称</param>
            <param name="value">Coookie值</param>
            <param name="months">有效月数</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CookiesHelper.WriteCookie(System.String,System.String,System.Int32)">
            <summary>
            写/保存Cookie
            </summary>
            <param name="cookieName">Coookie名称</param>
            <param name="value">Coookie值</param>
            <param name="months">有效月数</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CookiesHelper.WriteCookie(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            写/保存Cookie
            </summary>
            <param name="context"></param>
            <param name="cookieName">Coookie名称</param>
            <param name="value">Coookie值</param>
            <param name="months">有效月数</param>
            <param name="days">有效天数</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CookiesHelper.ReadCookie(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            获取Cookie值
            </summary>
            <param name="context"></param>
            <param name="cookieName">Coookie名称</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CookiesHelper.ReadCookie(System.String)">
            <summary>
            获取Cookie值
            </summary>
            <param name="cookieName">Coookie名称</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.CSVHelper">
            <summary>
            CSV文件和DataTable对象转换辅助类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CSVHelper.CSVToDataTableByOledb(System.String)">
            <summary>
            CSV转换成DataTable（OleDb数据库访问方式）
            </summary>
            <param name="csvPath">csv文件路径</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CSVHelper.CSVToDataTableByStreamReader(System.String)">
            <summary>
            CSV转换成DataTable（文件流方式）
            </summary>
            <param name="csvPath">csv文件路径</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CSVHelper.DataTableToCSV(System.Data.DataTable,System.String)">
            <summary>
            DataTable 生成 CSV
            </summary>
            <param name="dt">DataTable</param>
            <param name="csvPath">csv文件路径</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CSVHelper.CSVToDataTableByStreamReader(System.IO.MemoryStream)">
            <summary>
            CSV转换成DataTable（文件流方式）
            </summary>
            <param name="csvPath">csv文件路径</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.CSVHelper.CSVToDataTableByStreamReader``1(System.IO.MemoryStream)">
            <summary>
            CSV转换成DataTable（文件流方式）
            </summary>
            <param name="csvPath">csv文件路径</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:SunnyMES.Commons.Helpers.DataTableHelper" -->
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.AddIdentityColumn(System.Data.DataTable)">
            <summary>
            给DataTable增加一个自增列
            如果DataTable 存在 identityid 字段  则 直接返回DataTable 不做任何处理
            </summary>
            <param name="dt">DataTable</param>
            <returns>返回Datatable 增加字段 identityid </returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.IsHaveRows(System.Data.DataTable)">
            <summary>
            检查DataTable 是否有数据行
            </summary>
            <param name="dt">DataTable</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.DataTableToList``1(System.Data.DataTable)">
            <summary>
            DataTable转换成实体列表
            </summary>
            <typeparam name="T">实体 T </typeparam>
            <param name="table">datatable</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.ListToDataTable``1(System.Collections.Generic.IList{``0})">
            <summary>
            实体列表转换成DataTable
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="list"> 实体列表</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.ToDataTable``1(System.Collections.Generic.IList{``0})">
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.ToDataTable``1(System.Collections.Generic.IList{``0},System.String[])">
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <param name="propertyName">需要返回的列的列名</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.CreateTable(System.Collections.Generic.List{System.String})">
            <summary>
            根据nameList里面的字段创建一个表格,返回该表格的DataTable
            </summary>
            <param name="nameList">包含字段信息的列表</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.CreateTable(System.String)">
            <summary>
            通过字符列表创建表字段，字段格式可以是：
            1) a,b,c,d,e
            2) a|int,b|string,c|bool,d|decimal
            </summary>
            <param name="nameString"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.GetDataRowArray(System.Data.DataRowCollection)">
            <summary>
            获得从DataRowCollection转换成的DataRow数组
            </summary>
            <param name="drc">DataRowCollection</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.GetTableFromRows(System.Data.DataRow[])">
            <summary>
            将DataRow数组转换成DataTable，注意行数组的每个元素须具有相同的数据结构，
            否则当有元素长度大于第一个元素时，抛出异常
            </summary>
            <param name="rows">行数组</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.SortedTable(System.Data.DataTable,System.String[])">
            <summary>
            排序表的视图
            </summary>
            <param name="dt"></param>
            <param name="sorts"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.FilterDataTable(System.Data.DataTable,System.String)">
            <summary>
            根据条件过滤表的内容
            </summary>
            <param name="dt"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.TypeToDbType(System.Type)">
            <summary>
            转换.NET的Type到数据库参数的类型
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.ConcatColumnValue(System.Data.DataTable,System.String,System.String,System.Char)">
            <summary>
            使用分隔符串联表格字段的内容,如：a,b,c
            </summary>
            <param name="dt">表格</param>
            <param name="columnName">字段名称</param>
            <param name="append">增加的字符串，无则为空</param>
            <param name="splitChar">分隔符，如逗号(,)</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.ConcatColumnValue(System.Data.DataTable,System.String,System.String)">
            <summary>
            使用逗号串联表格字段的内容,如：a,b,c
            </summary>
            <param name="dt">表格</param>
            <param name="columnName">字段名称</param>
            <param name="append">增加的字符串，无则为空</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DataTableHelper.ContainAllColumns(System.Data.DataTable,System.String)">
            <summary>
            判断表格是否包含指定的全部字段名称,如果其中一个不符合则返回false
            </summary>
            <param name="dt">表格对象</param>
            <param name="columnString">字段列名称，逗号分开</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.DateTimeJsonConverter">
            <summary>
            时间类型格式数据处理
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Helpers.DateTimeJsonConverter._dateFormatString">
            <summary>
            时间格式
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DateTimeJsonConverter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DateTimeJsonConverter.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="dateFormatString">时间格式</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DateTimeJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DateTimeJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.DateTimeNullableConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DateTimeNullableConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DateTimeNullableConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.DateTime},System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DecimalJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.DecimalJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Decimal,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.EntityMapper">
            <summary>
            实体类映射，源自SqlSugar(http://www.codeisbug.com/Doc/3/1113)
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.EntityMapper.ToList``1(System.Data.DataTable)">
            <summary>
            将DataTable转换成泛型对象列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.FileHelper">
            <summary>
            文件处理帮助类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileHelper.ZipFiles(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            制作压缩包（多个文件压缩到一个压缩包，支持加密、注释）
            </summary>
            <param name="topDirectoryName">压缩文件目录</param>
            <param name="zipedFileName">压缩包文件名</param>
            <param name="compresssionLevel">压缩级别 1-9 </param>
            <param name="password">密码</param>
            <param name="comment">注释</param>
            <param name="filetype">文件类型</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileHelper.ZipFileDirectory(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            压缩多层目录
            </summary>
            <param name="topDirectoryName">压缩文件目录</param>
            <param name="zipedFileName">压缩包文件名</param>
            <param name="compresssionLevel">压缩级别 1-9 </param>
            <param name="password">密码</param>
            <param name="comment">注释</param>
            <param name="filetype">文件类型</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileHelper.ZipSetp(System.String,ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String,System.String)">
            <summary>
            递归遍历目录
            </summary>
            <param name="strDirectory">The directory.</param>
            <param name="s">The ZipOutputStream Object.</param>
            <param name="parentPath">The parent path.</param>
            <param name="filetype"></param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileHelper.ReadFile(System.String)">
            <summary>
            读文件
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileHelper.WriteFile(System.String,System.String,System.String,System.Boolean)">
            <summary>
            写文件
            </summary>
            <param name="path">文件路径</param>
            <param name="fileName">文件名称</param>
            <param name="content">文件内容</param>
            <param name="appendToLast">是否追加到最后</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileHelper.DeleteDirectory(System.String)">
            <summary>
            删除指定目录下的所有文件及文件夹(保留目录)
            </summary>
            <param name="file">文件目录</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileHelper.GetEncoding(System.String)">
            <summary>
            获取文件编码
            </summary>
            <param name="filePath">文件绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileHelper.GetEncoding(System.String,System.Text.Encoding)">
            <summary>
            获取文件编码
            </summary>
            <param name="filePath">文件绝对路径</param>
            <param name="defaultEncoding">找不到则返回这个默认编码</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.FileQuartz">
            <summary>
            定时任务日志文件
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileQuartz.CreateQuartzRootPath">
            <summary>
            创建作业所在根目录及日志文件夹 
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileQuartz.InitTaskJobLogPath(System.String)">
            <summary>
            初始化任务日志文件路径
            </summary>
            <param name="jobName">任务名称</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileQuartz.WriteStartLog(System.String)">
            <summary>
            任务启动日志
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileQuartz.WriteJobAction(SunnyMES.Commons.Enums.JobAction,Quartz.ITrigger,System.String,System.String)">
            <summary>
            任务操作日志
            </summary>
            <param name="jobAction"></param>
            <param name="trigger"></param>
            <param name="taskName"></param>
            <param name="groupName"></param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileQuartz.WriteJobAction(SunnyMES.Commons.Enums.JobAction,System.String,System.String,System.String)">
            <summary>
            任务操作日志
            </summary>
            <param name="jobAction"></param>
            <param name="taskName"></param>
            <param name="groupName"></param>
            <param name="content"></param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.FileQuartz.WriteErrorLog(System.String)">
            <summary>
            任务错误日志
            </summary>
            <param name="content"></param>
        </member>
        <member name="P:SunnyMES.Commons.Helpers.FileQuartz.RootPath">
            <summary>
            根目录
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Helpers.FileQuartz.LogPath">
            <summary>
            日志目录
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.GuidUtils">
            <summary>  
            Guid工具类  
            </summary>  
        </member>
        <member name="M:SunnyMES.Commons.Helpers.GuidUtils.GuId">
            <summary>
            表示全局唯一标识符 (GUID)。
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.GuidUtils.CreateNo">
            <summary>
            自动生成编号/唯一订单号生成，时间戳+随机数，时间戳精确到毫秒，形如2020052113254137177350
            高并发会出现重复Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.GuidUtils.IdGenerator">
            <summary>
            雪花飘逸算法生成ID
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.GuidUtils.upper(System.String)">
            <summary>  
            获取一个大写的字符串  
            </summary>  
            <param name="str"></param>  
            <returns></returns>  
        </member>
        <member name="M:SunnyMES.Commons.Helpers.GuidUtils.NewGuidFormatN(System.Boolean)">
            <summary>  
            获取32位不包含“-”号的GUID字符串  
            </summary>  
            <returns></returns>  
        </member>
        <member name="M:SunnyMES.Commons.Helpers.GuidUtils.NewGuidFormatD(System.Boolean)">
            <summary>  
            获取32位包含“-”号的GUID字符串  
            </summary>  
            <param name="isUpper"></param>  
            <returns></returns>  
        </member>
        <member name="M:SunnyMES.Commons.Helpers.GuidUtils.NewGuidFormatP(System.Boolean)">
            <summary>  
            获取32位包含“-”号的GUID被“(”、“)”包括的字符串  
            </summary>  
            <param name="isUpper"></param>  
            <returns></returns>  
        </member>
        <member name="M:SunnyMES.Commons.Helpers.GuidUtils.NewGuidFormatB(System.Boolean)">
            <summary>  
            获取32位包含“-”号的GUID被“{”、“}”包括的字符串  
            </summary>  
            <param name="isUpper"></param>  
            <returns></returns>  
        </member>
        <member name="M:SunnyMES.Commons.Helpers.GuidUtils.NewGuidFormatX(System.Boolean)">
            <summary>  
            获取4个被“{”、“}”包括的十六进制数，其中第四个值位8个被“{”、“}”包括的十六进制数字符串  
            </summary>  
            <param name="isUpper"></param>  
            <returns></returns>  
        </member>
        <member name="T:SunnyMES.Commons.Helpers.HttpContextHelper">
            <summary>
            HttpContext帮助类
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Helpers.HttpContextHelper.httpContextAccessor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.HttpContextHelper.Configure(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            注入
            </summary>
            <param name="_httpContextAccessor"></param>
        </member>
        <member name="P:SunnyMES.Commons.Helpers.HttpContextHelper.HttpContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.HttpRequestHelper">
            <summary>
            http请求类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.HttpRequestHelper.HttpGet(System.String,System.Text.Encoding,System.Int32)">
            <summary>
            使用Get方法获取字符串结果
            </summary>
            <param name="url"></param>
            <param name="encoding"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.HttpRequestHelper.HttpPost(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            使用Post方法获取字符串结果，常规提交
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.HttpRequestHelper.HttpPost(System.String,System.String,System.Text.Encoding,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            发送HttpPost请求，使用JSON格式传输数据
            </summary>
            <param name="url"></param>
            <param name="postData"></param>
            <param name="encoding"></param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.HttpRequestHelper.HttpPost(System.String,System.Object,System.Text.Encoding,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            使用POST请求数据，使用JSON传输数据
            </summary>
            <param name="url"></param>
            <param name="dataObj">传输对象，转换为JSON传输</param>
            <param name="encoding"></param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.HttpRequestHelper.HttpPost(System.String,System.IO.Stream,System.String,System.Text.Encoding,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            使用Post方法获取字符串结果
            </summary>
            <param name="url"></param>
            <param name="postStream"></param>
            <param name="contentType"></param>
            <param name="encoding"></param>
            <param name="headers"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.HttpRequestHelper.FillFormDataStream(System.Collections.Generic.Dictionary{System.String,System.String},System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="formData"></param>
            <param name="stream"></param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.HttpRequestHelper.GetQueryString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            组装QueryString的方法
            参数之间用&amp;连接，首位没有符号，如：a=1&amp;b=2&amp;c=3
            </summary>
            <param name="formData"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.IdGeneratorHelper">
            <summary>
            Id生成器,包含Guid、时间+随机数、雪花算法生成Id。
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.IdGeneratorHelper.GuId">
            <summary>
            表示全局唯一标识符 (GUID)。
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.IdGeneratorHelper.CreateNo">
            <summary>
            自动生成编号/唯一订单号生成，时间戳+随机数，时间戳精确到毫秒，形如2020052113254137177350
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.IdGeneratorHelper.IdSnowflake">
            <summary>
            雪花飘逸算法生成ID
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.ImgHelper">
            <summary>
            图片处理
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ImgHelper.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath">源文件</param>
            <param name="thumbnailPath">缩略图</param>
            <param name="width">宽</param>
            <param name="height">高</param>
            <param name="mode"></param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ImgHelper.GetNetImg(System.String)">
            <summary>
            获取网络图片
            </summary>
            <param name="imgUrl"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ImgHelper.CutEllipse(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Size,System.String)">
            <summary>
            将图片裁剪成圆形
            </summary>
            <param name="img"></param>
            <param name="rec"></param>
            <param name="size"></param>
            <param name="imgSavePath"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ImgHelper.CutEllipse(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Size)">
            <summary>
            将图片裁剪成圆形
            </summary>
            <param name="img"></param>
            <param name="rec"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.IntJsonConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.IntJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.IntJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Int32,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.NPOIHelper">
            <summary>
            office 导入导出
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.NPOIHelper.ExportExcel(System.Data.DataTable,System.String)">
            <summary>
            DataTable 导出到 Excel 的 MemoryStream
            </summary>
            <param name="dtSource">源 DataTable</param>
            <param name="strHeaderText">表头文本 空值未不要表头标题</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.NPOIHelper.ExportExcel(System.Data.DataTable,System.String,System.String)">
            <summary>
            DaataTable 导出到 Excel 文件
            </summary>
            <param name="dtSource">源 DataaTable</param>
            <param name="strHeaderText">表头文本</param>
            <param name="strFileName">保存位置(文件名及路径)</param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.NPOIHelper.ImportExcel(System.String)">
            <summary>
            读取 excel
            默认第一行为标头
            </summary>
            <param name="strFileName">excel 文档路径</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.NPOIHelper.ExportExcel(System.Data.DataSet,System.String)">
            <summary>
            DataSet 导出到 Excel 的 MemoryStream
            </summary>
            <param name="dsSource">源 DataSet</param>
            <param name="strHeaderText">表头文本 空值未不要表头标题(多个表对应多个表头以英文逗号(,)分开，个数应与表相同)</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.NPOIHelper.ExportFromDSExcel(NPOI.HSSF.UserModel.HSSFWorkbook,System.Data.DataTable,System.String)">
            <summary>
            DataTable 导出到 Excel 的 MemoryStream
            </summary>
            <param name="workbook">源 workbook</param>
            <param name="dtSource">源 DataTable</param>
            <param name="strHeaderText">表头文本 空值未不要表头标题(多个表对应多个表头以英文逗号(,)分开，个数应与表相同)</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.NPOIHelper.CreateCellsWithLength(NPOI.XSSF.UserModel.XSSFRow,System.Int32,NPOI.XSSF.UserModel.XSSFCellStyle)">
            <summary>
            按指定长度创建列并带入样式
            </summary>
            <param name="hssfrow"></param>
            <param name="len"></param>
            <param name="cellstyle"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.NPOIHelper.StreamToTable(System.IO.Stream,System.String)">
            <summary>
            流转DataTable  
            带有日期和时间型的栏位，将会被截取，
            </summary>
            <param name="stream"></param>
            <param name="filetype"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.NPOIHelper.StreamToModel``1(System.IO.Stream,System.String)">
            <summary>
            流转Model
            </summary>
            <param name="stream"></param>
            <param name="filetype"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.NPOIHelper.StreamToModel(System.IO.Stream,System.String,System.String)">
            <summary>
            流转Model
            </summary>
            <param name="stream"></param>
            <param name="filetype"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.NPOIHelper.GetPropertyByType``1(System.Boolean)">
            <summary>
            获得Excel列名
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.ObjectReplaceHtmlHelper">
            <summary>
            用对象属性及属性值替换预设字符串
            主要应用于模板打印，导出
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.ObjectReplaceHtmlHelper.ObjectReplaceString(System.Object,System.String,System.String)">
            <summary>
            用实体属性替换相关的字符串，主要应用于打印和导出
            方法将日期时间型属性值截取为日期型，格式“YYYY-MM-DD”，
            将布尔型属性值调整为是或否
            </summary>
            <param name="objInfo">实体对象</param>
            <param name="strReplace">要替换的原字符串</param>
            <param name="prefix">变量前缀</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.RuntimeHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.RuntimeHelper.GetAllAssemblies">
            <summary>
            获取项目程序集，排除所有的系统程序集(Microsoft.***、System.***等)、Nuget下载包
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.RuntimeHelper.GetAllYuebonAssemblies">
            <summary>
            获取项目程序集，排除所有的系统程序集(Microsoft.***、System.***等)、Nuget下载包和SunnyMES.Commons.dll
            获取所有关于Yuebon的程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.RuntimeHelper.GetAssembly(System.String)">
            <summary>
            
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.RuntimeHelper.GetAllTypes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.RuntimeHelper.GetTypesByAssembly(System.String)">
            <summary>
            
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.RuntimeHelper.GetImplementType(System.String,System.Type)">
            <summary>
            获取实现类
            </summary>
            <param name="typeName"></param>
            <param name="baseInterfaceType"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.SessionHelper">
            <summary>
            Session帮助类，可在非controler中读取或保存session
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Helpers.SessionHelper.HttpHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.SessionHelper.SetSession(System.String,System.Object)">
            <summary>
            设置 Session
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.SessionHelper.GetSession``1(System.String)">
            <summary>
            获取 Session
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.SessionHelper.GetString(System.String)">
            <summary>
            获取 Session
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.SignHelper">
            <summary>
            签名验证自定义类
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.SignHelper.CheckSign(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            全局过滤器验证签名
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.SignHelper.GetQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            get请求查询参数， url上直接接参数时,通过此方法获取
            </summary>
            <param name="form">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.SignHelper.Validate(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            签名验证
            </summary>
            <param name="timeStamp">时间戳</param>
            <param name="nonce">随机字符串</param>
            <param name="appSecret">客户端应用密钥</param>
            <param name="data">接口参数内容</param>
            <param name="signature">当前请求内容的数字签名</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.SignHelper.VerifyAppId(System.String)">
            <summary>
            验证appId是否被允许
            </summary>
            <param name="appId"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.SqlSugarHelper">
            <summary>
            SqlSugarHelper-单例
            ① 再外面验证是否是单例：SqlSugarHelper.Db.HasCode();  // 只要看这个hascode在服务启动后都一个那么说明成功了
            ② 使用示例：继承、调用静态方法
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Helpers.SqlSugarHelper.Db">
            <summary>
            单例-SqlSugarScope（官方推荐使用这种单例）
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Helpers.SqlSugarHelper.Db2">
            <summary>
            单例-SqlSugarClient
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.UpperFirstCaseNamingPolicy">
            <summary>
            首字母大写
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.UpperFirstCaseNamingPolicy.ConvertName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Helpers.XmlConverter">
            <summary>
            XML文件与对象相互转化操作
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.XmlConverter.Serialize``1(``0,System.String)">
            <summary>
            将对象转换为xml格式
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="xmlFilePath">xml文件路径</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Helpers.XmlConverter.Deserialize``1(System.String)">
            <summary>
            将xml格式转为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xmlFilePath">xml文件路径</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.IoC.IoCContainer">
             <summary>
            IOC 容器
             </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:SunnyMES.Commons.IoC.IoCContainer.Resolve``1" -->
        <member name="T:SunnyMES.Commons.Json.JsonHelper">
            <summary>
            JSON序列化、反序列化扩展类。
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Json.JsonHelper.ToJson(System.Object)">
            <summary>
            对象序列化成JSON字符串。
            </summary>
            <param name="obj">序列化对象</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Json.JsonHelper.ToObject``1(System.String)">
            <summary>
            JSON字符串序列化成对象。
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="json">JSON字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Json.JsonHelper.ToList``1(System.String)">
            <summary>
            JSON字符串序列化成集合。
            </summary>
            <typeparam name="T">集合类型</typeparam>
            <param name="json">JSON字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Json.JsonHelper.ToTable(System.String)">
            <summary>
            JSON字符串序列化成DataTable。
            </summary>
            <param name="json">JSON字符串</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Linq.EnumerableExtentions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="process"></param>
        </member>
        <member name="T:SunnyMES.Commons.Log.DbLogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.DbLogType.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.DbLogType.Login">
            <summary>
            登录
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.DbLogType.Exit">
            <summary>
            退出
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.DbLogType.Visit">
            <summary>
            访问
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.DbLogType.Create">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.DbLogType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.DbLogType.Update">
            <summary>
            修改
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.DbLogType.Submit">
            <summary>
            提交
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.DbLogType.Exception">
            <summary>
            异常
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.DbLogType.DeleteSoft">
            <summary>
            软删除
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.DbLogType.SQL">
            <summary>
            软删除
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Log.Log4NetHelper">
            <summary>
            log4net封装类
            *********************************使用说明**********************************
            1.首先将配置文件(log4net.config或App.config)放置在程序运行目录
            2.调用SetConfig方法，并传入配置文件的全路径
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Log.Log4NetHelper._repository">
            <summary>
             log4net 仓储库
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Log.Log4NetHelper.SetConfig(log4net.Repository.ILoggerRepository,System.String)">
            <summary>
            读取配置文件，并使其生效。如果未找到配置文件，则抛出异常
            </summary>
            <param name="repository"></param>
            <param name="configFilePath">配置文件全路径</param>
        </member>
        <member name="M:SunnyMES.Commons.Log.Log4NetHelper.GetLogger(System.String)">
            <summary>
            获取记录器
            </summary>
            <param name="source">soruce</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Log.Log4NetHelper.Debug(System.String)">
            <summary>
            调试信息日志
            </summary>
            <param name="msg">日志信息</param>
        </member>
        <member name="M:SunnyMES.Commons.Log.Log4NetHelper.Error(System.String)">
            <summary>
            错误信息日志
            </summary>
            <param name="msg">日志信息</param>
        </member>
        <member name="M:SunnyMES.Commons.Log.Log4NetHelper.Error(System.String,System.Exception)">
            <summary>
            异常错误信息日志
            </summary>
            <param name="throwMsg">异常抛出信息</param>
            <param name="ex">异常信息</param>
        </member>
        <member name="M:SunnyMES.Commons.Log.Log4NetHelper.Error(System.Type,System.Object,System.Exception)">
            <summary>
            异常错误信息
            </summary>
            <param name="source">source</param>
            <param name="throwMsg">异常抛出信息</param>
            <param name="ex">异常信息</param>
        </member>
        <member name="M:SunnyMES.Commons.Log.Log4NetHelper.Info(System.String)">
            <summary>
            关键信息日志
            </summary>
            <param name="msg">日志信息</param>
        </member>
        <member name="M:SunnyMES.Commons.Log.Log4NetHelper.Warn(System.String)">
            <summary>
            警告信息日志
            </summary>
            <param name="msg">日志信息</param>
        </member>
        <member name="M:SunnyMES.Commons.Log.Log4NetHelper.Fatal(System.String)">
            <summary>
            失败信息日志
            </summary>
            <param name="msg">日志信息</param>
        </member>
        <member name="M:SunnyMES.Commons.Log.Log4NetHelper.Info(System.String,System.String)">
            <summary>
            关键信息日志
            </summary>
            <param name="path">文件路径</param>
            <param name="msg">日志信息</param>
        </member>
        <member name="M:SunnyMES.Commons.Log.MesLogHelper.LogEor(System.String,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="memberName"></param>
            <param name="sourceFilePath"></param>
            <param name="sourceLineNumber"></param>
        </member>
        <member name="T:SunnyMES.Commons.Log.SysConfigLogHelper">
            <summary>
            SysConfigLogHelper
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Log.SysConfigLogHelper.WriteLog(SunnyMES.Commons.Core.PublicFun.Model.SysConfigLogDIO)">
            <summary>
            WriteLog
            </summary>
            <param name="MesLogContext"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Mapping.ColumnAttributeTypeMapper`1">
            <summary>
            Uses the Name value of the <see cref="T:SunnyMES.Commons.Mapping.ColumnAttribute"/> specified to determine
            the association between the name of the column in the query results and the member to
            which it will be extracted. If no column mapping is present all members are mapped as
            usual.
            </summary>
            <typeparam name="T">The type of the object that this association between the mapper applies to.</typeparam>
        </member>
        <member name="T:SunnyMES.Commons.Mapping.MapperExtensions">
            <summary>
            对象映射扩展操作
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Mapping.MapperExtensions.SetMapper(AutoMapper.IMapper)">
            <summary>
            设置对象映射执行者
            </summary>
            <param name="mapper">映射执行者</param>
        </member>
        <member name="M:SunnyMES.Commons.Mapping.MapperExtensions.MapTo``1(System.Object)">
            <summary>
            将对象映射为指定类型
            </summary>
            <typeparam name="TTarget">要映射的目标类型</typeparam>
            <param name="source">源对象</param>
            <returns>目标类型的对象</returns>
        </member>
        <member name="M:SunnyMES.Commons.Mapping.MapperExtensions.MapTo``2(``0,``1)">
            <summary>
            使用源类型的对象更新目标类型的对象
            </summary>
            <typeparam name="TSource">源类型</typeparam>
            <typeparam name="TTarget">目标类型</typeparam>
            <param name="source">源对象</param>
            <param name="target">待更新的目标对象</param>
            <returns>更新后的目标类型对象</returns>
        </member>
        <member name="M:SunnyMES.Commons.Mapping.MapperExtensions.ToOutput``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``1,System.Object}}[])">
            <summary>
            将数据源映射为指定<typeparamref name="TOutputDto"/>的集合
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TOutputDto"></typeparam>
            <param name="source"></param>
            <param name="membersToExpand"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Mapping.MapperExtensions.MapTo``1(System.Collections.IEnumerable)">
            <summary>
            集合到集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Mapping.MapperExtensions.CheckMapper">
            <summary>
            验证映射执行者是否为空
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Net.IpAddressRange">
            <summary>
            IP v4 and v6 range helper by jsakamoto
            Fork from https://github.com/jsakamoto/ipaddressrange
            </summary>
            <example>
            "192.168.0.0/24" 
            "fe80::/10" 
            "192.168.0.0/255.255.255.0" 
            "192.168.0.0-192.168.0.255"
            </example>
        </member>
        <member name="T:SunnyMES.Commons.Net.IpAddressUtil">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Net.IpAddressUtil.ContainsIp(System.String,System.String)">
            <summary>
            Ip地址段是否包含另外一个IP地址
            </summary>
            <param name="rule"></param>
            <param name="clientIp"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Net.IpAddressUtil.ContainsIp(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Ip地址集合是否包含另外一个IP地址
            </summary>
            <param name="ipRules">Ip地址集合List</param>
            <param name="clientIp"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Net.IpAddressUtil.ContainsIp(System.Collections.Generic.List{System.String},System.String,System.String@)">
            <summary>
            Ip地址集合是否包含另外一个IP地址
            </summary>
            <param name="ipRules"></param>
            <param name="clientIp"></param>
            <param name="rule"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Net.IpAddressUtil.ParseIp(System.String)">
            <summary>
            
            </summary>
            <param name="ipAddress"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Net.IpAddressUtil.IsIP(System.String)">
            <summary>
            是否为ip
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Net.IpAddressUtil.GetCityByIp(System.String)">
            <summary>
            根据腾讯地图接口查询IP所属地区
            </summary>
            <param name="strIP"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Net.TencentIp.TencentIpResult">
            <summary>
            通过终端设备IP地址获取其当前所在地理位置，精确到市级，常用于显示当地城市天气预报、初始化用户城市等非精确定位场景。
            响应结果
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.TencentIpResult.status">
            <summary>
            状态状态码，
            0为正常,
            310请求参数信息有误，
            311Key格式错误,
            306请求有护持信息请检查字符串,
            110请求来源未被授权
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.TencentIpResult.message">
            <summary>
            对status的描述
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.TencentIpResult.result">
            <summary>
            IP定位结果
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Net.TencentIp.IpResult">
            <summary>
            IP定位结果
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.IpResult.ip">
            <summary>
            用于定位的IP地址
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.IpResult.location">
            <summary>
            定位坐标
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.IpResult.ad_info">
            <summary>
            定位行政区划信息
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Net.TencentIp.Location">
            <summary>
            定位坐标
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.Location.lat">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.Location.lng">
            <summary>
            经度
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Net.TencentIp.Adinfo">
            <summary>
            定位行政区划信息
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.Adinfo.nation">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.Adinfo.province">
            <summary>
            省
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.Adinfo.city">
            <summary>
            市
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.Adinfo.district">
            <summary>
            区
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Net.TencentIp.Adinfo.adcode">
            <summary>
            行政区划代码
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Options.AllowCacheApp">
            <summary>
            缓存中可用的应用
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AllowCacheApp.Id">
            <summary>
            设置或获取 ID
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AllowCacheApp.AppId">
            <summary>
            设置或获取 应用Id
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AllowCacheApp.AppSecret">
            <summary>
            设置或获取 应用密钥
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AllowCacheApp.EncodingAESKey">
            <summary>
            设置或获取 消息加密密钥
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AllowCacheApp.RequestUrl">
            <summary>
            设置或获取 请求url
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AllowCacheApp.Token">
            <summary>
            设置或获取 token
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AllowCacheApp.IsOpenAEKey">
            <summary>
            设置或获取  是否开启消息加解密
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Options.AppSetting">
            <summary>
            应用设置实体类
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.SoftName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.SoftSummary">
            <summary>
            系统简介
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.WebUrl">
            <summary>
            访问域名
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.SysLogo">
            <summary>
            Logo
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Telphone">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.ICPCode">
            <summary>
            ICP备案号
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.PublicSecurityCode">
            <summary>
            公安备案号
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.ShareTitle">
            <summary>
            分享标题
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.ShareWeChatImage">
            <summary>
            微信公众号分享图片
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.ShareWxAppletImage">
            <summary>
            微信小程序分享图片
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.ShareBackgroundImage">
            <summary>
            微信推广二维码背景图片
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Staticstatus">
            <summary>
            URL重写开关
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Staticextension">
            <summary>
            静态URL后缀
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Memberstatus">
            <summary>
            开启会员功能
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Webstatus">
            <summary>
            是否开启网站
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Webclosereason">
            <summary>
            网站关闭原因
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Webcountcode">
            <summary>
            网站统计代码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Smsapiurl">
            <summary>
            短信AP地址
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Smsusername">
            <summary>
            平台登录账户或Appkey
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Smspassword">
            <summary>
            平台通讯密钥或Appsecret
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.SmsSignName">
            <summary>
            短信签名
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Emailsmtp">
            <summary>
            SMTP服务器
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Emailssl">
            <summary>
            SSL加密连接
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Emailport">
            <summary>
            SMTP端口
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Emailfrom">
            <summary>
            发件人地址
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Emailusername">
            <summary>
            邮箱账号
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Emailpassword">
            <summary>
            邮箱密码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Emailnickname">
            <summary>
            发件人昵称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Fileserver">
            <summary>
            文件服务器
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.LocalPath">
            <summary>
            本地文件存储物理物理路径
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Osssecretid">
            <summary>
            阿里云KeyId
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Osssecretkey">
            <summary>
            阿里云SecretKey
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Ossbucket">
            <summary>
            阿里云Bucket
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Ossendpoint">
            <summary>
            阿里云EndPoint
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Ossdomain">
            <summary>
            阿里云绑定域名
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Filepath">
            <summary>
            文件上传目录
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Filesave">
            <summary>
            文件保存方式
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Fileremote">
            <summary>
            编辑器图片
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Fileextension">
            <summary>
            文件上传类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Videoextension">
            <summary>
            视频上传类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Attachsize">
            <summary>
            附件上传大小
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Videosize">
            <summary>
            视频上传大小
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Imgsize">
            <summary>
            图片上传大小
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Imgmaxheight">
            <summary>
            图片最大尺寸 高度
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Imgmaxwidth">
            <summary>
            图片最大尺寸 宽度
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Thumbnailheight">
            <summary>
            缩略图生成尺寸 高度
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Thumbnailwidth">
            <summary>
            缩略图生成尺寸 宽度
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Thumbnailmode">
            <summary>
            缩略图生成方式
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Watermarktype">
            <summary>
            图片水印类型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Watermarkposition">
            <summary>
            图片水印位置
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Watermarkimgquality">
            <summary>
            图片生成质量
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Watermarkpic">
            <summary>
            图片水印文件
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Watermarktransparency">
            <summary>
            水印透明度
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Watermarktext">
            <summary>
            水印文字
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Watermarkfont">
            <summary>
            文字字体格式
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.AppSetting.Watermarkfontsize">
            <summary>
            文字字体大小
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Options.AssembleTypeConsts">
            <summary>
            
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Options.AssembleTypeConsts.Package">
            <summary>
            
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Options.AssembleTypeConsts.ReferenceAssembly">
            <summary>
            
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Options.AssembleTypeConsts.Project">
            <summary>
            
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Options.CodeGenerateOption">
            <summary>
            代码生成器配置
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.CodeGenerateOption.BaseNamespace">
            <summary>
            项目命名空间
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.CodeGenerateOption.ModelsNamespace">
            <summary>
            数据实体命名空间
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.CodeGenerateOption.DtosNamespace">
            <summary>
            输入输出数据实体名称空间
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.CodeGenerateOption.IRepositoriesNamespace">
            <summary>
            仓储接口命名空间
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.CodeGenerateOption.RepositoriesNamespace">
            <summary>
            仓储实现名称空间
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.CodeGenerateOption.IServicsNamespace">
            <summary>
            服务接口命名空间
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.CodeGenerateOption.ServicesNamespace">
            <summary>
            服务接口实现命名空间
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.CodeGenerateOption.ApiControllerNamespace">
            <summary>
            Api控制器命名空间
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.CodeGenerateOption.ReplaceTableNameStr">
            <summary>
            去掉的表头字符
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.CodeGenerateOption.TableList">
            <summary>
            要生数据的表，用“，”分割
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Options.DbContextOption">
            <summary>
            数据库上下文配置
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.DbContextOption.dbConfigName">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.DbContextOption.ModelAssemblyName">
            <summary>
            实体程序集名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.DbContextOption.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Options.DbContextOption.IsOutputSql">
            <summary>
            是否输出Sql日志
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Options.JwtOption">
            <summary>
            JsonWebToken配置模型。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.JwtOption.Issuer">
            <summary>
            签发者。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.JwtOption.Audience">
            <summary>
            收发者。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.JwtOption.Secret">
            <summary>
            密钥。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.JwtOption.Expiration">
            <summary>
            Token有效期（单位：分钟）。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Options.JwtOption.refreshJwtTime">
            <summary>
            Token有效刷新时间（单位：分钟）。
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.UIConstants">
            <summary>
            常用软件字符串
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.UIConstants.ApplicationExpiredDate">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.UIConstants.SoftwareVersion">
            <summary>
            软件版本
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.UIConstants.SoftwareProductName">
            <summary>
            软件产品名称
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.UIConstants.SoftwareProbationDay">
            <summary>
            软件的试用期
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.UIConstants.IsolatedStorageDirectoryName">
            <summary>
            独立存储目录名称
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.UIConstants.IsolatedStorageEncryptKey">
            <summary>
            独立存储加密钥
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.UIConstants.PublicKey">
            <summary>
            注册加密公钥
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.UIConstants.CopyRight">
            <summary>
            版权信息
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.UIConstants.WebRegisterURL">
            <summary>
            Web验证地址
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.UIConstants.SetValue(System.String,System.String,System.String,System.String)">
            <summary>
            设置参数值
            </summary>
            <param name="expiredDate">过期时间</param>
            <param name="version">软件版本</param>
            <param name="name">软件名称</param>
            <param name="publicKey">公钥字符串</param>
        </member>
        <member name="P:SunnyMES.Commons.Page.PageCustomInfo.Sortfield">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Page.PageCustomInfo.IsAsc">
            <summary>
            是否是升序
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Pages.PageInfoChanged">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="T:SunnyMES.Commons.Pages.PagerInfo">
            <summary>
            分页实体
            </summary>
        </member>
        <member name="E:SunnyMES.Commons.Pages.PagerInfo.OnPageInfoChanged">
            <summary>
            页面选择事件
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Pages.PagerInfo.currentPageIndex">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Pages.PagerInfo.pageSize">
            <summary>
            每页显示的记录
            </summary>
        </member>
        <member name="F:SunnyMES.Commons.Pages.PagerInfo.recordCount">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerInfo.CurrentPageIndex">
            <summary>
            获取或设置当前页码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerInfo.PageSize">
            <summary>
            获取或设置每页显示的记录
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerInfo.RecordCount">
            <summary>
            获取或设置记录总数
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Pages.PagerCustomHelper">
            <summary> 
            根据各种不同数据库生成不同分页语句的辅助类 PagerHelper
            </summary> 
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerCustomHelper.TableName">
            <summary>
            待查询表或自定义查询语句
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerCustomHelper.FieldsToReturn">
            <summary>
            需要返回的列
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerCustomHelper.FieldNameToSort">
            <summary>
            排序字段名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerCustomHelper.PageSize">
            <summary>
            页尺寸,就是一页显示多少条记录
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerCustomHelper.PageIndex">
            <summary>
            当前的页码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerCustomHelper.IsDescending">
            <summary>
            是否以降序排列结果
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerCustomHelper.StrWhere">
            <summary>
            检索条件(注意: 不要加 where)
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerCustomHelper.TableOrSqlWrapper">
            <summary>
            表或Sql语句包装属性
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerCustomHelper.#ctor">
            <summary>
            默认构造函数，其他通过属性设置
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerCustomHelper.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            完整的构造函数,可以包含条件,返回记录字段等条件
            </summary>
            <param name="tableName">表名称，可以自定义查询语句</param>
            <param name="fieldsToReturn">需要返回的列</param>
            <param name="fieldNameToSort">排序字段名称</param>
            <param name="pageSize">每页显示数量</param>
            <param name="pageIndex">当前的页码</param>
            <param name="isDescending">是否以降序排列</param>
            <param name="strwhere">检索条件</param>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerCustomHelper.GetOracleSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(Oracle)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerCustomHelper.GetSqlServerSql(System.Boolean,System.Boolean)">
            <summary>
            不依赖于存储过程的分页(SqlServer)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <param name="isSql2012">是否是Sql server2012及低版本，默认为false</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerCustomHelper.GetSqlServerCustomComplexSql(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isSql2012"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerCustomHelper.GetAccessSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(Access)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerCustomHelper.GetMySqlSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(MySql)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerCustomHelper.GetSQLiteSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(SQLite)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerCustomHelper.GetPagingSql(System.Boolean,SunnyMES.Commons.Enums.DatabaseType)">
            <summary>
            获取对应数据库的分页语句（指定数据库类型）
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <param name="dbType">数据库类型枚举</param>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerCustomHelper.GetDataBaseType(System.String)">
            <summary>
            数据库类型
            </summary>
            <param name="databaseType"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Pages.PageResult`1">
            <summary>
            保存分页请求的结果。
            </summary>
            <typeparam name="T">返回结果集中的POCO类型</typeparam>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PageResult`1.CurrentPage">
            <summary>
            当前页码。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PageResult`1.TotalPages">
            <summary>
            总页码数。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PageResult`1.TotalItems">
            <summary>
            记录总数。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PageResult`1.ItemsPerPage">
            <summary>
            每页数量。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PageResult`1.Items">
            <summary>
            当前结果集。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PageResult`1.Context">
            <summary>
            自定义用户属性。
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Pages.PagerHelper">
            <summary> 
            根据各种不同数据库生成不同分页语句的辅助类 PagerHelper
            </summary> 
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelper.TableName">
            <summary>
            待查询表或自定义查询语句
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelper.FieldsToReturn">
            <summary>
            需要返回的列
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelper.FieldNameToSort">
            <summary>
            排序字段名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelper.PageSize">
            <summary>
            页尺寸,就是一页显示多少条记录
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelper.PageIndex">
            <summary>
            当前的页码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelper.IsDescending">
            <summary>
            是否以降序排列结果
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelper.StrWhere">
            <summary>
            检索条件(注意: 不要加 where)
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelper.TableOrSqlWrapper">
            <summary>
            表或Sql语句包装属性
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelper.#ctor">
            <summary>
            默认构造函数，其他通过属性设置
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelper.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            完整的构造函数,可以包含条件,返回记录字段等条件
            </summary>
            <param name="tableName">表名称，可以自定义查询语句</param>
            <param name="fieldsToReturn">需要返回的列</param>
            <param name="fieldNameToSort">排序字段名称</param>
            <param name="pageSize">每页显示数量</param>
            <param name="pageIndex">当前的页码</param>
            <param name="isDescending">是否以降序排列</param>
            <param name="strwhere">检索条件</param>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelper.GetOracleSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(Oracle)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelper.GetSqlServerSql(System.Boolean,System.Boolean)">
            <summary>
            不依赖于存储过程的分页(SqlServer)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <param name="isSql2012">是否是Sql server2012及低版本，默认为false</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelper.GetAccessSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(Access)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelper.GetMySqlSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(MySql)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelper.GetSQLiteSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(SQLite)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelper.GetPagingSql(System.Boolean,SunnyMES.Commons.Enums.DatabaseType)">
            <summary>
            获取对应数据库的分页语句（指定数据库类型）
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <param name="dbType">数据库类型枚举</param>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelper.GetDataBaseType(System.String)">
            <summary>
            数据库类型
            </summary>
            <param name="databaseType"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Pages.PagerHelperGeneric">
            <summary> 
            根据各种不同数据库生成不同分页语句的辅助类 PagerHelperGeneric
            </summary> 
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelperGeneric.TableName">
            <summary>
            待查询表或自定义查询语句
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelperGeneric.FieldsToReturn">
            <summary>
            需要返回的列
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelperGeneric.FieldNameToSort">
            <summary>
            排序字段名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelperGeneric.PageSize">
            <summary>
            页尺寸,就是一页显示多少条记录
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelperGeneric.PageIndex">
            <summary>
            当前的页码
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelperGeneric.IsDescending">
            <summary>
            是否以降序排列结果
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelperGeneric.StrWhere">
            <summary>
            检索条件(注意: 不要加 where)
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Pages.PagerHelperGeneric.TableOrSqlWrapper">
            <summary>
            表或Sql语句包装属性
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelperGeneric.#ctor">
            <summary>
            默认构造函数，其他通过属性设置
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelperGeneric.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            完整的构造函数,可以包含条件,返回记录字段等条件
            </summary>
            <param name="tableName">表名称，可以自定义查询语句</param>
            <param name="fieldsToReturn">需要返回的列</param>
            <param name="fieldNameToSort">排序字段名称</param>
            <param name="pageSize">每页显示数量</param>
            <param name="pageIndex">当前的页码</param>
            <param name="isDescending">是否以降序排列</param>
            <param name="strwhere">检索条件</param>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelperGeneric.GetOracleSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(Oracle)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelperGeneric.GetSqlServerSql(System.Boolean,System.Boolean)">
            <summary>
            不依赖于存储过程的分页(SqlServer)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <param name="isSql2012">是否是Sql server2012及低版本，默认为false</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelperGeneric.GetAccessSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(Access)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelperGeneric.GetMySqlSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(MySql)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelperGeneric.GetSQLiteSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(SQLite)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelperGeneric.GetPagingSql(System.Boolean,SunnyMES.Commons.Enums.DatabaseType)">
            <summary>
            获取对应数据库的分页语句（指定数据库类型）
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <param name="dbType">数据库类型枚举</param>
        </member>
        <member name="M:SunnyMES.Commons.Pages.PagerHelperGeneric.GetDataBaseType(System.String)">
            <summary>
            数据库类型
            </summary>
            <param name="databaseType"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性，对
              使用此强类型资源类的所有资源查找执行重写。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.AnyRadixConvert_CharacterIsNotValid">
            <summary>
              查找类似 参数中的字符\&quot;{0}\&quot;不是 {1} 进制数的有效字符。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.AnyRadixConvert_Overflow">
            <summary>
              查找类似 0 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Caching_CacheNotInitialized">
            <summary>
              查找类似 缓存功能尚未初始化，未找到可用的 ICacheProvider 实现。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ConfigFile_ItemKeyDefineRepeated">
            <summary>
              查找类似 标识为“{0}”的项重复定义 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ConfigFile_NameToTypeIsNull">
            <summary>
              查找类似 名称为“{0}”的类型不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Context_BuildservicesFirst">
            <summary>
              查找类似 请先初始化依赖注入服务，再使用OSharpContext.IocRegisterservices属性 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.DbContextInitializerConfig_InitializerNotExists">
            <summary>
              查找类似 上下文初始化类型“{0}”不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Filter_GroupOperateError">
            <summary>
              查找类似 查询条件组中的操作类型错误，只能为And或者Or。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Filter_RuleFieldInTypeNotFound">
            <summary>
              查找类似 指定的属性“{0}”在类型“{1}”中不存在。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Ioc_CannotResolveservice">
            <summary>
              查找类似 无法解析类型“{0}”的构造函数中类型为“{1}”的参数 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Ioc_FrameworkNotInitialized">
            <summary>
              查找类似 OSharp框架尚未初始化，请先初始化 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Ioc_ImplementationTypeNotFound">
            <summary>
              查找类似 类型“{0}”的实现类型无法找到 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Ioc_NoConstructorMatch">
            <summary>
              查找类似 类型“{0}”中找不到合适参数的构造函数 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Ioc_TryAddIndistinguishableTypeToEnumerable">
            <summary>
              查找类似 实现类型不能为“{0}”，因为该类型与注册为“{1}”的其他类型无法区分 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.IocInitializerBase_TypeNotIRepositoryType">
            <summary>
              查找类似 类型“{0}”不是仓储接口“IRepository&lt;,&gt;”的派生类。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.IocInitializerBase_TypeNotIUnitOfWorkType">
            <summary>
              查找类似 类型“{0}”不是操作单元“IUnitOfWork”的派生类。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Logging_CreateLogInstanceReturnNull">
            <summary>
              查找类似 创建名称为“{0}”的日志实例时“{1}”返回空实例。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Map_MapperIsNull">
            <summary>
              查找类似 MapperExtensions.Mapper不能为空，请先设置值 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.Mef_HttpContextItems_NotFoundRequestContainer">
            <summary>
              查找类似 当前Http上下文中不存在Request有效范围的Mef部件容器。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ObjectExtensions_PropertyNameNotExistsInType">
            <summary>
              查找类似 指定对象中不存在名称为“{0}”的属性。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ObjectExtensions_PropertyNameNotFixedType">
            <summary>
              查找类似 指定名称“{0}”的属性类型不是“{1}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_Between">
            <summary>
              查找类似 参数“{0}”的值必须在“{1}”与“{2}”之间。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_BetweenNotEqual">
            <summary>
              查找类似 参数“{0}”的值必须在“{1}”与“{2}”之间，且不能等于“{3}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_DirectoryNotExists">
            <summary>
              查找类似 指定的目录路径“{0}”不存在。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_FileNotExists">
            <summary>
              查找类似 指定的文件路径“{0}”不存在。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_NotContainsNull_Collection">
            <summary>
              查找类似 集合“{0}”中不能包含null的项 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_NotEmpty_Guid">
            <summary>
              查找类似 参数“{0}”的值不能为Guid.Empty 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_NotGreaterThan">
            <summary>
              查找类似 参数“{0}”的值必须大于“{1}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_NotGreaterThanOrEqual">
            <summary>
              查找类似 参数“{0}”的值必须大于或等于“{1}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_NotLessThan">
            <summary>
              查找类似 参数“{0}”的值必须小于“{1}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_NotLessThanOrEqual">
            <summary>
              查找类似 参数“{0}”的值必须小于或等于“{1}”。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_NotNull">
            <summary>
              查找类似 参数“{0}”不能为空引用。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_NotNullOrEmpty_Collection">
            <summary>
              查找类似 参数“{0}”不能为空引用或空集合。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.ParameterCheck_NotNullOrEmpty_String">
            <summary>
              查找类似 参数“{0}”不能为空引用或空字符串。 的本地化字符串。
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Properties.Resources.QueryCacheExtensions_TypeNotEntityType">
            <summary>
              查找类似 类型“{0}”不是实体类型 的本地化字符串。
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Tree.JsTreeModel">
            <summary>
            JsTree 数据模型实体
            {
                id          : "string" // required
                parent      : "string" // required
                text        : "string" // node text
                icon        : "string" // string for custom
                state       : {
                    opened    : boolean  // is the node open
                    disabled  : boolean  // is the node disabled
                    selected  : boolean  // is the node selected
                },
                li_attr     : {}  // attributes for the generated LI node
                a_attr      : {}  // attributes for the generated A node
            }
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Tree.TreeSelect">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Tree.TreeSelect.TreeSelectJson(System.Collections.Generic.List{SunnyMES.Commons.Tree.TreeSelectModel})">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.Tree.TreeSelect.TreeSelectJson(System.Collections.Generic.List{SunnyMES.Commons.Tree.TreeSelectModel},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="parentId"></param>
            <param name="blank"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Tree.TreeSelectModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeSelectModel.id">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeSelectModel.text">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeSelectModel.parentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeSelectModel.parentId1">
            <summary>
            
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeSelectModel.data">
            <summary>
            
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Tree.TreeView">
            <summary>
            
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Tree.TreeView.TreeViewJson(System.Collections.Generic.List{SunnyMES.Commons.Tree.TreeViewModel},System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.Tree.TreeViewModel">
            <summary>
            树形视图模型
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Tree.TreeViewModel.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Tree.TreeViewModel.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="nodeId">j节点Id</param>
            <param name="pId">父节点Id</param>
        </member>
        <member name="M:SunnyMES.Commons.Tree.TreeViewModel.#ctor(System.String,System.String,System.String,System.String,System.String)">
            生成一个节点
            @param nodeId
            @param pId
            @param text
            @param icon
            @param href
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewModel.nodeId">
            <summary>
            树的节点Id，区别于数据库中保存的数据Id
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewModel.pid">
            <summary>
            树的父节点Id
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewModel.text">
            <summary>
            节点名称
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewModel.icon">
            <summary>
            节点图标
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewModel.href">
            <summary>
            点击节点触发的链接
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewModel.nodes">
            <summary>
            子节点
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewModel.tags">
            <summary>
            节点标签
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewModel.state">
            <summary>
            节点状态
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Tree.TreeViewSateModel">
            <summary>
            树形视图节点选择状态
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewSateModel.checked">
            <summary>
            选中
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewSateModel.disabled">
            <summary>
            显示或隐藏
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewSateModel.expanded">
            <summary>
            展开
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.TreeViewSateModel.selected">
            <summary>
            选中
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Tree.VueRouterModel">
            <summary>
            Vuex菜单模型
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.VueRouterModel.name">
            <summary>
            设定路由的名字，一定要填写不然使用keep-alive时会出现各种问题
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.VueRouterModel.path">
            <summary>
            路由地址，对应当前路由的路径，总是解析为绝对路径
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.VueRouterModel.hidden">
            <summary>
            是否隐藏路由，当设置 true 的时候该路由不会再侧边栏出现
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.VueRouterModel.component">
            <summary>
            命名视图组件,组件地址
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.VueRouterModel.redirect">
            <summary>
            重定向地址，当设置 noRedirect 的时候该路由在面包屑导航中不可被点击
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.VueRouterModel.alwaysShow">
            <summary>
            当你一个路由下面的 children 声明的路由大于1个时，自动会变成嵌套的模式--如组件页面
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.VueRouterModel.meta">
            <summary>
            在根路由设置权限，这样它下面所以的子路由都继承了这个权限
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.VueRouterModel.children">
            <summary>
            子路由,子菜单
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.Tree.Meta">
            <summary>
            路由元信息模型
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.Tree.Meta.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="title"></param>
            <param name="icon"></param>
            <param name="noCache"></param>
            <param name="IsShow"></param>        
            <param name="IsFrame"></param>
            <param name="IsPublic"></param>
            <param name="EnabledMark"></param>
        </member>
        <member name="P:SunnyMES.Commons.Tree.Meta.title">
            <summary>
            设置该路由在侧边栏和面包屑中展示的名字
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.Meta.icon">
            <summary>
            设置该路由的图标
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.Meta.noCache">
            <summary>
            设置为true，则不会被keep-alive缓存
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.Meta.IsShow">
            <summary>
            设置或获取 是否显示
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.Meta.IsFrame">
            <summary>
            设置或获取 是否外链
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.Meta.IsPublic">
            <summary>
            设置或获取  是否公共
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.Meta.EnabledMark">
            <summary>
            设置或获取 状态
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.Tree.Meta.activeMenu">
            <summary>
            当路由设置了该属性，则会高亮相对应的侧边栏。
            这在某些场景非常有用，比如：一个文章的列表页路由为：/article/list
            点击文章进入文章详情页，这时候路由为/article/1，但你想在侧边栏高亮文章列表的路由，就可以进行如下设置
            activeMenu: '/article/list'
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.VerificationCode.Captcha">
            <summary>
            验证码实现
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.VerificationCode.Captcha.GenerateCaptchaImageAsync(System.String,System.Int32,System.Int32)">
            <summary>
            生成验证码图片
            </summary>
            <param name="captchaCode">验证码</param>
            <param name="width">图形宽度，默认为验证码长度x25</param>
            <param name="height">图形高度，默认30px</param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.VerificationCode.Captcha.GenerateRandomCaptchaAsync(System.Int32)">
            <summary>
            生成随机验证码字符
            </summary>
            <param name="codeLength">验证码位数</param>
            <returns></returns>
        </member>
        <member name="T:SunnyMES.Commons.VerificationCode.CaptchaResult">
            <summary>
            验证码返回结果
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.VerificationCode.CaptchaResult.CaptchaCode">
            <summary>
            验证码字符串
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.VerificationCode.CaptchaResult.CaptchaMemoryStream">
            <summary>
            验证码内存流
            </summary>
        </member>
        <member name="P:SunnyMES.Commons.VerificationCode.CaptchaResult.Timestamp">
            <summary>
            验证码生成时间
            </summary>
        </member>
        <member name="T:SunnyMES.Commons.VerificationCode.ICaptcha">
            <summary>
            验证码接口
            </summary>
        </member>
        <member name="M:SunnyMES.Commons.VerificationCode.ICaptcha.GenerateRandomCaptchaAsync(System.Int32)">
            <summary>
            生成随机验证码
            </summary>
            <param name="codeLength"></param>
            <returns></returns>
        </member>
        <member name="M:SunnyMES.Commons.VerificationCode.ICaptcha.GenerateCaptchaImageAsync(System.String,System.Int32,System.Int32)">
            <summary>
            生成验证码图片
            </summary>
            <param name="captchaCode">验证码</param>
            <param name="width">宽为0将根据验证码长度自动匹配合适宽度</param>
            <param name="height">高</param>
            <returns></returns>
        </member>
        <member name="P:SunnyMES.Security.Models.BomPartInfo.PartID">
            <summary>
            料号ID
            </summary>
        </member>
        <member name="P:SunnyMES.Security.Models.BomPartInfo.PartNumber">
            <summary>
            料号
            </summary>
        </member>
        <member name="P:SunnyMES.Security.Models.BomPartInfo.ScanType">
            <summary>
            扫描类型
            </summary>
        </member>
        <member name="P:SunnyMES.Security.Models.BomPartInfo.Pattern">
            <summary>
            正则表达式
            </summary>
        </member>
        <member name="P:SunnyMES.Security.Models.BomPartInfo.FieldName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:SunnyMES.Security.Models.BomPartInfo.Barcode">
            <summary>
            条码
            </summary>
        </member>
        <member name="P:SunnyMES.Security.Models.BomPartInfo.IsMainSn">
            <summary>
            是否是主条码
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.AssemblyTwoInput_SetConfirmPO_Input_Dto.S_DefectID">
            <summary>
            不良代码
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.BoxPackageAuto.BoxPackageAutoInput.S_SN">
            <summary>
            箱码
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.BoxPackageAuto.BoxPackageAutoInput.DataList">
            <summary>
            单个动态项
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.BoxPackageAuto.BoxPackageRemove.InnerSN">
            <summary>
            UPC
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.CarrierLinkMaterialBatch.CarrierLinkMaterialBatch_BN_Input.S_BatchNumber">
            <summary>
            批次号
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.CarrierLinkMaterialBatch.CarrierLinkMaterialBatch_CarrierSN_Input.S_CarrierSN">
            <summary>
            托盘条码
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.MesInputDto.S_PartFamilyTypeID">
            <summary>
            料号组类型Id
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.MesInputDto.S_PartFamilyID">
            <summary>
            料号组Id
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.MesInputDto.S_PartID">
            <summary>
            料号Id
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.MesInputDto.S_POID">
            <summary>
            POID
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.MesInputDto.S_UnitStatus">
            <summary>
            状态ID
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.MesInputDto.S_URL">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.MesInputDto.S_DefectID">
            <summary>
            不良代码编号，多个用逗号隔开
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.MesSnInputDto.S_SN">
            <summary>
            序列号
            </summary>
        </member>
        <member name="T:SunnyMES.Security._2_Dtos.MES.PackageOverStation.PackageOverStation_BoxSn_Input">
            <summary>
            箱码扫描输入实体类型
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.PackageOverStation.PackageOverStation_BoxSn_Input.S_BoxSN">
            <summary>
            中箱条码
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.PackageOverStation.PackageOverStation_BoxSn_Input.IsEntry">
            <summary>
            是否是正常入库
            true:正常入库
            false:退仓
            </summary>
        </member>
        <member name="T:SunnyMES.Security._2_Dtos.MES.PackageOverStation.PackageOverStation_PalletSn_Input">
            <summary>
            栈板扫描输入类型
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.PackageOverStation.PackageOverStation_PalletSn_Input.S_PalletSN">
            <summary>
            栈板条码
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.PackageOverStation.PackageOverStation_PalletSn_Input.IsEntry">
            <summary>
            是否是反入库
            true: 正常入库
            false: 反入库
            </summary>
        </member>
        <member name="T:SunnyMES.Security._2_Dtos.MES.SNLinkBatch.SNLinkBatch_BSN_Input">
            <summary>
            批次号校验输入参数
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.SNLinkBatch.SNLinkBatch_BSN_Input.S_BatchNumber">
            <summary>
            批次号
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.SNLinkBatch.SNLinkBatch_SN_Input.S_BatchNumber">
            <summary>
            批次号
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.SNLinkBatch.SNLinkBatch_SN_Input.S_SN">
            <summary>
            序列号
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.SNLinkUPC.SNLinkUPCInput.S_SN">
            <summary>
            FG序列号
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.SNLinkUPC.SNLinkUPCInput.DataList">
            <summary>
            动态项
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.ToolingLinkTooling.ToolingLinkTooling_NewTooling_Input.S_NewToolingSN">
            <summary>
            新治具条码
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.ToolingLinkTooling.ToolingLinkTooling_OldTooling_Input.S_NewToolingSN">
            <summary>
            新治具条码
            </summary>
        </member>
        <member name="P:SunnyMES.Security._2_Dtos.MES.ToolingLinkTooling.ToolingLinkTooling_OldTooling_Input.S_OldToolingSN">
            <summary>
            旧治具条码
            </summary>
        </member>
        <member name="T:Dapper.Contrib.Extensions.SqlMapperExtensions">
            <summary>
            The Dapper.Contrib extensions for Dapper
            </summary>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.GetAsync``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Returns a single entity by a single id from table "Ts" asynchronously using Task. T must be of interface type. 
            Id must be marked with [Key] attribute.
            Created entity is tracked/intercepted for changes and used by the Update() extension. 
            </summary>
            <typeparam name="T">Interface type to create and populate</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="id">Id of the entity to get, must be marked with [Key] attribute</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <returns>Entity of T</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.GetAllAsync``1(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Returns a list of entities from table "Ts".  
            Id of T must be marked with [Key] attribute.
            Entities created from interfaces are tracked/intercepted for changes and used by the Update() extension
            for optimal performance. 
            </summary>
            <typeparam name="T">Interface or type to create and populate</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <returns>Entity of T</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.InsertAsync``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,System.Nullable{System.Int32},ISqlAdapter)">
            <summary>
            Inserts an entity into table "Ts" asynchronously using Task and returns identity id.
            </summary>
            <typeparam name="T">The type being inserted.</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="entityToInsert">Entity to insert</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <param name="sqlAdapter">The specific ISqlAdapter to use, auto-detected based on connection if null</param>
            <returns>Identity of inserted entity</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.UpdateAsync``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Updates entity in table "Ts" asynchronously using Task, checks if the entity is modified if the entity is tracked by the Get() extension.
            </summary>
            <typeparam name="T">Type to be updated</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="entityToUpdate">Entity to be updated</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <returns>true if updated, false if not found or not modified (tracked entities)</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.DeleteAsync``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Delete entity in table "Ts" asynchronously using Task.
            </summary>
            <typeparam name="T">Type of entity</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="entityToDelete">Entity to delete</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <returns>true if deleted, false if not found</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.DeleteAllAsync``1(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Delete all entities in the table related to the type T asynchronously using Task.
            </summary>
            <typeparam name="T">Type of entity</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <returns>true if deleted, false if none found</returns>
        </member>
        <member name="T:Dapper.Contrib.Extensions.SqlMapperExtensions.IProxy">
            <summary>
            Defined a proxy object with a possibly dirty state.
            </summary>
        </member>
        <member name="P:Dapper.Contrib.Extensions.SqlMapperExtensions.IProxy.IsDirty">
            <summary>
            Whether the object has been changed.
            </summary>
        </member>
        <member name="T:Dapper.Contrib.Extensions.SqlMapperExtensions.ITableNameMapper">
            <summary>
            Defines a table name mapper for getting table names from types.
            </summary>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.ITableNameMapper.GetTableName(System.Type)">
            <summary>
            Gets a table name from a given <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to get a name from.</param>
            <returns>The table name for the given <paramref name="type"/>.</returns>
        </member>
        <member name="T:Dapper.Contrib.Extensions.SqlMapperExtensions.GetDatabaseTypeDelegate">
            <summary>
            The function to get a database type from the given <see cref="T:System.Data.IDbConnection"/>.
            </summary>
            <param name="connection">The connection to get a database type name from.</param>
        </member>
        <member name="T:Dapper.Contrib.Extensions.SqlMapperExtensions.TableNameMapperDelegate">
            <summary>
            The function to get a table name from a given <see cref="T:System.Type"/>
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to get a table name for.</param>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.Get``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Returns a single entity by a single id from table "Ts".  
            Id must be marked with [Key] attribute.
            Entities created from interfaces are tracked/intercepted for changes and used by the Update() extension
            for optimal performance. 
            </summary>
            <typeparam name="T">Interface or type to create and populate</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="id">Id of the entity to get, must be marked with [Key] attribute</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <returns>Entity of T</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.GetAll``1(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Returns a list of entities from table "Ts".
            Id of T must be marked with [Key] attribute.
            Entities created from interfaces are tracked/intercepted for changes and used by the Update() extension
            for optimal performance.
            </summary>
            <typeparam name="T">Interface or type to create and populate</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <returns>Entity of T</returns>
        </member>
        <member name="F:Dapper.Contrib.Extensions.SqlMapperExtensions.TableNameMapper">
            <summary>
            Specify a custom table name mapper based on the POCO type name
            </summary>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.Insert``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Inserts an entity into table "Ts" and returns identity id or number of inserted rows if inserting a list.
            </summary>
            <typeparam name="T">The type to insert.</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="entityToInsert">Entity to insert, can be list of entities</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <returns>Identity of inserted entity, or number of inserted rows if inserting a list</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.Update``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Updates entity in table "Ts", checks if the entity is modified if the entity is tracked by the Get() extension.
            </summary>
            <typeparam name="T">Type to be updated</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="entityToUpdate">Entity to be updated</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <returns>true if updated, false if not found or not modified (tracked entities)</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.Delete``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Delete entity in table "Ts".
            </summary>
            <typeparam name="T">Type of entity</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="entityToDelete">Entity to delete</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <returns>true if deleted, false if not found</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.DeleteAll``1(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Delete all entities in the table related to the type T.
            </summary>
            <typeparam name="T">Type of entity</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="transaction">The transaction to run under, null (the default) if none</param>
            <param name="commandTimeout">Number of seconds before command execution timeout</param>
            <returns>true if deleted, false if none found</returns>
        </member>
        <member name="F:Dapper.Contrib.Extensions.SqlMapperExtensions.GetDatabaseType">
            <summary>
            Specifies a custom callback that detects the database type instead of relying on the default strategy (the name of the connection type object).
            Please note that this callback is global and will be used by all the calls that require a database specific adapter.
            </summary>
        </member>
        <member name="T:Dapper.Contrib.Extensions.TableAttribute">
            <summary>
            Defines the name of a table to use in Dapper.Contrib commands.
            </summary>
        </member>
        <member name="M:Dapper.Contrib.Extensions.TableAttribute.#ctor(System.String)">
            <summary>
            Creates a table mapping to a specific name for Dapper.Contrib commands
            </summary>
            <param name="tableName">The name of this table in the database.</param>
        </member>
        <member name="P:Dapper.Contrib.Extensions.TableAttribute.Name">
            <summary>
            The name of the table in the database
            </summary>
        </member>
        <member name="T:Dapper.Contrib.Extensions.KeyAttribute">
            <summary>
            Specifies that this field is a primary key in the database
            </summary>
        </member>
        <member name="T:Dapper.Contrib.Extensions.ExplicitKeyAttribute">
            <summary>
            Specifies that this field is an explicitly set primary key in the database
            </summary>
        </member>
        <member name="T:Dapper.Contrib.Extensions.WriteAttribute">
            <summary>
            Specifies whether a field is writable in the database.
            </summary>
        </member>
        <member name="M:Dapper.Contrib.Extensions.WriteAttribute.#ctor(System.Boolean)">
            <summary>
            Specifies whether a field is writable in the database.
            </summary>
            <param name="write">Whether a field is writable in the database.</param>
        </member>
        <member name="P:Dapper.Contrib.Extensions.WriteAttribute.Write">
            <summary>
            Whether a field is writable in the database.
            </summary>
        </member>
        <member name="T:Dapper.Contrib.Extensions.ComputedAttribute">
            <summary>
            Specifies that this is a computed column.
            </summary>
        </member>
        <member name="T:ISqlAdapter">
            <summary>
            The interface for all Dapper.Contrib database operations
            Implementing this is each provider's model.
            </summary>
        </member>
        <member name="M:ISqlAdapter.InsertAsync(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:ISqlAdapter.Insert(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:ISqlAdapter.AppendColumnName(System.Text.StringBuilder,System.String)">
            <summary>
            Adds the name of a column.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="M:ISqlAdapter.AppendColumnNameEqualsValue(System.Text.StringBuilder,System.String)">
            <summary>
            Adds a column equality to a parameter.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="T:SqlServerAdapter">
            <summary>
            The SQL Server database adapter.
            </summary>
        </member>
        <member name="M:SqlServerAdapter.InsertAsync(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:SqlServerAdapter.Insert(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:SqlServerAdapter.AppendColumnName(System.Text.StringBuilder,System.String)">
            <summary>
            Adds the name of a column.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="M:SqlServerAdapter.AppendColumnNameEqualsValue(System.Text.StringBuilder,System.String)">
            <summary>
            Adds a column equality to a parameter.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="T:SqlCeServerAdapter">
            <summary>
            The SQL Server Compact Edition database adapter.
            </summary>
        </member>
        <member name="M:SqlCeServerAdapter.InsertAsync(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:SqlCeServerAdapter.Insert(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:SqlCeServerAdapter.AppendColumnName(System.Text.StringBuilder,System.String)">
            <summary>
            Adds the name of a column.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="M:SqlCeServerAdapter.AppendColumnNameEqualsValue(System.Text.StringBuilder,System.String)">
            <summary>
            Adds a column equality to a parameter.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="T:MySqlAdapter">
            <summary>
            The MySQL database adapter.
            </summary>
        </member>
        <member name="M:MySqlAdapter.InsertAsync(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:MySqlAdapter.Insert(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:MySqlAdapter.AppendColumnName(System.Text.StringBuilder,System.String)">
            <summary>
            Adds the name of a column.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="M:MySqlAdapter.AppendColumnNameEqualsValue(System.Text.StringBuilder,System.String)">
            <summary>
            Adds a column equality to a parameter.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="T:PostgresAdapter">
            <summary>
            The Postgres database adapter.
            </summary>
        </member>
        <member name="M:PostgresAdapter.InsertAsync(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:PostgresAdapter.Insert(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:PostgresAdapter.AppendColumnName(System.Text.StringBuilder,System.String)">
            <summary>
            Adds the name of a column.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="M:PostgresAdapter.AppendColumnNameEqualsValue(System.Text.StringBuilder,System.String)">
            <summary>
            Adds a column equality to a parameter.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="T:SQLiteAdapter">
            <summary>
            The SQLite database adapter.
            </summary>
        </member>
        <member name="M:SQLiteAdapter.InsertAsync(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:SQLiteAdapter.Insert(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:SQLiteAdapter.AppendColumnName(System.Text.StringBuilder,System.String)">
            <summary>
            Adds the name of a column.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="M:SQLiteAdapter.AppendColumnNameEqualsValue(System.Text.StringBuilder,System.String)">
            <summary>
            Adds a column equality to a parameter.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="T:FbAdapter">
            <summary>
            The Firebase SQL adapter.
            </summary>
        </member>
        <member name="M:FbAdapter.InsertAsync(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:FbAdapter.Insert(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Object)">
            <summary>
            Inserts <paramref name="entityToInsert"/> into the database, returning the Id of the row created.
            </summary>
            <param name="connection">The connection to use.</param>
            <param name="transaction">The transaction to use.</param>
            <param name="commandTimeout">The command timeout to use.</param>
            <param name="tableName">The table to insert into.</param>
            <param name="columnList">The columns to set with this insert.</param>
            <param name="parameterList">The parameters to set for this insert.</param>
            <param name="keyProperties">The key columns in this table.</param>
            <param name="entityToInsert">The entity to insert.</param>
            <returns>The Id of the row created.</returns>
        </member>
        <member name="M:FbAdapter.AppendColumnName(System.Text.StringBuilder,System.String)">
            <summary>
            Adds the name of a column.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="M:FbAdapter.AppendColumnNameEqualsValue(System.Text.StringBuilder,System.String)">
            <summary>
            Adds a column equality to a parameter.
            </summary>
            <param name="sb">The string builder  to append to.</param>
            <param name="columnName">The column name.</param>
        </member>
        <member name="T:Yitter.IdGenerator.IdGeneratorOptions">
            <summary>
            雪花算法Id生成器配置参数
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IdGeneratorOptions.Method">
            <summary>
            雪花计算方法
            （1-漂移算法|2-传统算法），默认1
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IdGeneratorOptions.BaseTime">
            <summary>
            基础时间（UTC格式）
            不能超过当前系统时间
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IdGeneratorOptions.WorkerId">
            <summary>
            机器码
            必须由外部设定，最大值 2^WorkerIdBitLength-1
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IdGeneratorOptions.WorkerIdBitLength">
            <summary>
            机器码位长
            默认值6，取值范围 [1, 15]（要求：序列数位长+机器码位长不超过22）
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IdGeneratorOptions.SeqBitLength">
            <summary>
            序列数位长
            默认值6，取值范围 [3, 21]（要求：序列数位长+机器码位长不超过22）
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IdGeneratorOptions.MaxSeqNumber">
            <summary>
            最大序列数（含）
            设置范围 [MinSeqNumber, 2^SeqBitLength-1]，默认值0，表示最大序列数取最大值（2^SeqBitLength-1]）
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IdGeneratorOptions.MinSeqNumber">
            <summary>
            最小序列数（含）
            默认值5，取值范围 [5, MaxSeqNumber]，每毫秒的前5个序列数对应编号0-4是保留位，其中1-4是时间回拨相应预留位，0是手工新值预留位
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IdGeneratorOptions.TopOverCostCount">
            <summary>
            最大漂移次数（含），
            默认2000，推荐范围500-10000（与计算能力有关）
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IdGeneratorOptions.DataCenterId">
            <summary>
            数据中心ID（默认0）
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IdGeneratorOptions.DataCenterIdBitLength">
            <summary>
            数据中心ID长度（默认0）
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IdGeneratorOptions.TimestampType">
            <summary>
            时间戳类型（0-毫秒，1-秒），默认0
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.IIdGenerator.GenIdActionAsync">
            <summary>
            生成过程中产生的事件
            </summary>
        </member>
        <member name="M:Yitter.IdGenerator.IIdGenerator.NewLong">
            <summary>
            生成新的long型Id
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yitter.IdGenerator.OverCostActionArg">
            <summary>
            Id生成时回调参数
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.OverCostActionArg.ActionType">
            <summary>
            事件类型
            1-开始，2-结束，8-漂移
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.OverCostActionArg.TimeTick">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.OverCostActionArg.WorkerId">
            <summary>
            机器码
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.OverCostActionArg.OverCostCountInOneTerm">
            <summary>
            漂移计算次数
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.OverCostActionArg.GenCountInOneTerm">
            <summary>
            漂移期间生产ID个数
            </summary>
        </member>
        <member name="P:Yitter.IdGenerator.OverCostActionArg.TermIndex">
            <summary>
            漂移周期
            </summary>
        </member>
        <member name="T:Yitter.IdGenerator.SnowWorkerM1">
            <summary>
            雪花漂移算法
            </summary> 
        </member>
        <member name="F:Yitter.IdGenerator.SnowWorkerM1.BaseTime">
            <summary>
            基础时间
            </summary>
        </member>
        <member name="F:Yitter.IdGenerator.SnowWorkerM1.WorkerId">
            <summary>
            机器码
            </summary>
        </member>
        <member name="F:Yitter.IdGenerator.SnowWorkerM1.WorkerIdBitLength">
            <summary>
            机器码位长
            </summary>
        </member>
        <member name="F:Yitter.IdGenerator.SnowWorkerM1.SeqBitLength">
            <summary>
            自增序列数位长
            </summary>
        </member>
        <member name="F:Yitter.IdGenerator.SnowWorkerM1.MaxSeqNumber">
            <summary>
            最大序列数（含）
            </summary>
        </member>
        <member name="F:Yitter.IdGenerator.SnowWorkerM1.MinSeqNumber">
            <summary>
            最小序列数（含）
            </summary>
        </member>
        <member name="F:Yitter.IdGenerator.SnowWorkerM1.TopOverCostCount">
            <summary>
            最大漂移次数（含）
            </summary>
        </member>
        <member name="T:Yitter.IdGenerator.SnowWorkerM2">
            <summary>
            常规雪花算法
            </summary>
        </member>
        <member name="T:Yitter.IdGenerator.SnowWorkerM3">
            <summary>
            雪花漂移算法（支持数据中心ID和秒级时间戳）
            </summary> 
        </member>
        <member name="F:Yitter.IdGenerator.SnowWorkerM3.DataCenterId">
            <summary>
            数据中心ID（默认0）
            </summary>
        </member>
        <member name="F:Yitter.IdGenerator.SnowWorkerM3.DataCenterIdBitLength">
            <summary>
            数据中心ID长度（默认0）
            </summary>
        </member>
        <member name="F:Yitter.IdGenerator.SnowWorkerM3.TimestampType">
            <summary>
            时间戳类型（0-毫秒，1-秒），默认0
            </summary>
        </member>
        <member name="T:Yitter.IdGenerator.DefaultIdGenerator">
            <summary>
            默认实现
            </summary>
        </member>
        <member name="T:Yitter.IdGenerator.YitIdHelper">
            <summary>
            这是一个调用的例子，默认情况下，单机集成者可以直接使用 NextId()。
            </summary>
        </member>
        <member name="M:Yitter.IdGenerator.YitIdHelper.SetIdGenerator(Yitter.IdGenerator.IdGeneratorOptions)">
            <summary>
            设置参数，建议程序初始化时执行一次
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Yitter.IdGenerator.YitIdHelper.NextId">
            <summary>
            生成新的Id
            调用本方法前，请确保调用了 SetIdGenerator 方法做初始化。
            否则将会初始化一个WorkerId为1的对象。
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
